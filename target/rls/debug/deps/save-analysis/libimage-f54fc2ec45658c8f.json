{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14","program":"/Users/louisjohnson/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","image","--edition=2018","/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=f54fc2ec45658c8f","-C","extra-filename=-f54fc2ec45658c8f","--out-dir","/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps","-L","dependency=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps","--extern","bytemuck=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libbytemuck-67537be6d5ce886a.rmeta","--extern","byteorder=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libbyteorder-c5d91951775a143b.rmeta","--extern","color_quant=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libcolor_quant-cc3b329349af9cb9.rmeta","--extern","gif=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libgif-afad92c2d5335a67.rmeta","--extern","jpeg=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libjpeg_decoder-69aaeeae0af9b3ea.rmeta","--extern","num_iter=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libnum_iter-da4b27bee8302e51.rmeta","--extern","num_rational=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libnum_rational-8c593eb1dfb01d52.rmeta","--extern","num_traits=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libnum_traits-c5be84682887d5f3.rmeta","--extern","png=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libpng-5a143ca8ee0121b1.rmeta","--extern","scoped_threadpool=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libscoped_threadpool-af4a74a6a40d810d.rmeta","--extern","tiff=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libtiff-5e28307b8a6936fb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/louisjohnson/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libimage-f54fc2ec45658c8f.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[12982194841340513390,14001119788030805141]},"crate_root":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src","external_crates":[{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":15,"id":{"name":"tiff","disambiguator":[662377989709877351,3490717690483222133]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","num":16,"id":{"name":"jpeg_decoder","disambiguator":[8289907222635864694,279643545098116570]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":17,"id":{"name":"rayon","disambiguator":[2771611394852476802,1191506866587794836]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":18,"id":{"name":"either","disambiguator":[17442518817369317400,1379450049368640833]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":19,"id":{"name":"rayon_core","disambiguator":[14369403567155052017,5728726755436456359]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":20,"id":{"name":"crossbeam_channel","disambiguator":[11194305836894551362,2398764525219303571]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":21,"id":{"name":"cfg_if","disambiguator":[11553434891824061954,15781148962341213441]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[7928778479412450553,4615850446483520631]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":23,"id":{"name":"lazy_static","disambiguator":[14839071252340993957,4173087639422160489]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":24,"id":{"name":"crossbeam_deque","disambiguator":[8494809815889188741,14703930481041941218]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":25,"id":{"name":"crossbeam_epoch","disambiguator":[1656450516234567882,7676045993150912578]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":26,"id":{"name":"scopeguard","disambiguator":[18252883105167658003,9859472806098097927]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":27,"id":{"name":"memoffset","disambiguator":[15664709325138113991,9661819107685234365]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":28,"id":{"name":"num_cpus","disambiguator":[4938249818658119143,6728409976456090822]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":29,"id":{"name":"libc","disambiguator":[1197601596857793363,2098420630786241941]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":30,"id":{"name":"miniz_oxide","disambiguator":[4423663006600879489,815509790985534745]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":31,"id":{"name":"adler","disambiguator":[90755235332610136,7435980543534549115]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","num":32,"id":{"name":"weezl","disambiguator":[17999653381619401868,3768301564094437981]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","num":33,"id":{"name":"num_traits","disambiguator":[3026637861413261554,15394250344823053000]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","num":34,"id":{"name":"byteorder","disambiguator":[12080585190903974066,3959327137758829327]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","num":35,"id":{"name":"gif","disambiguator":[2061976320223206446,3845890168723501131]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","num":36,"id":{"name":"color_quant","disambiguator":[17211418762331747578,17982352778426425989]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","num":37,"id":{"name":"num_rational","disambiguator":[3680470153713672205,11140106590897365994]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","num":38,"id":{"name":"num_integer","disambiguator":[17646211646579987930,3101347387828791370]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","num":39,"id":{"name":"scoped_threadpool","disambiguator":[13387287353982523973,17194112729274116259]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","num":40,"id":{"name":"num_iter","disambiguator":[16302854898454712290,11258153562837313591]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","num":41,"id":{"name":"png","disambiguator":[16714041981550324288,6231942989335829294]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","num":42,"id":{"name":"bitflags","disambiguator":[9381044780198995522,13151883482406827307]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","num":43,"id":{"name":"deflate","disambiguator":[13520766343983683474,13190113219310672363]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","num":44,"id":{"name":"adler32","disambiguator":[4142976467485996011,18359325288456695578]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","num":45,"id":{"name":"crc32fast","disambiguator":[15626599347558113975,18109832552449081933]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","num":46,"id":{"name":"miniz_oxide","disambiguator":[9838458631893433694,15935641878556723716]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","num":47,"id":{"name":"bytemuck","disambiguator":[7221008603350589257,6859148759202288145]}}],"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":0,"byte_end":12891,"line_start":1,"line_end":395,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5626},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3952,"byte_end":3961,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5665},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3963,"byte_end":3980,"line_start":106,"line_end":106,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6091},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4007,"byte_end":4011,"line_start":108,"line_end":108,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6092},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4007,"byte_end":4011,"line_start":108,"line_end":108,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":6178},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4013,"byte_end":4018,"line_start":108,"line_end":108,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6179},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4013,"byte_end":4018,"line_start":108,"line_end":108,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":6033},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":108,"line_end":108,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6034},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":108,"line_end":108,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":6120},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4025,"byte_end":4029,"line_start":108,"line_end":108,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6121},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4025,"byte_end":4029,"line_start":108,"line_end":108,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":6062},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4031,"byte_end":4034,"line_start":108,"line_end":108,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6063},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4031,"byte_end":4034,"line_start":108,"line_end":108,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":6149},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4036,"byte_end":4040,"line_start":108,"line_end":108,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6150},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4036,"byte_end":4040,"line_start":108,"line_end":108,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4171},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4067,"byte_end":4077,"line_start":110,"line_end":110,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4079,"byte_end":4090,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3985},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4117,"byte_end":4133,"line_start":112,"line_end":112,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4011},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4151,"byte_end":4163,"line_start":113,"line_end":113,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3998},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4181,"byte_end":4197,"line_start":114,"line_end":114,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3966},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4215,"byte_end":4227,"line_start":115,"line_end":115,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3979},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4245,"byte_end":4260,"line_start":116,"line_end":116,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3988},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4278,"byte_end":4290,"line_start":117,"line_end":117,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6303},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4308,"byte_end":4319,"line_start":118,"line_end":118,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6348},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4337,"byte_end":4354,"line_start":119,"line_end":119,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6384},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4372,"byte_end":4380,"line_start":120,"line_end":120,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6399},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4427,"byte_end":4433,"line_start":122,"line_end":122,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4023},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4451,"byte_end":4459,"line_start":123,"line_end":123,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4506,"byte_end":4520,"line_start":126,"line_end":126,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3474},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4539,"byte_end":4548,"line_start":127,"line_end":127,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5595},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4599,"byte_end":4610,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3472},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4629,"byte_end":4637,"line_start":130,"line_end":130,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3473},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4656,"byte_end":4665,"line_start":131,"line_end":131,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4356},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4690,"byte_end":4701,"line_start":133,"line_end":133,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4071},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4738,"byte_end":4753,"line_start":136,"line_end":136,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4077},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4755,"byte_end":4764,"line_start":136,"line_end":136,"column_start":42,"column_end":51},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4108},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4766,"byte_end":4771,"line_start":136,"line_end":136,"column_start":53,"column_end":58},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4841,"byte_end":4853,"line_start":139,"line_end":139,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4855,"byte_end":4859,"line_start":139,"line_end":139,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3899},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4888,"byte_end":4904,"line_start":140,"line_end":140,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3900},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4906,"byte_end":4934,"line_start":140,"line_end":140,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3891},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4936,"byte_end":4940,"line_start":140,"line_end":140,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3895},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4961,"byte_end":4972,"line_start":141,"line_end":141,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4974,"byte_end":4997,"line_start":141,"line_end":141,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3893},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":4999,"byte_end":5015,"line_start":141,"line_end":141,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6258},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5044,"byte_end":5056,"line_start":143,"line_end":143,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5575},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5086,"byte_end":5091,"line_start":145,"line_end":145,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5568},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5093,"byte_end":5098,"line_start":145,"line_end":145,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3102},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5100,"byte_end":5106,"line_start":145,"line_end":145,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3459},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5329,"byte_end":5342,"line_start":154,"line_end":154,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3273},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5352,"byte_end":5367,"line_start":155,"line_end":155,"column_start":9,"column_end":24},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3318},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5377,"byte_end":5395,"line_start":156,"line_end":156,"column_start":9,"column_end":27},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3296},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5405,"byte_end":5418,"line_start":157,"line_end":157,"column_start":9,"column_end":22},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3338},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5428,"byte_end":5444,"line_start":158,"line_end":158,"column_start":9,"column_end":25},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3175},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5454,"byte_end":5460,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3200},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5470,"byte_end":5479,"line_start":160,"line_end":160,"column_start":9,"column_end":18},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3222},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5489,"byte_end":5493,"line_start":161,"line_end":161,"column_start":9,"column_end":13},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":3249},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5503,"byte_end":5510,"line_start":162,"line_end":162,"column_start":9,"column_end":16},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":117}},{"kind":"Use","ref_id":{"krate":0,"index":4312},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/mod.rs","byte_start":30681,"byte_end":30685,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":4337},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39602,"byte_end":39612,"line_start":9,"line_end":9,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4342},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39650,"byte_end":39660,"line_start":11,"line_end":11,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4343},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39650,"byte_end":39660,"line_start":11,"line_end":11,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":164}},{"kind":"Use","ref_id":{"krate":0,"index":4344},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39662,"byte_end":39670,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4345},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39662,"byte_end":39670,"line_start":11,"line_end":11,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":4346},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39672,"byte_end":39680,"line_start":11,"line_end":11,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4347},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39672,"byte_end":39680,"line_start":11,"line_end":11,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":166}},{"kind":"Use","ref_id":{"krate":0,"index":4338},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39682,"byte_end":39689,"line_start":11,"line_end":11,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4339},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39682,"byte_end":39689,"line_start":11,"line_end":11,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":4340},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39691,"byte_end":39699,"line_start":11,"line_end":11,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4341},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39691,"byte_end":39699,"line_start":11,"line_end":11,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":168}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39758,"byte_end":39773,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39775,"byte_end":39799,"line_start":15,"line_end":15,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39801,"byte_end":39814,"line_start":15,"line_end":15,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39816,"byte_end":39838,"line_start":15,"line_end":15,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39840,"byte_end":39849,"line_start":15,"line_end":15,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39855,"byte_end":39873,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39875,"byte_end":39884,"line_start":16,"line_end":16,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39886,"byte_end":39894,"line_start":16,"line_end":16,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39896,"byte_end":39908,"line_start":16,"line_end":16,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39910,"byte_end":39921,"line_start":16,"line_end":16,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39923,"byte_end":39935,"line_start":16,"line_end":16,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39937,"byte_end":39955,"line_start":16,"line_end":16,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39957,"byte_end":39973,"line_start":16,"line_end":16,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40020,"byte_end":40024,"line_start":20,"line_end":20,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40026,"byte_end":40035,"line_start":20,"line_end":20,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":410},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40037,"byte_end":40043,"line_start":20,"line_end":20,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40045,"byte_end":40054,"line_start":20,"line_end":20,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":415},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40056,"byte_end":40065,"line_start":20,"line_end":20,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40115,"byte_end":40123,"line_start":23,"line_end":23,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40125,"byte_end":40133,"line_start":23,"line_end":23,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40135,"byte_end":40141,"line_start":23,"line_end":23,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40143,"byte_end":40152,"line_start":23,"line_end":23,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40154,"byte_end":40163,"line_start":23,"line_end":23,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40165,"byte_end":40177,"line_start":23,"line_end":23,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40179,"byte_end":40185,"line_start":23,"line_end":23,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40212,"byte_end":40219,"line_start":24,"line_end":24,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":4333},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40212,"byte_end":40219,"line_start":24,"line_end":24,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":197}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40221,"byte_end":40229,"line_start":24,"line_end":24,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":150}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/mod.rs","byte_start":109866,"byte_end":109872,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":446}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":191169,"byte_end":191179,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":720}},{"kind":"Use","ref_id":{"krate":0,"index":950},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":191282,"byte_end":191292,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":720}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":191294,"byte_end":191304,"line_start":12,"line_end":12,"column_start":37,"column_end":47},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":720}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328658,"byte_end":328659,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HDRAdapter, read_raw_file, RGBE8Pixel, HdrImageDecoderIterator, HdrAdapter, rgbe8, Rgbe8Pixel, HdrMetadata, HdrDecoder, HDRImageDecoderIterator, SIGNATURE, HdrReader, HDRMetadata","parent":{"krate":0,"index":1360}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328658,"byte_end":328659,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HDREncoder, HdrEncoder, to_rgbe8","parent":{"krate":0,"index":1360}},{"kind":"Use","ref_id":{"krate":0,"index":1634},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381640,"byte_end":381650,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":1588}},{"kind":"Use","ref_id":{"krate":0,"index":1697},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381697,"byte_end":381707,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"alias_span":null,"name":"IcoEncoder","value":"","parent":{"krate":0,"index":1588}},{"kind":"Use","ref_id":{"krate":0,"index":1700},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381709,"byte_end":381719,"line_start":11,"line_end":11,"column_start":37,"column_end":47},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1588}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399950,"byte_end":399961,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1715}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":400064,"byte_end":400075,"line_start":12,"line_end":12,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":1715}},{"kind":"Use","ref_id":{"krate":0,"index":5026},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":400077,"byte_end":400089,"line_start":12,"line_end":12,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1715}},{"kind":"Use","ref_id":{"krate":0,"index":5008},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":400091,"byte_end":400107,"line_start":12,"line_end":12,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1715}},{"kind":"Use","ref_id":{"krate":0,"index":1873},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":400109,"byte_end":400120,"line_start":12,"line_end":12,"column_start":70,"column_end":81},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1715}},{"kind":"Use","ref_id":{"krate":0,"index":2204},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495103,"byte_end":495113,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495216,"byte_end":495226,"line_start":9,"line_end":9,"column_start":25,"column_end":35},"alias_span":null,"name":"PnmEncoder","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":2344},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495228,"byte_end":495238,"line_start":9,"line_end":9,"column_start":37,"column_end":47},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5306},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495296,"byte_end":495311,"line_start":11,"line_end":11,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5316},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495313,"byte_end":495330,"line_start":11,"line_end":11,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5277},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495332,"byte_end":495344,"line_start":11,"line_end":11,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5286},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495346,"byte_end":495359,"line_start":11,"line_end":11,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5296},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495384,"byte_end":495396,"line_start":12,"line_end":12,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":2442},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495516,"byte_end":495525,"line_start":14,"line_end":14,"column_start":24,"column_end":33},"alias_span":null,"name":"PnmHeader","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":2445},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495527,"byte_end":495536,"line_start":14,"line_end":14,"column_start":35,"column_end":44},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5253},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495538,"byte_end":495548,"line_start":14,"line_end":14,"column_start":46,"column_end":56},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":2441},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495550,"byte_end":495560,"line_start":14,"line_end":14,"column_start":58,"column_end":68},"alias_span":null,"name":"PnmSubtype","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":5237},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":495562,"byte_end":495576,"line_start":14,"line_end":14,"column_start":70,"column_end":84},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":2094}},{"kind":"Use","ref_id":{"krate":0,"index":2526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":584767,"byte_end":584777,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":2490}},{"kind":"Use","ref_id":{"krate":0,"index":2596},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":584843,"byte_end":584853,"line_start":13,"line_end":13,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":2490}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/mod.rs","byte_start":624959,"byte_end":624970,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":2731}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8809,"byte_end":8819,"line_start":260,"line_end":260,"column_start":34,"column_end":44},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":3000}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8821,"byte_end":8831,"line_start":260,"line_end":260,"column_start":46,"column_end":56},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":3000}},{"kind":"Use","ref_id":{"krate":0,"index":950},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8833,"byte_end":8843,"line_start":260,"line_end":260,"column_start":58,"column_end":68},"alias_span":null,"name":"BmpEncoder","value":"","parent":{"krate":0,"index":3000}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8991,"byte_end":9001,"line_start":266,"line_end":266,"column_start":33,"column_end":43},"alias_span":null,"name":"DdsDecoder","value":"","parent":{"krate":0,"index":3005}},{"kind":"Use","ref_id":{"krate":0,"index":1094},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9192,"byte_end":9202,"line_start":274,"line_end":274,"column_start":9,"column_end":19},"alias_span":null,"name":"DXTEncoder","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9204,"byte_end":9213,"line_start":274,"line_end":274,"column_start":21,"column_end":30},"alias_span":null,"name":"DXTReader","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":4738},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9215,"byte_end":9225,"line_start":274,"line_end":274,"column_start":32,"column_end":42},"alias_span":null,"name":"DXTVariant","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9227,"byte_end":9237,"line_start":274,"line_end":274,"column_start":44,"column_end":54},"alias_span":null,"name":"DxtDecoder","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9239,"byte_end":9249,"line_start":274,"line_end":274,"column_start":56,"column_end":66},"alias_span":null,"name":"DxtEncoder","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9251,"byte_end":9260,"line_start":274,"line_end":274,"column_start":68,"column_end":77},"alias_span":null,"name":"DxtReader","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9262,"byte_end":9272,"line_start":274,"line_end":274,"column_start":79,"column_end":89},"alias_span":null,"name":"DxtVariant","value":"","parent":{"krate":0,"index":3007}},{"kind":"Use","ref_id":{"krate":0,"index":1209},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9452,"byte_end":9467,"line_start":281,"line_end":281,"column_start":39,"column_end":54},"alias_span":null,"name":"FarbfeldDecoder","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":1231},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9469,"byte_end":9484,"line_start":281,"line_end":281,"column_start":56,"column_end":71},"alias_span":null,"name":"FarbfeldEncoder","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":1179},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9486,"byte_end":9500,"line_start":281,"line_end":281,"column_start":73,"column_end":87},"alias_span":null,"name":"FarbfeldReader","value":"","parent":{"krate":0,"index":3016}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9674,"byte_end":9681,"line_start":288,"line_end":288,"column_start":34,"column_end":41},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":3021}},{"kind":"Use","ref_id":{"krate":0,"index":1278},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9683,"byte_end":9693,"line_start":288,"line_end":288,"column_start":43,"column_end":53},"alias_span":null,"name":"GifDecoder","value":"","parent":{"krate":0,"index":3021}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9695,"byte_end":9705,"line_start":288,"line_end":288,"column_start":55,"column_end":65},"alias_span":null,"name":"GifEncoder","value":"","parent":{"krate":0,"index":3021}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9707,"byte_end":9716,"line_start":288,"line_end":288,"column_start":67,"column_end":76},"alias_span":null,"name":"GifReader","value":"","parent":{"krate":0,"index":3021}},{"kind":"Use","ref_id":{"krate":0,"index":4756},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9718,"byte_end":9724,"line_start":288,"line_end":288,"column_start":78,"column_end":84},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":3021}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9916,"byte_end":9929,"line_start":296,"line_end":296,"column_start":9,"column_end":22},"alias_span":null,"name":"read_raw_file","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9931,"byte_end":9936,"line_start":296,"line_end":296,"column_start":24,"column_end":29},"alias_span":null,"name":"rgbe8","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1584},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9938,"byte_end":9946,"line_start":296,"line_end":296,"column_start":31,"column_end":39},"alias_span":null,"name":"to_rgbe8","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1408},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9948,"byte_end":9958,"line_start":296,"line_end":296,"column_start":41,"column_end":51},"alias_span":null,"name":"HDRAdapter","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1547},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9960,"byte_end":9970,"line_start":296,"line_end":296,"column_start":53,"column_end":63},"alias_span":null,"name":"HDREncoder","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1481},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9972,"byte_end":9995,"line_start":296,"line_end":296,"column_start":65,"column_end":88},"alias_span":null,"name":"HDRImageDecoderIterator","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1511},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10005,"byte_end":10016,"line_start":297,"line_end":297,"column_start":9,"column_end":20},"alias_span":null,"name":"HDRMetadata","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":4840},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10018,"byte_end":10028,"line_start":297,"line_end":297,"column_start":22,"column_end":32},"alias_span":null,"name":"HdrAdapter","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":4847},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10030,"byte_end":10040,"line_start":297,"line_end":297,"column_start":34,"column_end":44},"alias_span":null,"name":"HdrDecoder","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1544},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10042,"byte_end":10052,"line_start":297,"line_end":297,"column_start":46,"column_end":56},"alias_span":null,"name":"HdrEncoder","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10054,"byte_end":10077,"line_start":297,"line_end":297,"column_start":58,"column_end":81},"alias_span":null,"name":"HdrImageDecoderIterator","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":4876},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10079,"byte_end":10090,"line_start":297,"line_end":297,"column_start":83,"column_end":94},"alias_span":null,"name":"HdrMetadata","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1415},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10100,"byte_end":10109,"line_start":298,"line_end":298,"column_start":9,"column_end":18},"alias_span":null,"name":"HdrReader","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10111,"byte_end":10121,"line_start":298,"line_end":298,"column_start":20,"column_end":30},"alias_span":null,"name":"RGBE8Pixel","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":4856},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10123,"byte_end":10133,"line_start":298,"line_end":298,"column_start":32,"column_end":42},"alias_span":null,"name":"Rgbe8Pixel","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1439},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10135,"byte_end":10144,"line_start":298,"line_end":298,"column_start":44,"column_end":53},"alias_span":null,"name":"SIGNATURE","value":"","parent":{"krate":0,"index":3028}},{"kind":"Use","ref_id":{"krate":0,"index":1700},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10336,"byte_end":10346,"line_start":306,"line_end":306,"column_start":34,"column_end":44},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":3046}},{"kind":"Use","ref_id":{"krate":0,"index":1634},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10348,"byte_end":10358,"line_start":306,"line_end":306,"column_start":46,"column_end":56},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":3046}},{"kind":"Use","ref_id":{"krate":0,"index":1697},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10360,"byte_end":10370,"line_start":306,"line_end":306,"column_start":58,"column_end":68},"alias_span":null,"name":"IcoEncoder","value":"","parent":{"krate":0,"index":3046}},{"kind":"Use","ref_id":{"krate":0,"index":1873},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10571,"byte_end":10582,"line_start":314,"line_end":314,"column_start":9,"column_end":20},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":3051}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10584,"byte_end":10595,"line_start":314,"line_end":314,"column_start":22,"column_end":33},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":3051}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10597,"byte_end":10608,"line_start":314,"line_end":314,"column_start":35,"column_end":46},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":3051}},{"kind":"Use","ref_id":{"krate":0,"index":5026},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10610,"byte_end":10622,"line_start":314,"line_end":314,"column_start":48,"column_end":60},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":3051}},{"kind":"Use","ref_id":{"krate":0,"index":5008},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10624,"byte_end":10640,"line_start":314,"line_end":314,"column_start":62,"column_end":78},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":3051}},{"kind":"Use","ref_id":{"krate":0,"index":2039},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10842,"byte_end":10853,"line_start":323,"line_end":323,"column_start":9,"column_end":20},"alias_span":null,"name":"ApngDecoder","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":5041},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10855,"byte_end":10870,"line_start":323,"line_end":323,"column_start":22,"column_end":37},"alias_span":null,"name":"CompressionType","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":5067},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10872,"byte_end":10882,"line_start":323,"line_end":323,"column_start":39,"column_end":49},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":2070},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10884,"byte_end":10894,"line_start":323,"line_end":323,"column_start":51,"column_end":61},"alias_span":null,"name":"PNGEncoder","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10896,"byte_end":10905,"line_start":323,"line_end":323,"column_start":63,"column_end":72},"alias_span":null,"name":"PNGReader","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":2015},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10907,"byte_end":10917,"line_start":323,"line_end":323,"column_start":74,"column_end":84},"alias_span":null,"name":"PngDecoder","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":2065},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10919,"byte_end":10929,"line_start":323,"line_end":323,"column_start":86,"column_end":96},"alias_span":null,"name":"PngEncoder","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":2001},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10939,"byte_end":10948,"line_start":324,"line_end":324,"column_start":9,"column_end":18},"alias_span":null,"name":"PngReader","value":"","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":5306},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11184,"byte_end":11199,"line_start":333,"line_end":333,"column_start":9,"column_end":24},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":5316},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11201,"byte_end":11218,"line_start":333,"line_end":333,"column_start":26,"column_end":43},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":5277},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11220,"byte_end":11232,"line_start":333,"line_end":333,"column_start":45,"column_end":57},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":5286},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11234,"byte_end":11247,"line_start":333,"line_end":333,"column_start":59,"column_end":72},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2344},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11249,"byte_end":11259,"line_start":333,"line_end":333,"column_start":74,"column_end":84},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2445},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11261,"byte_end":11270,"line_start":333,"line_end":333,"column_start":86,"column_end":95},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":5253},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11280,"byte_end":11290,"line_start":334,"line_end":334,"column_start":9,"column_end":19},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":5296},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11292,"byte_end":11304,"line_start":334,"line_end":334,"column_start":21,"column_end":33},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2204},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11306,"byte_end":11316,"line_start":334,"line_end":334,"column_start":35,"column_end":45},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2340},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11318,"byte_end":11328,"line_start":334,"line_end":334,"column_start":47,"column_end":57},"alias_span":null,"name":"PnmEncoder","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2442},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11330,"byte_end":11339,"line_start":334,"line_end":334,"column_start":59,"column_end":68},"alias_span":null,"name":"PnmHeader","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2441},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11341,"byte_end":11351,"line_start":334,"line_end":334,"column_start":70,"column_end":80},"alias_span":null,"name":"PnmSubtype","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":5237},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11353,"byte_end":11367,"line_start":334,"line_end":334,"column_start":82,"column_end":96},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":3068}},{"kind":"Use","ref_id":{"krate":0,"index":2526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11560,"byte_end":11570,"line_start":342,"line_end":342,"column_start":34,"column_end":44},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":3083}},{"kind":"Use","ref_id":{"krate":0,"index":2596},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11572,"byte_end":11582,"line_start":342,"line_end":342,"column_start":46,"column_end":56},"alias_span":null,"name":"TgaEncoder","value":"","parent":{"krate":0,"index":3083}},{"kind":"Use","ref_id":{"krate":0,"index":2689},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11774,"byte_end":11785,"line_start":349,"line_end":349,"column_start":35,"column_end":46},"alias_span":null,"name":"TiffDecoder","value":"","parent":{"krate":0,"index":3087}},{"kind":"Use","ref_id":{"krate":0,"index":2719},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11787,"byte_end":11798,"line_start":349,"line_end":349,"column_start":48,"column_end":59},"alias_span":null,"name":"TiffEncoder","value":"","parent":{"krate":0,"index":3087}},{"kind":"Use","ref_id":{"krate":0,"index":2702},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11800,"byte_end":11810,"line_start":349,"line_end":349,"column_start":61,"column_end":71},"alias_span":null,"name":"TiffReader","value":"","parent":{"krate":0,"index":3087}},{"kind":"Use","ref_id":{"krate":0,"index":2810},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11989,"byte_end":11992,"line_start":356,"line_end":356,"column_start":35,"column_end":38},"alias_span":null,"name":"vp8","value":"","parent":{"krate":0,"index":3092}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11994,"byte_end":12005,"line_start":356,"line_end":356,"column_start":40,"column_end":51},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":3092}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":0,"byte_end":12891,"line_start":1,"line_end":395,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":6462},{"krate":0,"index":9},{"krate":0,"index":6464},{"krate":0,"index":10},{"krate":0,"index":6466},{"krate":0,"index":11},{"krate":0,"index":6468},{"krate":0,"index":12},{"krate":0,"index":6470},{"krate":0,"index":13},{"krate":0,"index":6472},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":117},{"krate":0,"index":128},{"krate":0,"index":150},{"krate":0,"index":446},{"krate":0,"index":540},{"krate":0,"index":719},{"krate":0,"index":3000},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3016},{"krate":0,"index":3021},{"krate":0,"index":3028},{"krate":0,"index":3046},{"krate":0,"index":3051},{"krate":0,"index":3058},{"krate":0,"index":3068},{"krate":0,"index":3083},{"krate":0,"index":3087},{"krate":0,"index":3092},{"krate":0,"index":3096},{"krate":0,"index":3137},{"krate":0,"index":3482},{"krate":0,"index":3720},{"krate":0,"index":3901},{"krate":0,"index":4056},{"krate":0,"index":4154},{"krate":0,"index":6455},{"krate":0,"index":4170}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"! # Overview","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"! basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"! [README.md file which is most easily viewed on","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"! github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"! encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"! without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"! supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"! dependencies.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # High level API","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Load images using [`io::Reader`]:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! # use std::io::Cursor;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":842,"byte_end":868,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"! use image::io::Reader as ImageReader;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":869,"byte_end":910,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"! # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":911,"byte_end":961,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"! # let bytes = vec![0u8];","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":962,"byte_end":990,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":991,"byte_end":994,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":995,"byte_end":1053,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"! let img2 = ImageReader::new(Cursor::new(bytes)).decode()?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1054,"byte_end":1116,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"! # Ok(())","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1117,"byte_end":1129,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1130,"byte_end":1137,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1138,"byte_end":1145,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1146,"byte_end":1149,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1150,"byte_end":1207,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1208,"byte_end":1211,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1212,"byte_end":1230,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! # use std::io::Write;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1231,"byte_end":1256,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"! # use image::ImageOutputFormat;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1257,"byte_end":1292,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"! # use image::DynamicImage;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1293,"byte_end":1323,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"! # #[cfg(feature = \"png\")]","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1324,"byte_end":1353,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"! # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1354,"byte_end":1404,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"! # let img: DynamicImage = unimplemented!();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1405,"byte_end":1452,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"! # let img2: DynamicImage = unimplemented!();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1453,"byte_end":1501,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"! img.save(\"empty.jpg\")?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1502,"byte_end":1529,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1530,"byte_end":1533,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1534,"byte_end":1574,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"! img2.write_to(&mut bytes, image::ImageOutputFormat::Png)?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1575,"byte_end":1637,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"! # Ok(())","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1638,"byte_end":1650,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1651,"byte_end":1658,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1659,"byte_end":1706,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1707,"byte_end":1714,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1715,"byte_end":1718,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1719,"byte_end":1842,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1847,"byte_end":1895,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"! [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1896,"byte_end":1952,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"! [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1953,"byte_end":1994,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1995,"byte_end":1998,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! # Image buffers","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":1999,"byte_end":2018,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2019,"byte_end":2022,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The two main types for storing images:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2023,"byte_end":2065,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"! * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2066,"byte_end":2132,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"! * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2133,"byte_end":2211,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"!     and supports conversions between them.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2212,"byte_end":2258,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2259,"byte_end":2262,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! As well as a few more specialized options:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2263,"byte_end":2309,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"! * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2310,"byte_end":2366,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"! * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2367,"byte_end":2443,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"! * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2444,"byte_end":2524,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"!     matrices and foreign interfaces.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2525,"byte_end":2565,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2566,"byte_end":2569,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2570,"byte_end":2623,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"! [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2624,"byte_end":2669,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"! [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2670,"byte_end":2714,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"! [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2715,"byte_end":2759,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"! [`flat`]: flat/index.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2760,"byte_end":2789,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! # Low level encoding/decoding API","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2794,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2832,"byte_end":2835,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! The [`ImageDecoder`] and [`ImageDecoderExt`] traits are implemented for many image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2836,"byte_end":2927,"line_start":76,"line_end":76,"column_start":1,"column_end":92}},{"value":"! formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":2928,"byte_end":3026,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"! produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3027,"byte_end":3089,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3090,"byte_end":3093,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3094,"byte_end":3176,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3177,"byte_end":3180,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3181,"byte_end":3259,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"! [`ImageDecoderExt`]: trait.ImageDecoderExt.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3260,"byte_end":3311,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"! [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3312,"byte_end":3357,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"! [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3358,"byte_end":3403,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3404,"byte_end":3426,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3427,"byte_end":3458,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3459,"byte_end":3484,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3485,"byte_end":3505,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3506,"byte_end":3544,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3642,"byte_end":3683,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"allow(clippy :: wrong_self_convention, clippy :: enum_variant_names)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":3724,"byte_end":3792,"line_start":95,"line_end":95,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":4171},{"krate":0,"index":4190},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4197},{"krate":0,"index":4219},{"krate":0,"index":4217},{"krate":0,"index":4214},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4253},{"krate":0,"index":4251},{"krate":0,"index":4248},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":4284},{"krate":0,"index":4282},{"krate":0,"index":4279},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4286},{"krate":0,"index":4310},{"krate":0,"index":4308},{"krate":0,"index":4305},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":63},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"! Contains detailed error representation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":12893,"byte_end":12936,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":12937,"byte_end":12940,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":12941,"byte_end":13034,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"! subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13035,"byte_end":13134,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"! respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13135,"byte_end":13210,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13211,"byte_end":13214,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13215,"byte_end":13314,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"! through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13315,"byte_end":13413,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"! may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13414,"byte_end":13509,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"! `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13510,"byte_end":13606,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"! you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13607,"byte_end":13703,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"! external means then you could inspect the error type in slightly more detail.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13704,"byte_end":13785,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13786,"byte_end":13789,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! [`ImageError`]: enum.ImageError.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13790,"byte_end":13830,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14542,"byte_end":14550,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14259,"byte_end":14303,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14308,"byte_end":14311,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14316,"byte_end":14409,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14414,"byte_end":14497,"line_start":32,"line_end":32,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14502,"byte_end":14537,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4175},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14936,"byte_end":14944,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14572,"byte_end":14616,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14621,"byte_end":14624,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14629,"byte_end":14715,"line_start":38,"line_end":38,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14720,"byte_end":14813,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14818,"byte_end":14911,"line_start":40,"line_end":40,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14916,"byte_end":14931,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4178},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15184,"byte_end":15193,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14966,"byte_end":15014,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15019,"byte_end":15022,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15027,"byte_end":15118,"line_start":46,"line_end":46,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15123,"byte_end":15179,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4181},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15453,"byte_end":15459,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15216,"byte_end":15293,"line_start":50,"line_end":50,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15298,"byte_end":15301,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15306,"byte_end":15401,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15406,"byte_end":15448,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15797,"byte_end":15808,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15478,"byte_end":15542,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15547,"byte_end":15550,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15555,"byte_end":15639,"line_start":58,"line_end":58,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15644,"byte_end":15681,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15686,"byte_end":15733,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15738,"byte_end":15792,"line_start":61,"line_end":61,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4187},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15899,"byte_end":15906,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15833,"byte_end":15894,"line_start":64,"line_end":64,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14242,"byte_end":14252,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"pub enum ImageError {\n\n    /// An error was encountered while decoding.\n    ///\n    /// This means that the input data did not conform to the specification of some image format,\n    /// or that no format could be determined, or that it did not match format specific\n    /// requirements set by the caller.\n    Decoding(DecodingError),\n\n    /// An error was encountered while encoding.\n    ///\n    /// The input image can not be encoded with the chosen format, for example because the\n    /// specification has no representation for its color space or because a necessary conversion\n    /// is ambiguous. In some cases it might also happen that the dimensions can not be used with\n    /// the format.\n    Encoding(EncodingError),\n\n    /// An error was encountered in input arguments.\n    ///\n    /// This is a catch-all case for strictly internal operations such as scaling, conversions,\n    /// etc. that involve no external format specifications.\n    Parameter(ParameterError),\n\n    /// Completing the operation would have required more resources than allowed.\n    ///\n    /// Errors of this type are limits set by the user or environment, *not* inherent in a specific\n    /// format or operation that was executed.\n    Limits(LimitError),\n\n    /// An operation can not be completed by the chosen abstraction.\n    ///\n    /// This means that it might be possible for the operation to succeed in general but\n    /// * it requires a disabled feature,\n    /// * the implementation does not yet exist, or\n    /// * no abstraction for a lower level could be found.\n    Unsupported(UnsupportedError),\n\n    /// An error occurred while interacting with the environment.\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4187}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":13984,"byte_end":14032,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14033,"byte_end":14036,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14037,"byte_end":14129,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":14130,"byte_end":14215,"line_start":26,"line_end":26,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":4192},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16138,"byte_end":16154,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":4193},{"krate":0,"index":4194}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15922,"byte_end":15979,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15980,"byte_end":15983,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":15984,"byte_end":16043,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16044,"byte_end":16047,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16048,"byte_end":16109,"line_start":72,"line_end":72,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4198},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16393,"byte_end":16398,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16341,"byte_end":16388,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4201},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16465,"byte_end":16471,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16423,"byte_end":16460,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16615,"byte_end":16629,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16494,"byte_end":16531,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16536,"byte_end":16610,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16662,"byte_end":16677,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4197},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16314,"byte_end":16334,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"pub enum UnsupportedErrorKind {\n\n    /// The required color type can not be handled.\n    Color(ExtendedColorType),\n\n    /// An image format is not supported.\n    Format(ImageFormatHint),\n\n    /// Some feature specified by string.\n    /// This is discouraged and is likely to get deprecated (but not removed).\n    GenericFeature(String),\n\n    #[doc(hidden)]\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4207}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16221,"byte_end":16263,"line_start":79,"line_end":79,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4221},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16996,"byte_end":17009,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16703,"byte_end":16756,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16757,"byte_end":16760,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16761,"byte_end":16855,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16856,"byte_end":16895,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16896,"byte_end":16899,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":16900,"byte_end":16967,"line_start":98,"line_end":98,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4226},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17391,"byte_end":17405,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":4227},{"krate":0,"index":4228}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17099,"byte_end":17148,"line_start":106,"line_end":106,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17149,"byte_end":17152,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17153,"byte_end":17248,"line_start":108,"line_end":108,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17249,"byte_end":17288,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17289,"byte_end":17292,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17293,"byte_end":17362,"line_start":111,"line_end":111,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4232},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17653,"byte_end":17670,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17612,"byte_end":17648,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17768,"byte_end":17781,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17676,"byte_end":17763,"line_start":123,"line_end":123,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4236},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17909,"byte_end":17916,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17787,"byte_end":17825,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17830,"byte_end":17904,"line_start":126,"line_end":126,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4239},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17977,"byte_end":17987,"line_start":129,"line_end":129,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17930,"byte_end":17972,"line_start":128,"line_end":128,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18071,"byte_end":18086,"line_start":132,"line_end":132,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4231},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18012,"byte_end":18066,"line_start":131,"line_end":131,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4231},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17587,"byte_end":17605,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"pub enum ParameterErrorKind {\n\n    /// The dimensions passed are wrong.\n    DimensionMismatch,\n\n    /// Repeated an operation for which error that could not be cloned was emitted already.\n    FailedAlready,\n\n    /// A string describing the parameter.\n    /// This is discouraged and is likely to get deprecated (but not removed).\n    Generic(String),\n\n    /// The end of the image has been reached.\n    NoMoreData,\n\n    #[doc(hidden)]\n    /// Do not use this, not part of stability guarantees.\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4234},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4241}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":17495,"byte_end":17536,"line_start":118,"line_end":118,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4255},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18405,"byte_end":18418,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":4256},{"krate":0,"index":4257}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18112,"byte_end":18165,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18166,"byte_end":18169,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18170,"byte_end":18264,"line_start":137,"line_end":137,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18265,"byte_end":18304,"line_start":138,"line_end":138,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18305,"byte_end":18308,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18309,"byte_end":18376,"line_start":140,"line_end":140,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4260},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18818,"byte_end":18828,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":4261}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18507,"byte_end":18584,"line_start":147,"line_end":147,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18585,"byte_end":18588,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18589,"byte_end":18681,"line_start":149,"line_end":149,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18682,"byte_end":18721,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18722,"byte_end":18725,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18726,"byte_end":18789,"line_start":152,"line_end":152,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4265},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19360,"byte_end":19374,"line_start":167,"line_end":167,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":4264},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19287,"byte_end":19355,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4267},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19458,"byte_end":19476,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":4264},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19380,"byte_end":19453,"line_start":168,"line_end":168,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19560,"byte_end":19575,"line_start":172,"line_end":172,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4264},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[{"value":"/ Do not use this, not part of stability guarantees.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19501,"byte_end":19555,"line_start":171,"line_end":171,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19266,"byte_end":19280,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"pub enum LimitErrorKind {\n\n    /// The resulting image exceed dimension limits in either direction.\n    DimensionError,\n\n    /// The operation would have performed an allocation larger than allowed.\n    InsufficientMemory,\n\n    #[doc(hidden)]\n    /// Do not use this, not part of stability guarantees.\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4267},{"krate":0,"index":4269}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18899,"byte_end":18967,"line_start":159,"line_end":159,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18968,"byte_end":18971,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":18972,"byte_end":19070,"line_start":161,"line_end":161,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19071,"byte_end":19136,"line_start":162,"line_end":162,"column_start":1,"column_end":66}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19182,"byte_end":19220,"line_start":164,"line_end":164,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4287},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19762,"byte_end":19767,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":4286},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19725,"byte_end":19757,"line_start":178,"line_end":178,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4290},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19835,"byte_end":19839,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":4286},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19787,"byte_end":19830,"line_start":181,"line_end":181,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4293},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19911,"byte_end":19924,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":4286},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19854,"byte_end":19906,"line_start":184,"line_end":184,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4296},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20011,"byte_end":20018,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":4286},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19951,"byte_end":20006,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4298},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20044,"byte_end":20059,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":4286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4286},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19703,"byte_end":19718,"line_start":177,"line_end":177,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"pub enum ImageFormatHint {\n\n    /// The format is known exactly.\n    Exact(ImageFormat),\n\n    /// The format can be identified by a name.\n    Name(String),\n\n    /// A common path extension for the format is known.\n    PathExtension(std::path::PathBuf),\n\n    /// The format is not known or could not be determined.\n    Unknown,\n\n    #[doc(hidden)]\n    __NonExhaustive(NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4296},{"krate":0,"index":4298}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":19601,"byte_end":19652,"line_start":175,"line_end":175,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20331,"byte_end":20351,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"pub fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20113,"byte_end":20199,"line_start":195,"line_end":195,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20204,"byte_end":20207,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20212,"byte_end":20300,"line_start":197,"line_end":197,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20305,"byte_end":20319,"line_start":198,"line_end":198,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20579,"byte_end":20583,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"pub fn kind(&Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20501,"byte_end":20567,"line_start":206,"line_end":206,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20722,"byte_end":20733,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20654,"byte_end":20710,"line_start":211,"line_end":211,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20925,"byte_end":20928,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<Error + Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20824,"byte_end":20913,"line_start":218,"line_end":218,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21296,"byte_end":21312,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21140,"byte_end":21189,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21194,"byte_end":21197,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21202,"byte_end":21284,"line_start":231,"line_end":231,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21511,"byte_end":21522,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21443,"byte_end":21499,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21715,"byte_end":21718,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<Error + Send +\n                                                             Sync>>>(ImageFormatHint,\n                                                                     impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21613,"byte_end":21703,"line_start":246,"line_end":246,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22087,"byte_end":22103,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21930,"byte_end":21980,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21985,"byte_end":21988,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21993,"byte_end":22075,"line_start":259,"line_end":259,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22301,"byte_end":22312,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22234,"byte_end":22289,"line_start":267,"line_end":267,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22484,"byte_end":22493,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"pub fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22404,"byte_end":22472,"line_start":274,"line_end":274,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22700,"byte_end":22704,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"pub fn kind(&Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22624,"byte_end":22688,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22877,"byte_end":22886,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"pub fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22793,"byte_end":22865,"line_start":289,"line_end":289,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23051,"byte_end":23055,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"pub fn kind(&Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22979,"byte_end":23039,"line_start":296,"line_end":296,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23934,"byte_end":23945,"line_start":333,"line_end":333,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23876,"byte_end":23924,"line_start":332,"line_end":332,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":117},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5234,"byte_end":5240,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5154,"byte_end":5225,"line_start":150,"line_end":150,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"! Mathematical helper functions and types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/mod.rs","byte_start":30578,"byte_end":30622,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[{"value":"! NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":30735,"byte_end":30806,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":30807,"byte_end":30872,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"! in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":30873,"byte_end":30946,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! for a discussion of the algorithm.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":30947,"byte_end":30985,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"! See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":30986,"byte_end":31090,"line_start":5,"line_end":5,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34033,"byte_end":34041,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":131}],"decl_id":null,"docs":" Neural network color quantizer","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32276,"byte_end":32310,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32311,"byte_end":32314,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32315,"byte_end":32329,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32330,"byte_end":32337,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, ColorMap};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32338,"byte_end":32398,"line_start":37,"line_end":37,"column_start":1,"column_end":61}},{"value":"/ use image::math::nq::NeuQuant;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32399,"byte_end":32433,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ use image::{ImageBuffer, Rgba, RgbaImage};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32434,"byte_end":32480,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32481,"byte_end":32484,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Create simple color image with RGBA pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32485,"byte_end":32535,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/ let (w, h) = (2, 2);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32536,"byte_end":32560,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ let red: Rgba<u8> = [255, 0, 0, 255].into();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32561,"byte_end":32609,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ let green: Rgba<u8> = [0, 255, 0, 255].into();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32610,"byte_end":32660,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ let blue: Rgba<u8> = [0, 0, 255, 255].into();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32661,"byte_end":32710,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/ let white: Rgba<u8> = [255, 255, 255, 255].into();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32711,"byte_end":32765,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ let mut color_image = RgbaImage::new(w, h);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32766,"byte_end":32813,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ color_image.put_pixel(0, 0, red);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32814,"byte_end":32851,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/ color_image.put_pixel(1, 0, green);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32852,"byte_end":32891,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ color_image.put_pixel(0, 1, blue);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32892,"byte_end":32930,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ color_image.put_pixel(1, 1, white);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32931,"byte_end":32970,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32971,"byte_end":32974,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Create a `NeuQuant` colormap that will build an approximate color palette that best matches","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":32975,"byte_end":33073,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ // the original image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33074,"byte_end":33100,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ // Note, the NeuQuant algorithm is only designed to work with 6-8 bit output, so `colors`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33101,"byte_end":33194,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/ // should be a power of 2 in the range [64, 256].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33195,"byte_end":33248,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/ let pixels = color_image.clone().into_raw();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33249,"byte_end":33297,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ let cmap = NeuQuant::new(1, 256, &pixels);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33298,"byte_end":33344,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/ // Map the original image through the color map to create an indexed image stored in a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33345,"byte_end":33435,"line_start":59,"line_end":59,"column_start":1,"column_end":91}},{"value":"/ // `GrayImage`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33436,"byte_end":33455,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ let palletized = index_colors(&color_image, &cmap);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33456,"byte_end":33511,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ // Map indexed image back `RgbaImage`.  Note the NeuQuant algorithm creates an approximation of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33512,"byte_end":33611,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ // the original colors, so even in this simple example the output is not pixel equivalent to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33612,"byte_end":33708,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ // the original.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33709,"byte_end":33729,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| -> Rgba<u8> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33730,"byte_end":33794,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33795,"byte_end":33838,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33839,"byte_end":33875,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33876,"byte_end":33925,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/         .into()","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33926,"byte_end":33945,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33946,"byte_end":33953,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33954,"byte_end":33961,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use the `color_quant` crate instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":33962,"byte_end":34021,"line_start":72,"line_end":72,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34560,"byte_end":34563,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"pub fn new(i32, usize, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34706,"byte_end":34710,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"pub fn init(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34788,"byte_end":34797,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"pub fn map_pixel(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34878,"byte_end":34886,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"pub fn index_of(&Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34971,"byte_end":34977,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"lookup","qualname":"<NeuQuant>::lookup","value":"pub fn lookup(&Self, usize) -> Option<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":143},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":146}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"! Shared mathematical utility functions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35350,"byte_end":35392,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35651,"byte_end":35656,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"pub fn clamp<N>(N, N, N) -> N where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35394,"byte_end":35432,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35433,"byte_end":35436,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35437,"byte_end":35444,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35445,"byte_end":35472,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35473,"byte_end":35476,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35477,"byte_end":35521,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35522,"byte_end":35566,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35567,"byte_end":35611,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35612,"byte_end":35619,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35620,"byte_end":35629,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"deprecated","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/utils.rs","byte_start":35630,"byte_end":35643,"line_start":13,"line_end":13,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4312},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39154,"byte_end":39158,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39026,"byte_end":39091,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4313},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39218,"byte_end":39219,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39165,"byte_end":39209,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4314},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39283,"byte_end":39284,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39230,"byte_end":39274,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4315},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39330,"byte_end":39335,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39295,"byte_end":39321,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":4316},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39382,"byte_end":39388,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/rect.rs","byte_start":39346,"byte_end":39373,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":6594},{"krate":0,"index":165},{"krate":0,"index":6596},{"krate":0,"index":166},{"krate":0,"index":6598},{"krate":0,"index":167},{"krate":0,"index":6600},{"krate":0,"index":168},{"krate":0,"index":6602},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":6654},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":240},{"krate":0,"index":328},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":438},{"krate":0,"index":443}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"! Image Processing Functions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":39398,"byte_end":39428,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":209},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":51797,"byte_end":51805,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":51748,"byte_end":51789,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":52137,"byte_end":52146,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":52087,"byte_end":52129,"line_start":20,"line_end":20,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":52479,"byte_end":52488,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":52429,"byte_end":52471,"line_start":32,"line_end":32,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":215},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":52876,"byte_end":52887,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"pub fn rotate90_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":52771,"byte_end":52868,"line_start":44,"line_end":44,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":53661,"byte_end":53673,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"pub fn rotate180_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":53555,"byte_end":53653,"line_start":69,"line_end":69,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":54456,"byte_end":54468,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"pub fn rotate270_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":54350,"byte_end":54448,"line_start":94,"line_end":94,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":55174,"byte_end":55189,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":55136,"byte_end":55166,"line_start":119,"line_end":119,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":55514,"byte_end":55527,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":55478,"byte_end":55506,"line_start":131,"line_end":131,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":55909,"byte_end":55927,"line_start":144,"line_end":144,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"pub fn flip_horizontal_in<I,\n                          Container>(&I,\n                                     &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":55814,"byte_end":55901,"line_start":143,"line_end":143,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":56688,"byte_end":56704,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"pub fn flip_vertical_in<I,\n                        Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":56595,"byte_end":56680,"line_start":168,"line_end":168,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":57431,"byte_end":57449,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"pub fn rotate180_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":57372,"byte_end":57423,"line_start":193,"line_end":193,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":58229,"byte_end":58253,"line_start":225,"line_end":225,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"pub fn flip_horizontal_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":58181,"byte_end":58221,"line_start":224,"line_end":224,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":58659,"byte_end":58681,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"pub fn flip_vertical_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/affine.rs","byte_start":58613,"byte_end":58651,"line_start":239,"line_end":239,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":240},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":6680},{"krate":0,"index":248},{"krate":0,"index":6682},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4334},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":309},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":325}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"! Functions for altering and converting the color of pixelbufs","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":63634,"byte_end":63698,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64107,"byte_end":64116,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImageView>(&I)\n-> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>> where\nSubpixel<I>: 'static, <Subpixel<I> as Num>::FromStrRadixErr: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64056,"byte_end":64099,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64648,"byte_end":64654,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64555,"byte_end":64603,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64604,"byte_end":64640,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":65178,"byte_end":65186,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64918,"byte_end":64964,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":64965,"byte_end":65024,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":65025,"byte_end":65109,"line_start":52,"line_end":52,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":65110,"byte_end":65113,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast_in_place`.][contrast_in_place]*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":65114,"byte_end":65170,"line_start":54,"line_end":54,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66238,"byte_end":66255,"line_start":92,"line_end":92,"column_start":8,"column_end":25},"name":"contrast_in_place","qualname":"::imageops::colorops::contrast_in_place","value":"pub fn contrast_in_place<I>(&mut I, f32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image in place.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":65987,"byte_end":66042,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66043,"byte_end":66102,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66103,"byte_end":66187,"line_start":89,"line_end":89,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66188,"byte_end":66191,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast`.][contrast]*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66192,"byte_end":66230,"line_start":91,"line_end":91,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":67165,"byte_end":67173,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66930,"byte_end":66962,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":66963,"byte_end":67019,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":67020,"byte_end":67096,"line_start":121,"line_end":121,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":67097,"byte_end":67100,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten_in_place`.][brighten_in_place]*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":67101,"byte_end":67157,"line_start":123,"line_end":123,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68169,"byte_end":68186,"line_start":160,"line_end":160,"column_start":8,"column_end":25},"name":"brighten_in_place","qualname":"::imageops::colorops::brighten_in_place","value":"pub fn brighten_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image in place.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":67943,"byte_end":67984,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":67985,"byte_end":68041,"line_start":156,"line_end":156,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68042,"byte_end":68118,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68119,"byte_end":68122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten`.][brighten]*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68123,"byte_end":68161,"line_start":159,"line_end":159,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":282},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":69109,"byte_end":69118,"line_start":192,"line_end":192,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68830,"byte_end":68864,"line_start":186,"line_end":186,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68865,"byte_end":68916,"line_start":187,"line_end":187,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68917,"byte_end":68986,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":68987,"byte_end":69038,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":69039,"byte_end":69042,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate_in_place`.][huerotate_in_place]*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":69043,"byte_end":69101,"line_start":191,"line_end":191,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":287},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71276,"byte_end":71294,"line_start":254,"line_end":254,"column_start":8,"column_end":26},"name":"huerotate_in_place","qualname":"::imageops::colorops::huerotate_in_place","value":"pub fn huerotate_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image in place.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71006,"byte_end":71049,"line_start":248,"line_end":248,"column_start":1,"column_end":44}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71050,"byte_end":71101,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71102,"byte_end":71171,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71172,"byte_end":71223,"line_start":251,"line_end":251,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71224,"byte_end":71227,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate`.][huerotate]*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":71228,"byte_end":71268,"line_start":253,"line_end":253,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":290},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73160,"byte_end":73168,"line_start":310,"line_end":310,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73134,"byte_end":73149,"line_start":309,"line_end":309,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":291},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73232,"byte_end":73237,"line_start":312,"line_end":312,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73175,"byte_end":73222,"line_start":311,"line_end":311,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73330,"byte_end":73338,"line_start":315,"line_end":315,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73243,"byte_end":73296,"line_start":313,"line_end":313,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73301,"byte_end":73322,"line_start":314,"line_end":314,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73546,"byte_end":73552,"line_start":318,"line_end":318,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"pub fn lookup(&Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73381,"byte_end":73474,"line_start":316,"line_end":316,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73479,"byte_end":73538,"line_start":317,"line_end":317,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73733,"byte_end":73743,"line_start":323,"line_end":323,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"pub fn has_lookup(&Self) -> bool","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73645,"byte_end":73725,"line_start":322,"line_end":322,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73848,"byte_end":73857,"line_start":327,"line_end":327,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73785,"byte_end":73840,"line_start":326,"line_end":326,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":75002,"byte_end":75009,"line_start":360,"line_end":360,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73894,"byte_end":73918,"line_start":330,"line_end":330,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73919,"byte_end":73922,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73923,"byte_end":73937,"line_start":332,"line_end":332,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73938,"byte_end":73945,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":73946,"byte_end":74015,"line_start":334,"line_end":334,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74016,"byte_end":74051,"line_start":335,"line_end":335,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74052,"byte_end":74055,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74056,"byte_end":74082,"line_start":337,"line_end":337,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74083,"byte_end":74170,"line_start":338,"line_end":338,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74171,"byte_end":74266,"line_start":339,"line_end":339,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74267,"byte_end":74363,"line_start":340,"line_end":340,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74364,"byte_end":74437,"line_start":341,"line_end":341,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74438,"byte_end":74461,"line_start":342,"line_end":342,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74462,"byte_end":74510,"line_start":343,"line_end":343,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74511,"byte_end":74563,"line_start":344,"line_end":344,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74564,"byte_end":74607,"line_start":345,"line_end":345,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74608,"byte_end":74644,"line_start":346,"line_end":346,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74645,"byte_end":74694,"line_start":347,"line_end":347,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74695,"byte_end":74702,"line_start":348,"line_end":348,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74703,"byte_end":74761,"line_start":349,"line_end":349,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74762,"byte_end":74822,"line_start":350,"line_end":350,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74823,"byte_end":74848,"line_start":351,"line_end":351,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74849,"byte_end":74871,"line_start":352,"line_end":352,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74872,"byte_end":74888,"line_start":353,"line_end":353,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74889,"byte_end":74913,"line_start":354,"line_end":354,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74914,"byte_end":74923,"line_start":355,"line_end":355,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74924,"byte_end":74931,"line_start":356,"line_end":356,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74932,"byte_end":74959,"line_start":357,"line_end":357,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":74960,"byte_end":74967,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":77982,"byte_end":77988,"line_start":475,"line_end":475,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map: ?Sized>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix>, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":77830,"byte_end":77911,"line_start":473,"line_end":473,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":77912,"byte_end":77974,"line_start":474,"line_end":474,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":325},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":79542,"byte_end":79554,"line_start":513,"line_end":513,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map: ?Sized>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix>,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":79445,"byte_end":79534,"line_start":512,"line_end":512,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4338},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83240,"byte_end":83247,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":4337},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83215,"byte_end":83235,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4340},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83276,"byte_end":83284,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":4337},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83254,"byte_end":83271,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4342},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83312,"byte_end":83322,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":4337},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83291,"byte_end":83307,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4344},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83353,"byte_end":83361,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":4337},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83329,"byte_end":83348,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4346},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83398,"byte_end":83406,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":4337},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83368,"byte_end":83393,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4337},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83198,"byte_end":83208,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType {\n\n    /// Nearest Neighbor\n    Nearest,\n\n    /// Linear Filter\n    Triangle,\n\n    /// Cubic Filter\n    CatmullRom,\n\n    /// Gaussian Filter\n    Gaussian,\n\n    /// Lanczos with window 3\n    Lanczos3,\n}","parent":null,"children":[{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4342},{"krate":0,"index":4344},{"krate":0,"index":4346}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80756,"byte_end":80787,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80788,"byte_end":80791,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80792,"byte_end":80807,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80808,"byte_end":80811,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80812,"byte_end":80890,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80891,"byte_end":80910,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80911,"byte_end":80994,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":80995,"byte_end":81002,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81003,"byte_end":81082,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81083,"byte_end":81140,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81141,"byte_end":81144,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81145,"byte_end":81167,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81168,"byte_end":81259,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81260,"byte_end":81304,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81305,"byte_end":81308,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81309,"byte_end":81406,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81407,"byte_end":81481,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81482,"byte_end":81522,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81523,"byte_end":81661,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81662,"byte_end":81686,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81687,"byte_end":81699,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81700,"byte_end":81740,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81741,"byte_end":81879,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81880,"byte_end":81904,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81905,"byte_end":81917,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81918,"byte_end":81958,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":81959,"byte_end":82099,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82100,"byte_end":82126,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82127,"byte_end":82139,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82140,"byte_end":82180,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82181,"byte_end":82321,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82322,"byte_end":82338,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82339,"byte_end":82351,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82352,"byte_end":82392,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82393,"byte_end":82532,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82533,"byte_end":82562,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82563,"byte_end":82575,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82576,"byte_end":82586,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82587,"byte_end":82590,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82591,"byte_end":82603,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82604,"byte_end":82607,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82608,"byte_end":82682,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82683,"byte_end":82730,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82731,"byte_end":82734,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82735,"byte_end":82767,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82768,"byte_end":82778,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82779,"byte_end":82803,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82804,"byte_end":82826,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82827,"byte_end":82838,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82839,"byte_end":82849,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82850,"byte_end":82875,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82876,"byte_end":82899,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82900,"byte_end":82911,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82912,"byte_end":82922,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82923,"byte_end":82950,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82951,"byte_end":82974,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82975,"byte_end":82986,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82987,"byte_end":82997,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":82998,"byte_end":83023,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83024,"byte_end":83048,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83049,"byte_end":83060,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83061,"byte_end":83071,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83072,"byte_end":83097,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83098,"byte_end":83122,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83123,"byte_end":83134,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83135,"byte_end":83147,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93438,"byte_end":93447,"line_start":409,"line_end":409,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92692,"byte_end":92749,"line_start":397,"line_end":397,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92750,"byte_end":92753,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92754,"byte_end":92852,"line_start":399,"line_end":399,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92853,"byte_end":92948,"line_start":400,"line_end":400,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92949,"byte_end":92952,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92953,"byte_end":93047,"line_start":402,"line_end":402,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93048,"byte_end":93145,"line_start":403,"line_end":403,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93146,"byte_end":93242,"line_start":404,"line_end":404,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93243,"byte_end":93279,"line_start":405,"line_end":405,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93280,"byte_end":93283,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93284,"byte_end":93383,"line_start":407,"line_end":407,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":93384,"byte_end":93430,"line_start":408,"line_end":408,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":405},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":101306,"byte_end":101315,"line_start":648,"line_end":648,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":101183,"byte_end":101234,"line_start":646,"line_end":646,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":101235,"byte_end":101298,"line_start":647,"line_end":647,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":103742,"byte_end":103748,"line_start":728,"line_end":728,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImageView>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":103569,"byte_end":103627,"line_start":725,"line_end":725,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":103628,"byte_end":103686,"line_start":726,"line_end":726,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":103687,"byte_end":103734,"line_start":727,"line_end":727,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":412},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":104874,"byte_end":104878,"line_start":767,"line_end":767,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImageView>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":104762,"byte_end":104813,"line_start":765,"line_end":765,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":104814,"byte_end":104866,"line_start":766,"line_end":766,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":105702,"byte_end":105711,"line_start":794,"line_end":794,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":105441,"byte_end":105494,"line_start":789,"line_end":789,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":105495,"byte_end":105546,"line_start":790,"line_end":790,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":105547,"byte_end":105610,"line_start":791,"line_end":791,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":105611,"byte_end":105614,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":105615,"byte_end":105694,"line_start":793,"line_end":793,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":420},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40482,"byte_end":40486,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImageView>(&mut I, u32, u32, u32, u32)\n-> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40362,"byte_end":40401,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40402,"byte_end":40474,"line_start":33,"line_end":33,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":422},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40853,"byte_end":40861,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"pub fn crop_imm<I: GenericImageView>(&I, u32, u32, u32, u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40730,"byte_end":40772,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40773,"byte_end":40845,"line_start":46,"line_end":46,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43645,"byte_end":43659,"line_start":131,"line_end":131,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"pub fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41473,"byte_end":41536,"line_start":76,"line_end":76,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41537,"byte_end":41540,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41541,"byte_end":41638,"line_start":78,"line_end":78,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41639,"byte_end":41724,"line_start":79,"line_end":79,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41725,"byte_end":41762,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41763,"byte_end":41797,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41798,"byte_end":41849,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41850,"byte_end":41853,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41854,"byte_end":41947,"line_start":84,"line_end":84,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":41948,"byte_end":42047,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42048,"byte_end":42068,"line_start":86,"line_end":86,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42069,"byte_end":42072,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42073,"byte_end":42129,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42130,"byte_end":42191,"line_start":89,"line_end":89,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42192,"byte_end":42242,"line_start":90,"line_end":90,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42243,"byte_end":42246,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42247,"byte_end":42346,"line_start":92,"line_end":92,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42347,"byte_end":42440,"line_start":93,"line_end":93,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42441,"byte_end":42514,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42515,"byte_end":42518,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42519,"byte_end":42530,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42531,"byte_end":42561,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42562,"byte_end":42617,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42618,"byte_end":42677,"line_start":99,"line_end":99,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42678,"byte_end":42746,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42747,"byte_end":42750,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42751,"byte_end":42853,"line_start":102,"line_end":102,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42854,"byte_end":42857,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42858,"byte_end":42869,"line_start":104,"line_end":104,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42870,"byte_end":42942,"line_start":105,"line_end":105,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42943,"byte_end":42980,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42981,"byte_end":42984,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":42985,"byte_end":43006,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43007,"byte_end":43037,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43038,"byte_end":43081,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43082,"byte_end":43103,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43104,"byte_end":43125,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43126,"byte_end":43129,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43130,"byte_end":43193,"line_start":114,"line_end":114,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43194,"byte_end":43197,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43198,"byte_end":43213,"line_start":116,"line_end":116,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43214,"byte_end":43255,"line_start":117,"line_end":117,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43256,"byte_end":43285,"line_start":118,"line_end":118,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43286,"byte_end":43305,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43306,"byte_end":43309,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43310,"byte_end":43352,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43353,"byte_end":43356,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43357,"byte_end":43368,"line_start":123,"line_end":123,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43369,"byte_end":43441,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43442,"byte_end":43494,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43495,"byte_end":43535,"line_start":126,"line_end":126,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43536,"byte_end":43591,"line_start":127,"line_end":127,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43592,"byte_end":43599,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43600,"byte_end":43603,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":43604,"byte_end":43637,"line_start":130,"line_end":130,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":427},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44173,"byte_end":44180,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I, J>(&mut I, &J, u32, u32) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44116,"byte_end":44165,"line_start":148,"line_end":148,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":430},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45157,"byte_end":45161,"line_start":183,"line_end":183,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"pub fn tile<I, J>(&mut I, &J) where I: GenericImage, J: GenericImageView<Pixel\n= I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44839,"byte_end":44887,"line_start":171,"line_end":171,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44888,"byte_end":44891,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44892,"byte_end":44906,"line_start":173,"line_end":173,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44907,"byte_end":44920,"line_start":174,"line_end":174,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44921,"byte_end":44948,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44949,"byte_end":44952,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44953,"byte_end":44998,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/ let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":44999,"byte_end":45047,"line_start":178,"line_end":178,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45048,"byte_end":45051,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ image::imageops::tile(&mut img, &tile);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45052,"byte_end":45095,"line_start":180,"line_end":180,"column_start":1,"column_end":44}},{"value":"/ img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45096,"byte_end":45141,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45142,"byte_end":45149,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45916,"byte_end":45933,"line_start":209,"line_end":209,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"pub fn vertical_gradient<S, P, I>(&mut I, &P, &P) where I: GenericImage<Pixel\n= P>, P: Pixel<Subpixel = S> + 'static, S: Primitive + Lerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient\n \n This function assumes a linear color space.\n \n # Examples\n ```no_run\n use image::{Rgba, RgbaImage, Pixel};\n \n let mut img = RgbaImage::new(100, 100);\n let start = Rgba::from_slice(&[0, 128, 0, 0]);\n let end = Rgba::from_slice(&[255, 255, 255, 255]);\n \n image::imageops::vertical_gradient(&mut img, start, end);\n img.save(\"vertical_gradient.png\").unwrap();\n","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45460,"byte_end":45510,"line_start":195,"line_end":195,"column_start":1,"column_end":51}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45511,"byte_end":45515,"line_start":196,"line_end":196,"column_start":1,"column_end":5}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45516,"byte_end":45563,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45564,"byte_end":45568,"line_start":198,"line_end":198,"column_start":1,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45569,"byte_end":45583,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45584,"byte_end":45597,"line_start":200,"line_end":200,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45598,"byte_end":45638,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45639,"byte_end":45643,"line_start":202,"line_end":202,"column_start":1,"column_end":5}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45644,"byte_end":45687,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45688,"byte_end":45738,"line_start":204,"line_end":204,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45739,"byte_end":45793,"line_start":205,"line_end":205,"column_start":1,"column_end":55}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45794,"byte_end":45798,"line_start":206,"line_end":206,"column_start":1,"column_end":5}},{"value":"/ image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45799,"byte_end":45860,"line_start":207,"line_end":207,"column_start":1,"column_end":62}},{"value":"/ img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":45861,"byte_end":45908,"line_start":208,"line_end":208,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":438},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46921,"byte_end":46940,"line_start":242,"line_end":242,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"pub fn horizontal_gradient<S, P, I>(&mut I, &P, &P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient\n \n This function assumes a linear color space.","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46460,"byte_end":46512,"line_start":228,"line_end":228,"column_start":1,"column_end":53}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46513,"byte_end":46517,"line_start":229,"line_end":229,"column_start":1,"column_end":5}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46518,"byte_end":46565,"line_start":230,"line_end":230,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46566,"byte_end":46569,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46570,"byte_end":46584,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46585,"byte_end":46598,"line_start":233,"line_end":233,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46599,"byte_end":46639,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46640,"byte_end":46644,"line_start":235,"line_end":235,"column_start":1,"column_end":5}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46645,"byte_end":46688,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46689,"byte_end":46739,"line_start":237,"line_end":237,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46740,"byte_end":46794,"line_start":238,"line_end":238,"column_start":1,"column_end":55}},{"value":"/ ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46795,"byte_end":46799,"line_start":239,"line_end":239,"column_start":1,"column_end":5}},{"value":"/ image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46800,"byte_end":46863,"line_start":240,"line_end":240,"column_start":1,"column_end":64}},{"value":"/ img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":46864,"byte_end":46913,"line_start":241,"line_end":241,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":443},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":47537,"byte_end":47544,"line_start":262,"line_end":262,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I, J>(&mut I, &J, u32, u32) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":47464,"byte_end":47529,"line_start":261,"line_end":261,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":446},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/mod.rs","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":493},{"krate":0,"index":539}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"! Input and output of images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/mod.rs","byte_start":109768,"byte_end":109799,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111996,"byte_end":112002,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110197,"byte_end":110229,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110230,"byte_end":110233,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110234,"byte_end":110327,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110328,"byte_end":110423,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110424,"byte_end":110427,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110428,"byte_end":110440,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110441,"byte_end":110444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110445,"byte_end":110543,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110544,"byte_end":110641,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110642,"byte_end":110645,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110646,"byte_end":110659,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110660,"byte_end":110688,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110689,"byte_end":110717,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110718,"byte_end":110761,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110762,"byte_end":110812,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110813,"byte_end":110832,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110833,"byte_end":110847,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110848,"byte_end":110855,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110856,"byte_end":110859,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110860,"byte_end":110953,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":110954,"byte_end":111050,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111051,"byte_end":111150,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111151,"byte_end":111154,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111250,"byte_end":111278,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111279,"byte_end":111307,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111308,"byte_end":111351,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111352,"byte_end":111376,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111377,"byte_end":111404,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111405,"byte_end":111408,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111409,"byte_end":111439,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111440,"byte_end":111454,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111455,"byte_end":111470,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111471,"byte_end":111474,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111475,"byte_end":111530,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111531,"byte_end":111561,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111562,"byte_end":111603,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111604,"byte_end":111660,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111661,"byte_end":111664,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111665,"byte_end":111698,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111699,"byte_end":111713,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111714,"byte_end":111721,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111722,"byte_end":111725,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111726,"byte_end":111824,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111825,"byte_end":111892,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111893,"byte_end":111896,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111897,"byte_end":111935,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":111936,"byte_end":111984,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112523,"byte_end":112526,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112166,"byte_end":112220,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112225,"byte_end":112228,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112233,"byte_end":112316,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112321,"byte_end":112400,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112405,"byte_end":112408,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112413,"byte_end":112469,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112474,"byte_end":112511,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112696,"byte_end":112707,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"pub fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112639,"byte_end":112684,"line_start":83,"line_end":83,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112901,"byte_end":112907,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112849,"byte_end":112889,"line_start":91,"line_end":91,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113042,"byte_end":113052,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"pub fn set_format(&mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112971,"byte_end":113030,"line_start":96,"line_end":96,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113382,"byte_end":113394,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"pub fn clear_format(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113134,"byte_end":113189,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113194,"byte_end":113197,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113202,"byte_end":113296,"line_start":103,"line_end":103,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113301,"byte_end":113370,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113481,"byte_end":113491,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113447,"byte_end":113469,"line_start":109,"line_end":109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113974,"byte_end":113978,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"pub fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113568,"byte_end":113626,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113631,"byte_end":113634,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113639,"byte_end":113701,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113706,"byte_end":113709,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113714,"byte_end":113808,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113813,"byte_end":113893,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113898,"byte_end":113901,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113906,"byte_end":113962,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115620,"byte_end":115639,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"pub fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114346,"byte_end":114416,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114421,"byte_end":114424,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114429,"byte_end":114518,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114523,"byte_end":114613,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114618,"byte_end":114668,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114673,"byte_end":114676,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114681,"byte_end":114773,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114778,"byte_end":114866,"line_start":145,"line_end":145,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114871,"byte_end":114899,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114904,"byte_end":114907,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114912,"byte_end":115003,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115008,"byte_end":115047,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115052,"byte_end":115055,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115060,"byte_end":115072,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115077,"byte_end":115080,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115085,"byte_end":115193,"line_start":153,"line_end":153,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115198,"byte_end":115290,"line_start":154,"line_end":154,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115295,"byte_end":115326,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115331,"byte_end":115334,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115339,"byte_end":115352,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115357,"byte_end":115385,"line_start":158,"line_end":158,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115390,"byte_end":115418,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115423,"byte_end":115466,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115471,"byte_end":115517,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115522,"byte_end":115553,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115558,"byte_end":115577,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115582,"byte_end":115596,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":115601,"byte_end":115608,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116597,"byte_end":116612,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"pub fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116384,"byte_end":116414,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116419,"byte_end":116422,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116427,"byte_end":116502,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116507,"byte_end":116510,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116515,"byte_end":116585,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":117006,"byte_end":117012,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"pub fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116786,"byte_end":116823,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116828,"byte_end":116831,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116836,"byte_end":116911,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116916,"byte_end":116919,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":116924,"byte_end":116994,"line_start":201,"line_end":201,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":119004,"byte_end":119008,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":118791,"byte_end":118827,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":118828,"byte_end":118831,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":118832,"byte_end":118878,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":118879,"byte_end":118882,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":118883,"byte_end":118924,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":118925,"byte_end":118951,"line_start":56,"line_end":56,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":127478,"byte_end":127490,"line_start":239,"line_end":239,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":127217,"byte_end":127257,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":127258,"byte_end":127261,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":127262,"byte_end":127355,"line_start":236,"line_end":236,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":127356,"byte_end":127398,"line_start":237,"line_end":237,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/free_functions.rs","byte_start":127399,"byte_end":127470,"line_start":238,"line_end":238,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":540},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":6822},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":4356},{"krate":0,"index":4364},{"krate":0,"index":4361},{"krate":0,"index":4367},{"krate":0,"index":4387},{"krate":0,"index":4386},{"krate":0,"index":4384},{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4374},{"krate":0,"index":4389},{"krate":0,"index":4415},{"krate":0,"index":4414},{"krate":0,"index":4412},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4395},{"krate":0,"index":4393},{"krate":0,"index":567},{"krate":0,"index":590},{"krate":0,"index":594},{"krate":0,"index":636},{"krate":0,"index":4417},{"krate":0,"index":4426},{"krate":0,"index":4422},{"krate":0,"index":4430},{"krate":0,"index":4439},{"krate":0,"index":4435},{"krate":0,"index":4443},{"krate":0,"index":4465},{"krate":0,"index":4464},{"krate":0,"index":4462},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4452},{"krate":0,"index":4467},{"krate":0,"index":4490},{"krate":0,"index":4489},{"krate":0,"index":4487},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4478},{"krate":0,"index":641},{"krate":0,"index":654},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":673},{"krate":0,"index":677},{"krate":0,"index":689},{"krate":0,"index":701},{"krate":0,"index":709},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"! Image representations for ffi.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":127922,"byte_end":127956,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":127957,"byte_end":127960,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":127961,"byte_end":127972,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":127973,"byte_end":127976,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":127977,"byte_end":128075,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"! your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128076,"byte_end":128175,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"! to help you transition from raw memory data to Rust representation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128176,"byte_end":128247,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128248,"byte_end":128251,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128252,"byte_end":128265,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"! use std::ptr;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128266,"byte_end":128283,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"! use std::slice;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128284,"byte_end":128303,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"! use image::Rgb;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128304,"byte_end":128323,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"! use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128324,"byte_end":128373,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"! use image::imageops::thumbnail;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128374,"byte_end":128409,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128410,"byte_end":128413,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! #[no_mangle]","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128414,"byte_end":128430,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"! pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128431,"byte_end":128475,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"!     data: *const u8, len: usize,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128476,"byte_end":128512,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"!     layout: *const SampleLayout","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128513,"byte_end":128548,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"! )","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128549,"byte_end":128554,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"!     -> bool","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128555,"byte_end":128570,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"! {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128571,"byte_end":128576,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"!     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128577,"byte_end":128643,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"!     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128644,"byte_end":128694,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128695,"byte_end":128698,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"!     let buffer = FlatSamples {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128699,"byte_end":128733,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"!         samples,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128734,"byte_end":128754,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!         layout,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128755,"byte_end":128774,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"!         color_hint: None,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128775,"byte_end":128804,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"!     };","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128805,"byte_end":128815,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128816,"byte_end":128819,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"!     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128820,"byte_end":128874,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"!         Err(_) => return false, // Invalid layout.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128875,"byte_end":128929,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"!         Ok(view) => view,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128930,"byte_end":128959,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"!     };","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128960,"byte_end":128970,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128971,"byte_end":128974,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     thumbnail(&view, 64, 64)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":128975,"byte_end":129007,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"!         .save(\"output.png\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129008,"byte_end":129039,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"!         .map(|_| true)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129040,"byte_end":129066,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"!         .unwrap_or_else(|_| false)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129067,"byte_end":129105,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"! }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129106,"byte_end":129111,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129112,"byte_end":129119,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129120,"byte_end":129123,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131114,"byte_end":131125,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129531,"byte_end":129578,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129579,"byte_end":129582,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129583,"byte_end":129680,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129681,"byte_end":129778,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129779,"byte_end":129875,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129876,"byte_end":129964,"line_start":61,"line_end":61,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":129965,"byte_end":130064,"line_start":62,"line_end":62,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130065,"byte_end":130163,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130164,"byte_end":130213,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130214,"byte_end":130217,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130218,"byte_end":130309,"line_start":66,"line_end":66,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130310,"byte_end":130407,"line_start":67,"line_end":67,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130408,"byte_end":130505,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130506,"byte_end":130603,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130604,"byte_end":130665,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130666,"byte_end":130669,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130670,"byte_end":130718,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130719,"byte_end":130775,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130776,"byte_end":130863,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130864,"byte_end":130900,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130901,"byte_end":130957,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130958,"byte_end":130990,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":130991,"byte_end":131031,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131032,"byte_end":131078,"line_start":79,"line_end":79,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4358},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131203,"byte_end":131210,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":4356},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131140,"byte_end":131194,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131294,"byte_end":131300,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":4356},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131225,"byte_end":131285,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131755,"byte_end":131765,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":4356},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131321,"byte_end":131357,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131362,"byte_end":131365,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131370,"byte_end":131455,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131460,"byte_end":131552,"line_start":91,"line_end":91,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131557,"byte_end":131646,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131651,"byte_end":131746,"line_start":93,"line_end":93,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":4367},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131915,"byte_end":131927,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131789,"byte_end":131841,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131842,"byte_end":131852,"line_start":98,"line_end":98,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4368},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132011,"byte_end":132019,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":4367},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":131934,"byte_end":132002,"line_start":101,"line_end":101,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132105,"byte_end":132119,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":4367},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132030,"byte_end":132096,"line_start":104,"line_end":104,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4370},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132181,"byte_end":132186,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":4367},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132133,"byte_end":132172,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132273,"byte_end":132285,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":4367},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132198,"byte_end":132264,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":4372},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132348,"byte_end":132354,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":4367},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132299,"byte_end":132339,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":4373},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132441,"byte_end":132454,"line_start":117,"line_end":117,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":4367},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132366,"byte_end":132432,"line_start":116,"line_end":116,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133429,"byte_end":133445,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"pub fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132635,"byte_end":132691,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132696,"byte_end":132699,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132704,"byte_end":132799,"line_start":127,"line_end":127,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132804,"byte_end":132873,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132878,"byte_end":132881,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132886,"byte_end":132893,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132898,"byte_end":132948,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132953,"byte_end":133014,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133019,"byte_end":133077,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133082,"byte_end":133089,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133094,"byte_end":133097,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133102,"byte_end":133114,"line_start":136,"line_end":136,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133119,"byte_end":133122,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133127,"byte_end":133222,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133227,"byte_end":133318,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133323,"byte_end":133417,"line_start":140,"line_end":140,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134696,"byte_end":134715,"line_start":170,"line_end":170,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"pub fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133883,"byte_end":133942,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133947,"byte_end":133950,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":133955,"byte_end":134045,"line_start":156,"line_end":156,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134050,"byte_end":134135,"line_start":157,"line_end":157,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134140,"byte_end":134143,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134148,"byte_end":134155,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134160,"byte_end":134210,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134215,"byte_end":134279,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134284,"byte_end":134345,"line_start":162,"line_end":162,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134350,"byte_end":134357,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134362,"byte_end":134365,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134370,"byte_end":134382,"line_start":165,"line_end":165,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134387,"byte_end":134390,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134395,"byte_end":134490,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134495,"byte_end":134585,"line_start":168,"line_end":168,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":134590,"byte_end":134684,"line_start":169,"line_end":169,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135331,"byte_end":135342,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135156,"byte_end":135215,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135220,"byte_end":135223,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135228,"byte_end":135299,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135304,"byte_end":135319,"line_start":186,"line_end":186,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135659,"byte_end":135666,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135457,"byte_end":135508,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135513,"byte_end":135516,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135521,"byte_end":135614,"line_start":193,"line_end":193,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135619,"byte_end":135647,"line_start":194,"line_end":194,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136040,"byte_end":136046,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135788,"byte_end":135842,"line_start":199,"line_end":199,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135847,"byte_end":135850,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135855,"byte_end":135945,"line_start":201,"line_end":201,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":135950,"byte_end":136028,"line_start":202,"line_end":202,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":138199,"byte_end":138209,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136134,"byte_end":136224,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136229,"byte_end":136232,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136237,"byte_end":136332,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136337,"byte_end":136427,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136432,"byte_end":136523,"line_start":211,"line_end":211,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136528,"byte_end":136585,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136590,"byte_end":136593,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136598,"byte_end":136615,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136620,"byte_end":136623,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136628,"byte_end":136712,"line_start":216,"line_end":216,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136717,"byte_end":136808,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136813,"byte_end":136816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136821,"byte_end":136846,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136851,"byte_end":136854,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136859,"byte_end":136913,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136918,"byte_end":136942,"line_start":222,"line_end":222,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136947,"byte_end":136964,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136969,"byte_end":136994,"line_start":224,"line_end":224,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":136999,"byte_end":137017,"line_start":225,"line_end":225,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137022,"byte_end":137025,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137030,"byte_end":137041,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137046,"byte_end":137069,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137074,"byte_end":137093,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137098,"byte_end":137140,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137145,"byte_end":137152,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137157,"byte_end":137160,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137165,"byte_end":137257,"line_start":233,"line_end":233,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137262,"byte_end":137352,"line_start":234,"line_end":234,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137357,"byte_end":137360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137365,"byte_end":137393,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137398,"byte_end":137401,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137406,"byte_end":137498,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137503,"byte_end":137597,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137602,"byte_end":137657,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137662,"byte_end":137665,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137670,"byte_end":137694,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137699,"byte_end":137716,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137721,"byte_end":137746,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137751,"byte_end":137769,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137774,"byte_end":137777,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137782,"byte_end":137793,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137798,"byte_end":137814,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137819,"byte_end":137838,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137843,"byte_end":137866,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137871,"byte_end":137900,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137905,"byte_end":137940,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137945,"byte_end":137952,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137957,"byte_end":137960,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":137965,"byte_end":138059,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":138064,"byte_end":138157,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":138162,"byte_end":138187,"line_start":257,"line_end":257,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":138541,"byte_end":138545,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":138475,"byte_end":138529,"line_start":267,"line_end":267,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":139655,"byte_end":139674,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":139305,"byte_end":139354,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":139359,"byte_end":139362,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":139367,"byte_end":139460,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":139465,"byte_end":139559,"line_start":291,"line_end":291,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":139564,"byte_end":139643,"line_start":292,"line_end":292,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140919,"byte_end":140928,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140409,"byte_end":140474,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140479,"byte_end":140482,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140487,"byte_end":140580,"line_start":318,"line_end":318,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140585,"byte_end":140680,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140685,"byte_end":140777,"line_start":320,"line_end":320,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140782,"byte_end":140876,"line_start":321,"line_end":321,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":140881,"byte_end":140907,"line_start":322,"line_end":322,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142626,"byte_end":142635,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142284,"byte_end":142345,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142350,"byte_end":142353,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142358,"byte_end":142447,"line_start":375,"line_end":375,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142452,"byte_end":142546,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142551,"byte_end":142614,"line_start":377,"line_end":377,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142909,"byte_end":142914,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142762,"byte_end":142807,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142812,"byte_end":142815,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":142820,"byte_end":142897,"line_start":384,"line_end":384,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":143508,"byte_end":143529,"line_start":398,"line_end":398,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":143137,"byte_end":143196,"line_start":393,"line_end":393,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":143201,"byte_end":143204,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":143209,"byte_end":143298,"line_start":395,"line_end":395,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":143303,"byte_end":143397,"line_start":396,"line_end":396,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":143402,"byte_end":143496,"line_start":397,"line_end":397,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144460,"byte_end":144475,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144159,"byte_end":144199,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144204,"byte_end":144207,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144212,"byte_end":144304,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144309,"byte_end":144404,"line_start":417,"line_end":417,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144409,"byte_end":144448,"line_start":418,"line_end":418,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145003,"byte_end":145012,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144678,"byte_end":144743,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144748,"byte_end":144751,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144756,"byte_end":144844,"line_start":427,"line_end":427,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144849,"byte_end":144944,"line_start":428,"line_end":428,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":144949,"byte_end":144991,"line_start":429,"line_end":429,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145685,"byte_end":145696,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145510,"byte_end":145569,"line_start":453,"line_end":453,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145574,"byte_end":145577,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145582,"byte_end":145653,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145658,"byte_end":145673,"line_start":456,"line_end":456,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145978,"byte_end":145985,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145776,"byte_end":145827,"line_start":461,"line_end":461,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145832,"byte_end":145835,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145840,"byte_end":145933,"line_start":463,"line_end":463,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145938,"byte_end":145966,"line_start":464,"line_end":464,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146313,"byte_end":146319,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146061,"byte_end":146115,"line_start":469,"line_end":469,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146120,"byte_end":146123,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146128,"byte_end":146218,"line_start":471,"line_end":471,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146223,"byte_end":146301,"line_start":472,"line_end":472,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146433,"byte_end":146439,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"pub fn as_ref<T>(&Self) -> FlatSamples<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146387,"byte_end":146421,"line_start":477,"line_end":477,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146713,"byte_end":146719,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"pub fn as_mut<T>(&mut Self) -> FlatSamples<&mut [T]> where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146659,"byte_end":146701,"line_start":486,"line_end":486,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146998,"byte_end":147004,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"pub fn to_vec<T>(&Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":146947,"byte_end":146986,"line_start":495,"line_end":495,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148277,"byte_end":148287,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"pub fn get_sample<T>(&Self, u8, u32, u32) -> Option<&T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147257,"byte_end":147296,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147301,"byte_end":147304,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147309,"byte_end":147404,"line_start":508,"line_end":508,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147409,"byte_end":147487,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147492,"byte_end":147495,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147500,"byte_end":147507,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147512,"byte_end":147540,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147545,"byte_end":147604,"line_start":513,"line_end":513,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147609,"byte_end":147612,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147617,"byte_end":147657,"line_start":515,"line_end":515,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147662,"byte_end":147712,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147717,"byte_end":147720,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147725,"byte_end":147758,"line_start":518,"line_end":518,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147763,"byte_end":147813,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147818,"byte_end":147825,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147830,"byte_end":147833,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147838,"byte_end":147928,"line_start":522,"line_end":522,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":147933,"byte_end":148014,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148019,"byte_end":148114,"line_start":524,"line_end":524,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148119,"byte_end":148206,"line_start":525,"line_end":525,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148211,"byte_end":148265,"line_start":526,"line_end":526,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149884,"byte_end":149898,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"pub fn get_mut_sample<T>(&mut Self, u8, u32, u32) -> Option<&mut T> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148474,"byte_end":148521,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148526,"byte_end":148529,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148534,"byte_end":148623,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148628,"byte_end":148715,"line_start":537,"line_end":537,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148720,"byte_end":148815,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148820,"byte_end":148883,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148888,"byte_end":148891,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148896,"byte_end":148990,"line_start":541,"line_end":541,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":148995,"byte_end":149064,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149069,"byte_end":149072,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149077,"byte_end":149084,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149089,"byte_end":149117,"line_start":545,"line_end":545,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149122,"byte_end":149185,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149190,"byte_end":149193,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149198,"byte_end":149259,"line_start":548,"line_end":548,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149264,"byte_end":149315,"line_start":549,"line_end":549,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149320,"byte_end":149323,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149328,"byte_end":149361,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149366,"byte_end":149420,"line_start":552,"line_end":552,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149425,"byte_end":149432,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149437,"byte_end":149440,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149445,"byte_end":149535,"line_start":555,"line_end":555,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149540,"byte_end":149621,"line_start":556,"line_end":556,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149626,"byte_end":149721,"line_start":557,"line_end":557,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149726,"byte_end":149813,"line_start":558,"line_end":558,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":149818,"byte_end":149872,"line_start":559,"line_end":559,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150562,"byte_end":150569,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"pub fn as_view<P>(&Self) -> Result<View<&[P::Subpixel], P>, Error> where\nP: Pixel, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150150,"byte_end":150207,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150212,"byte_end":150215,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150220,"byte_end":150310,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150315,"byte_end":150409,"line_start":572,"line_end":572,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150414,"byte_end":150508,"line_start":573,"line_end":573,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":150513,"byte_end":150550,"line_start":574,"line_end":574,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152146,"byte_end":152170,"line_start":612,"line_end":612,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"pub fn as_view_with_mut_samples<P>(&mut Self)\n-> Result<View<&mut [P::Subpixel], P>, Error> where P: Pixel,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151181,"byte_end":151240,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151245,"byte_end":151248,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151253,"byte_end":151345,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151350,"byte_end":151441,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151446,"byte_end":151539,"line_start":601,"line_end":601,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151544,"byte_end":151575,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151580,"byte_end":151583,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151588,"byte_end":151678,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151683,"byte_end":151777,"line_start":605,"line_end":605,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151782,"byte_end":151876,"line_start":606,"line_end":606,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151881,"byte_end":151918,"line_start":607,"line_end":607,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151923,"byte_end":151926,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":151931,"byte_end":152025,"line_start":609,"line_end":609,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152030,"byte_end":152116,"line_start":610,"line_end":610,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152121,"byte_end":152134,"line_start":611,"line_end":611,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153533,"byte_end":153544,"line_start":645,"line_end":645,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"pub fn as_view_mut<P>(&mut Self)\n-> Result<ViewMut<&mut [P::Subpixel], P>, Error> where P: Pixel,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152790,"byte_end":152835,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152840,"byte_end":152843,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152848,"byte_end":152938,"line_start":636,"line_end":636,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":152943,"byte_end":153030,"line_start":637,"line_end":637,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153035,"byte_end":153102,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153107,"byte_end":153110,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153115,"byte_end":153210,"line_start":640,"line_end":640,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153215,"byte_end":153308,"line_start":641,"line_end":641,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153313,"byte_end":153408,"line_start":642,"line_end":642,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153413,"byte_end":153488,"line_start":643,"line_end":643,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":153493,"byte_end":153521,"line_start":644,"line_end":644,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154541,"byte_end":154549,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"pub fn as_slice<T>(&Self) -> &[T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154317,"byte_end":154349,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154354,"byte_end":154357,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154362,"byte_end":154454,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154459,"byte_end":154529,"line_start":674,"line_end":674,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154860,"byte_end":154872,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"pub fn as_mut_slice<T>(&mut Self) -> &mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154636,"byte_end":154668,"line_start":679,"line_end":679,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154673,"byte_end":154676,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154681,"byte_end":154773,"line_start":681,"line_end":681,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154778,"byte_end":154848,"line_start":682,"line_end":682,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155303,"byte_end":155314,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"pub fn image_slice<T>(&Self) -> Option<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":154967,"byte_end":155029,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155034,"byte_end":155037,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155042,"byte_end":155137,"line_start":689,"line_end":689,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155142,"byte_end":155237,"line_start":690,"line_end":690,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155242,"byte_end":155291,"line_start":691,"line_end":691,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155731,"byte_end":155746,"line_start":707,"line_end":707,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"pub fn image_mut_slice<T>(&mut Self) -> Option<&mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":155660,"byte_end":155719,"line_start":706,"line_end":706,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":156400,"byte_end":156415,"line_start":726,"line_end":726,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"pub fn try_into_buffer<P>(Self)\n-> Result<ImageBuffer<P, Buffer>, (Error, Self)> where P: Pixel + 'static,\nP::Subpixel: 'static, Buffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":156104,"byte_end":156143,"line_start":721,"line_end":721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":156148,"byte_end":156151,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":156156,"byte_end":156252,"line_start":723,"line_end":723,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":156257,"byte_end":156352,"line_start":724,"line_end":724,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":156357,"byte_end":156388,"line_start":725,"line_end":725,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159251,"byte_end":159261,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157186,"byte_end":157276,"line_start":749,"line_end":749,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157281,"byte_end":157284,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157289,"byte_end":157384,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157389,"byte_end":157479,"line_start":752,"line_end":752,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157484,"byte_end":157575,"line_start":753,"line_end":753,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157580,"byte_end":157637,"line_start":754,"line_end":754,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157642,"byte_end":157645,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157650,"byte_end":157667,"line_start":756,"line_end":756,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157672,"byte_end":157675,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157680,"byte_end":157764,"line_start":758,"line_end":758,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157769,"byte_end":157860,"line_start":759,"line_end":759,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157865,"byte_end":157868,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157873,"byte_end":157898,"line_start":761,"line_end":761,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157903,"byte_end":157906,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157911,"byte_end":157965,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157970,"byte_end":157994,"line_start":764,"line_end":764,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":157999,"byte_end":158016,"line_start":765,"line_end":765,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158021,"byte_end":158046,"line_start":766,"line_end":766,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158051,"byte_end":158069,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158074,"byte_end":158077,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158082,"byte_end":158093,"line_start":769,"line_end":769,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158098,"byte_end":158121,"line_start":770,"line_end":770,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158126,"byte_end":158145,"line_start":771,"line_end":771,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158150,"byte_end":158192,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158197,"byte_end":158204,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158209,"byte_end":158212,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158217,"byte_end":158309,"line_start":775,"line_end":775,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158314,"byte_end":158404,"line_start":776,"line_end":776,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158409,"byte_end":158412,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158417,"byte_end":158445,"line_start":778,"line_end":778,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158450,"byte_end":158453,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158458,"byte_end":158550,"line_start":780,"line_end":780,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158555,"byte_end":158649,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158654,"byte_end":158709,"line_start":782,"line_end":782,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158714,"byte_end":158717,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158722,"byte_end":158746,"line_start":784,"line_end":784,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158751,"byte_end":158768,"line_start":785,"line_end":785,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158773,"byte_end":158798,"line_start":786,"line_end":786,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158803,"byte_end":158821,"line_start":787,"line_end":787,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158826,"byte_end":158829,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158834,"byte_end":158845,"line_start":789,"line_end":789,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158850,"byte_end":158866,"line_start":790,"line_end":790,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158871,"byte_end":158890,"line_start":791,"line_end":791,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158895,"byte_end":158918,"line_start":792,"line_end":792,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158923,"byte_end":158952,"line_start":793,"line_end":793,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158957,"byte_end":158992,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":158997,"byte_end":159004,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159009,"byte_end":159012,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159017,"byte_end":159111,"line_start":797,"line_end":797,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159116,"byte_end":159209,"line_start":798,"line_end":798,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159214,"byte_end":159239,"line_start":799,"line_end":799,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159398,"byte_end":159402,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159332,"byte_end":159386,"line_start":804,"line_end":804,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159823,"byte_end":159842,"line_start":814,"line_end":814,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159473,"byte_end":159522,"line_start":809,"line_end":809,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159527,"byte_end":159530,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159535,"byte_end":159628,"line_start":811,"line_end":811,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159633,"byte_end":159727,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159732,"byte_end":159811,"line_start":813,"line_end":813,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160423,"byte_end":160432,"line_start":825,"line_end":825,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159913,"byte_end":159978,"line_start":818,"line_end":818,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159983,"byte_end":159986,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":159991,"byte_end":160084,"line_start":820,"line_end":820,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160089,"byte_end":160184,"line_start":821,"line_end":821,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160189,"byte_end":160281,"line_start":822,"line_end":822,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160286,"byte_end":160380,"line_start":823,"line_end":823,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160385,"byte_end":160411,"line_start":824,"line_end":824,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160857,"byte_end":160866,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160515,"byte_end":160576,"line_start":829,"line_end":829,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160581,"byte_end":160584,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160589,"byte_end":160678,"line_start":831,"line_end":831,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160683,"byte_end":160777,"line_start":832,"line_end":832,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160782,"byte_end":160845,"line_start":833,"line_end":833,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161116,"byte_end":161121,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":160969,"byte_end":161014,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161019,"byte_end":161022,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161027,"byte_end":161104,"line_start":840,"line_end":840,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161600,"byte_end":161621,"line_start":850,"line_end":850,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161229,"byte_end":161288,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161293,"byte_end":161296,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161301,"byte_end":161390,"line_start":847,"line_end":847,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161395,"byte_end":161489,"line_start":848,"line_end":848,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161494,"byte_end":161588,"line_start":849,"line_end":849,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162053,"byte_end":162068,"line_start":859,"line_end":859,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161752,"byte_end":161792,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161797,"byte_end":161800,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161805,"byte_end":161897,"line_start":856,"line_end":856,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":161902,"byte_end":161997,"line_start":857,"line_end":857,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162002,"byte_end":162041,"line_start":858,"line_end":858,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162503,"byte_end":162512,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162178,"byte_end":162243,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162248,"byte_end":162251,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162256,"byte_end":162344,"line_start":865,"line_end":865,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162349,"byte_end":162444,"line_start":866,"line_end":866,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162449,"byte_end":162491,"line_start":867,"line_end":867,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163398,"byte_end":163412,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"pub fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162686,"byte_end":162735,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162740,"byte_end":162743,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162748,"byte_end":162843,"line_start":876,"line_end":876,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162848,"byte_end":162909,"line_start":877,"line_end":877,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162914,"byte_end":162917,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162922,"byte_end":162937,"line_start":879,"line_end":879,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162942,"byte_end":162945,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162950,"byte_end":162957,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162962,"byte_end":162998,"line_start":882,"line_end":882,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163003,"byte_end":163067,"line_start":883,"line_end":883,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163072,"byte_end":163075,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163080,"byte_end":163119,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163124,"byte_end":163189,"line_start":886,"line_end":886,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163194,"byte_end":163197,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163202,"byte_end":163246,"line_start":888,"line_end":888,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163251,"byte_end":163283,"line_start":889,"line_end":889,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163288,"byte_end":163291,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163296,"byte_end":163319,"line_start":891,"line_end":891,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163324,"byte_end":163374,"line_start":892,"line_end":892,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163379,"byte_end":163386,"line_start":893,"line_end":893,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4417},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164617,"byte_end":164621,"line_start":929,"line_end":929,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":4420},{"krate":0,"index":4421}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163915,"byte_end":163967,"line_start":914,"line_end":914,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163968,"byte_end":163971,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":163972,"byte_end":164070,"line_start":916,"line_end":916,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164071,"byte_end":164120,"line_start":917,"line_end":917,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164121,"byte_end":164124,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164125,"byte_end":164223,"line_start":919,"line_end":919,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164224,"byte_end":164323,"line_start":920,"line_end":920,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164324,"byte_end":164394,"line_start":921,"line_end":921,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164395,"byte_end":164398,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164399,"byte_end":164421,"line_start":923,"line_end":923,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164422,"byte_end":164425,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164426,"byte_end":164509,"line_start":925,"line_end":925,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164510,"byte_end":164577,"line_start":926,"line_end":926,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164578,"byte_end":164581,"line_start":927,"line_end":927,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4430},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165467,"byte_end":165474,"line_start":952,"line_end":952,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":4433},{"krate":0,"index":4434}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164745,"byte_end":164791,"line_start":937,"line_end":937,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164792,"byte_end":164795,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164796,"byte_end":164893,"line_start":939,"line_end":939,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164894,"byte_end":164992,"line_start":940,"line_end":940,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":164993,"byte_end":165090,"line_start":941,"line_end":941,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165091,"byte_end":165132,"line_start":942,"line_end":942,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165133,"byte_end":165136,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165137,"byte_end":165159,"line_start":944,"line_end":944,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165160,"byte_end":165163,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165164,"byte_end":165247,"line_start":946,"line_end":946,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165248,"byte_end":165285,"line_start":947,"line_end":947,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165286,"byte_end":165359,"line_start":948,"line_end":948,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165360,"byte_end":165427,"line_start":949,"line_end":949,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165428,"byte_end":165431,"line_start":950,"line_end":950,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4444},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166182,"byte_end":166190,"line_start":971,"line_end":971,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":4443},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166059,"byte_end":166099,"line_start":968,"line_end":968,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166104,"byte_end":166107,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166112,"byte_end":166177,"line_start":970,"line_end":970,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4446},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166347,"byte_end":166365,"line_start":976,"line_end":976,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":4443},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166197,"byte_end":166255,"line_start":973,"line_end":973,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166260,"byte_end":166263,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166268,"byte_end":166342,"line_start":975,"line_end":975,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4449},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166974,"byte_end":166984,"line_start":987,"line_end":987,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":4443},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166384,"byte_end":166437,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166442,"byte_end":166445,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166450,"byte_end":166541,"line_start":980,"line_end":980,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166546,"byte_end":166586,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166591,"byte_end":166594,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166599,"byte_end":166694,"line_start":983,"line_end":983,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166699,"byte_end":166790,"line_start":984,"line_end":984,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166795,"byte_end":166890,"line_start":985,"line_end":985,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166895,"byte_end":166969,"line_start":986,"line_end":986,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":4443},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":166047,"byte_end":166052,"line_start":967,"line_end":967,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"pub enum Error {\n\n    /// The represented image was too large.\n    ///\n    /// The optional value denotes a possibly accepted maximal bound.\n    TooLarge,\n\n    /// The represented image can not use this representation.\n    ///\n    /// Has an additional value of the normalized form that would be accepted.\n    NormalFormRequired(NormalForm),\n\n    /// The color format did not match the channel count.\n    ///\n    /// In some cases you might be able to fix this by lowering the reported pixel count of the\n    /// buffer without touching the strides.\n    ///\n    /// In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not\n    /// directly memory unsafe although that will likely alias pixels. One scenario is when you\n    /// want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't\n    /// care about the value of the alpha channel even though you need `Rgba`.\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4449}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165598,"byte_end":165679,"line_start":960,"line_end":960,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165680,"byte_end":165683,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165684,"byte_end":165757,"line_start":962,"line_end":962,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165758,"byte_end":165834,"line_start":963,"line_end":963,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165835,"byte_end":165912,"line_start":964,"line_end":964,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":165913,"byte_end":165986,"line_start":965,"line_end":965,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4468},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167483,"byte_end":167492,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":4467},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167260,"byte_end":167289,"line_start":996,"line_end":996,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167294,"byte_end":167297,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167302,"byte_end":167385,"line_start":998,"line_end":998,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167390,"byte_end":167478,"line_start":999,"line_end":999,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4470},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167722,"byte_end":167733,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":4467},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167499,"byte_end":167530,"line_start":1002,"line_end":1002,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167535,"byte_end":167538,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167543,"byte_end":167631,"line_start":1004,"line_end":1004,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167636,"byte_end":167717,"line_start":1005,"line_end":1005,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4472},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168017,"byte_end":168028,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":4467},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167740,"byte_end":167767,"line_start":1008,"line_end":1008,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167772,"byte_end":167775,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167780,"byte_end":167873,"line_start":1010,"line_end":1010,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167878,"byte_end":167968,"line_start":1011,"line_end":1011,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167973,"byte_end":168012,"line_start":1012,"line_end":1012,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168238,"byte_end":168252,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":4467},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168035,"byte_end":168100,"line_start":1015,"line_end":1015,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168105,"byte_end":168108,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168113,"byte_end":168206,"line_start":1017,"line_end":1017,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168211,"byte_end":168233,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4476},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168468,"byte_end":168485,"line_start":1025,"line_end":1025,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":4467},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168259,"byte_end":168327,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168332,"byte_end":168335,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168340,"byte_end":168433,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168438,"byte_end":168463,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4467},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167243,"byte_end":167253,"line_start":995,"line_end":995,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"pub enum NormalForm {\n\n    /// No pixel aliases another.\n    ///\n    /// Unaliased also guarantees that all index calculations in the image bounds using\n    /// `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.\n    Unaliased,\n\n    /// At least pixels are packed.\n    ///\n    /// Images of these types can wrap `[T]`-slices into the standard color types. This is a\n    /// precondition for `GenericImage` which requires by-reference access to pixels.\n    PixelPacked,\n\n    /// All samples are packed.\n    ///\n    /// This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but\n    /// it is not necessary that the pixel samples themselves are adjacent. An example of this\n    /// behaviour is a planar image layout.\n    ImagePacked,\n\n    /// The samples are in row-major form and all samples are packed.\n    ///\n    /// In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is\n    /// in row-major form.\n    RowMajorPacked,\n\n    /// The samples are in column-major form and all samples are packed.\n    ///\n    /// In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is\n    /// in column-major form.\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":4468},{"krate":0,"index":4470},{"krate":0,"index":4472},{"krate":0,"index":4474},{"krate":0,"index":4476}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167000,"byte_end":167038,"line_start":990,"line_end":990,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167039,"byte_end":167042,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167043,"byte_end":167142,"line_start":992,"line_end":992,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":167143,"byte_end":167182,"line_start":993,"line_end":993,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168693,"byte_end":168703,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168574,"byte_end":168605,"line_start":1032,"line_end":1032,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168610,"byte_end":168613,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168618,"byte_end":168681,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169186,"byte_end":169190,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168765,"byte_end":168816,"line_start":1039,"line_end":1039,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168821,"byte_end":168824,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168829,"byte_end":168918,"line_start":1041,"line_end":1041,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168923,"byte_end":169016,"line_start":1042,"line_end":1042,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169021,"byte_end":169108,"line_start":1043,"line_end":1043,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169113,"byte_end":169174,"line_start":1044,"line_end":1044,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169469,"byte_end":169476,"line_start":1053,"line_end":1053,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169255,"byte_end":169295,"line_start":1049,"line_end":1049,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169300,"byte_end":169303,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169308,"byte_end":169398,"line_start":1051,"line_end":1051,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169403,"byte_end":169457,"line_start":1052,"line_end":1052,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169795,"byte_end":169805,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169536,"byte_end":169598,"line_start":1057,"line_end":1057,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169603,"byte_end":169606,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169611,"byte_end":169701,"line_start":1059,"line_end":1059,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":169706,"byte_end":169783,"line_start":1060,"line_end":1060,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170679,"byte_end":170693,"line_start":1079,"line_end":1079,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>\nwhere Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170137,"byte_end":170207,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170212,"byte_end":170215,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170220,"byte_end":170314,"line_start":1073,"line_end":1073,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170319,"byte_end":170414,"line_start":1074,"line_end":1074,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170419,"byte_end":170486,"line_start":1075,"line_end":1075,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170491,"byte_end":170494,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170499,"byte_end":170593,"line_start":1077,"line_end":1077,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":170598,"byte_end":170667,"line_start":1078,"line_end":1078,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171270,"byte_end":171280,"line_start":1094,"line_end":1094,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171088,"byte_end":171178,"line_start":1091,"line_end":1091,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171183,"byte_end":171186,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171191,"byte_end":171258,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171614,"byte_end":171625,"line_start":1102,"line_end":1102,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171351,"byte_end":171413,"line_start":1098,"line_end":1098,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171418,"byte_end":171421,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171426,"byte_end":171517,"line_start":1100,"line_end":1100,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171522,"byte_end":171602,"line_start":1101,"line_end":1101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172082,"byte_end":172097,"line_start":1111,"line_end":1111,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171718,"byte_end":171788,"line_start":1106,"line_end":1106,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171793,"byte_end":171796,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171801,"byte_end":171895,"line_start":1108,"line_end":1108,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":171900,"byte_end":171996,"line_start":1109,"line_end":1109,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172001,"byte_end":172070,"line_start":1110,"line_end":1110,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172620,"byte_end":172629,"line_start":1123,"line_end":1123,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172290,"byte_end":172317,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172322,"byte_end":172325,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172330,"byte_end":172417,"line_start":1120,"line_end":1120,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172422,"byte_end":172515,"line_start":1121,"line_end":1121,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172520,"byte_end":172608,"line_start":1122,"line_end":1122,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173633,"byte_end":173644,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172784,"byte_end":172842,"line_start":1128,"line_end":1128,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172847,"byte_end":172850,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172855,"byte_end":172950,"line_start":1130,"line_end":1130,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":172955,"byte_end":173045,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173050,"byte_end":173138,"line_start":1132,"line_end":1132,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173143,"byte_end":173219,"line_start":1133,"line_end":1133,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173224,"byte_end":173227,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173232,"byte_end":173239,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173244,"byte_end":173270,"line_start":1136,"line_end":1136,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173275,"byte_end":173296,"line_start":1137,"line_end":1137,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173301,"byte_end":173366,"line_start":1138,"line_end":1138,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173371,"byte_end":173440,"line_start":1139,"line_end":1139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173445,"byte_end":173448,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173453,"byte_end":173484,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173489,"byte_end":173492,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173497,"byte_end":173557,"line_start":1143,"line_end":1143,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173562,"byte_end":173609,"line_start":1144,"line_end":1144,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":173614,"byte_end":173621,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174285,"byte_end":174295,"line_start":1168,"line_end":1168,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174166,"byte_end":174197,"line_start":1165,"line_end":1165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174202,"byte_end":174205,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174210,"byte_end":174273,"line_start":1167,"line_end":1167,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174779,"byte_end":174783,"line_start":1178,"line_end":1178,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174357,"byte_end":174409,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174414,"byte_end":174417,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174422,"byte_end":174511,"line_start":1174,"line_end":1174,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174516,"byte_end":174609,"line_start":1175,"line_end":1175,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174614,"byte_end":174701,"line_start":1176,"line_end":1176,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174706,"byte_end":174767,"line_start":1177,"line_end":1177,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175156,"byte_end":175163,"line_start":1187,"line_end":1187,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174848,"byte_end":174888,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174893,"byte_end":174896,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174901,"byte_end":174991,"line_start":1184,"line_end":1184,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174996,"byte_end":175088,"line_start":1185,"line_end":1185,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175093,"byte_end":175144,"line_start":1186,"line_end":1186,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175405,"byte_end":175415,"line_start":1194,"line_end":1194,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175223,"byte_end":175313,"line_start":1191,"line_end":1191,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175318,"byte_end":175321,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175326,"byte_end":175393,"line_start":1193,"line_end":1193,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175726,"byte_end":175736,"line_start":1202,"line_end":1202,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175486,"byte_end":175529,"line_start":1198,"line_end":1198,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175534,"byte_end":175537,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175542,"byte_end":175632,"line_start":1200,"line_end":1200,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":175637,"byte_end":175714,"line_start":1201,"line_end":1201,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176361,"byte_end":176375,"line_start":1218,"line_end":1218,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176115,"byte_end":176164,"line_start":1214,"line_end":1214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176169,"byte_end":176172,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176177,"byte_end":176267,"line_start":1216,"line_end":1216,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176272,"byte_end":176349,"line_start":1217,"line_end":1217,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176986,"byte_end":176997,"line_start":1232,"line_end":1232,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel] where Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176723,"byte_end":176785,"line_start":1228,"line_end":1228,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176790,"byte_end":176793,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176798,"byte_end":176889,"line_start":1230,"line_end":1230,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":176894,"byte_end":176974,"line_start":1231,"line_end":1231,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177196,"byte_end":177211,"line_start":1237,"line_end":1237,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177129,"byte_end":177184,"line_start":1236,"line_end":1236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177679,"byte_end":177688,"line_start":1247,"line_end":1247,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177349,"byte_end":177376,"line_start":1242,"line_end":1242,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177381,"byte_end":177384,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177389,"byte_end":177476,"line_start":1244,"line_end":1244,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177481,"byte_end":177574,"line_start":1245,"line_end":1245,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":177579,"byte_end":177667,"line_start":1246,"line_end":1246,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":719},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7756,"byte_end":7762,"line_start":218,"line_end":218,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":975},{"krate":0,"index":1028},{"krate":0,"index":1150},{"krate":0,"index":1243},{"krate":0,"index":1360},{"krate":0,"index":1588},{"krate":0,"index":1715},{"krate":0,"index":1959},{"krate":0,"index":2094},{"krate":0,"index":2490},{"krate":0,"index":2659},{"krate":0,"index":2731}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5678,"byte_end":5735,"line_start":178,"line_end":178,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5736,"byte_end":5739,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5740,"byte_end":5763,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5764,"byte_end":5767,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5768,"byte_end":5804,"line_start":182,"line_end":182,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5805,"byte_end":5841,"line_start":183,"line_end":183,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5842,"byte_end":5903,"line_start":184,"line_end":184,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5904,"byte_end":5961,"line_start":185,"line_end":185,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5962,"byte_end":5988,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | RGB8, RGBA8, Gray8, GrayA8 |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5989,"byte_end":6038,"line_start":187,"line_end":187,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6039,"byte_end":6065,"line_start":188,"line_end":188,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | RGB8, RGBA8, Gray8 |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6066,"byte_end":6145,"line_start":189,"line_end":189,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Lossy(Luma channel only) | No |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6146,"byte_end":6192,"line_start":190,"line_end":190,"column_start":1,"column_end":47}},{"value":"/ | AVIF   | Only 8-bit | Lossy |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6193,"byte_end":6228,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6229,"byte_end":6279,"line_start":192,"line_end":192,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6280,"byte_end":6318,"line_start":193,"line_end":193,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | RGB8, RGBA8, BGR8, BGRA8, Gray8, GrayA8 |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6319,"byte_end":6381,"line_start":194,"line_end":194,"column_start":1,"column_end":63}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6382,"byte_end":6410,"line_start":195,"line_end":195,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6411,"byte_end":6414,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6415,"byte_end":6456,"line_start":197,"line_end":197,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6457,"byte_end":6460,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6461,"byte_end":6553,"line_start":199,"line_end":199,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6554,"byte_end":6652,"line_start":200,"line_end":200,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6653,"byte_end":6746,"line_start":201,"line_end":201,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6747,"byte_end":6846,"line_start":202,"line_end":202,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6847,"byte_end":6943,"line_start":203,"line_end":203,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6944,"byte_end":6947,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":6948,"byte_end":7039,"line_start":205,"line_end":205,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7040,"byte_end":7112,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7113,"byte_end":7116,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7117,"byte_end":7211,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7212,"byte_end":7269,"line_start":209,"line_end":209,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7270,"byte_end":7364,"line_start":210,"line_end":210,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7365,"byte_end":7464,"line_start":211,"line_end":211,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7465,"byte_end":7563,"line_start":212,"line_end":212,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7564,"byte_end":7588,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7589,"byte_end":7592,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7593,"byte_end":7654,"line_start":215,"line_end":215,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7655,"byte_end":7658,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7659,"byte_end":7747,"line_start":217,"line_end":217,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":720},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::codecs::bmp","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":933}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7855,"byte_end":7878,"line_start":221,"line_end":221,"column_start":5,"column_end":28}},{"value":"!  Decoding and Encoding of BMP Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":190864,"byte_end":190904,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":190905,"byte_end":190908,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":190909,"byte_end":190967,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":190968,"byte_end":190971,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":190972,"byte_end":190992,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":190993,"byte_end":191085,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"!  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":191086,"byte_end":191140,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/mod.rs","byte_start":191141,"byte_end":191144,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":209281,"byte_end":209291,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::codecs::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":209252,"byte_end":209269,"line_start":544,"line_end":544,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":211859,"byte_end":211862,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":211786,"byte_end":211847,"line_start":631,"line_end":631,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":223660,"byte_end":223687,"line_start":945,"line_end":945,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"pub fn read_metadata_in_ico_format(&mut Self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":223606,"byte_end":223629,"line_start":943,"line_end":943,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":243616,"byte_end":243625,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::codecs::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":243559,"byte_end":243604,"line_start":1418,"line_end":1418,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":950},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246537,"byte_end":246547,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BmpEncoder","qualname":"::codecs::bmp::encoder::BmpEncoder","value":"BmpEncoder {  }","parent":null,"children":[{"krate":0,"index":953}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246485,"byte_end":246525,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":954},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246785,"byte_end":246795,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"name":"BMPEncoder","qualname":"::codecs::bmp::encoder::BMPEncoder","value":"BmpEncoder","parent":null,"children":[],"decl_id":null,"docs":" BMP Encoder","sig":null,"attributes":[{"value":"/ BMP Encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246587,"byte_end":246602,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246603,"byte_end":246606,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ An alias of [`BmpEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246607,"byte_end":246638,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246639,"byte_end":246642,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246643,"byte_end":246659,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246660,"byte_end":246663,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`BmpEncoder`]: struct.BmpEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246664,"byte_end":246706,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246707,"byte_end":246726,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `BmpEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246727,"byte_end":246775,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246944,"byte_end":246947,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpEncoder>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246873,"byte_end":246932,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":247155,"byte_end":247161,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"encode","qualname":"<BmpEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":247016,"byte_end":247049,"line_start":34,"line_end":34,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":247054,"byte_end":247106,"line_start":35,"line_end":35,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":247111,"byte_end":247143,"line_start":36,"line_end":36,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":975},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::codecs::dds","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":4680},{"krate":0,"index":4713},{"krate":0,"index":4712},{"krate":0,"index":4710},{"krate":0,"index":4707},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4694},{"krate":0,"index":4692},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":4715},{"krate":0,"index":4725},{"krate":0,"index":4727},{"krate":0,"index":4736},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1019}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7900,"byte_end":7923,"line_start":223,"line_end":223,"column_start":5,"column_end":28}},{"value":"!  Decoding of DDS images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":258113,"byte_end":258140,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":258141,"byte_end":258144,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  DDS (DirectDraw Surface) is a container format for storing DXT (S3TC) compressed images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":258145,"byte_end":258238,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":258239,"byte_end":258242,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":258243,"byte_end":258263,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-pguide> - Description of the DDS format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":258264,"byte_end":258387,"line_start":6,"line_end":6,"column_start":1,"column_end":124}}]},{"kind":"Struct","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":262819,"byte_end":262829,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::codecs::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":1014}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[{"value":"/ The representation of a DDS decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":262768,"byte_end":262807,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":262973,"byte_end":262976,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":262904,"byte_end":262961,"line_start":160,"line_end":160,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::codecs::dxt","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":4738},{"krate":0,"index":4754},{"krate":0,"index":4753},{"krate":0,"index":4751},{"krate":0,"index":4748},{"krate":0,"index":4749},{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1053},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1073},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1134},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7945,"byte_end":7968,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"!  Decoding of DXT (S3TC) compression","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266552,"byte_end":266591,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266592,"byte_end":266595,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  DXT is an image format that supports lossy compression","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266596,"byte_end":266655,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266656,"byte_end":266659,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266660,"byte_end":266680,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266681,"byte_end":266833,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266834,"byte_end":266837,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"!  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":266838,"byte_end":266967,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267749,"byte_end":267753,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::codecs::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267625,"byte_end":267691,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267696,"byte_end":267744,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4741},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267884,"byte_end":267888,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::codecs::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267759,"byte_end":267826,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267831,"byte_end":267879,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4743},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268019,"byte_end":268023,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::codecs::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267894,"byte_end":267961,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267966,"byte_end":268014,"line_start":35,"line_end":35,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":4738},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267608,"byte_end":267618,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::codecs::dxt::DXTVariant","value":"pub enum DXTVariant {\n\n    /// The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n    /// compressed into an 8 byte block of DXT1 data\n    DXT1,\n\n    /// The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n    /// compressed into a 16 byte block of DXT3 data\n    DXT3,\n\n    /// The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n    /// compressed into a 16 byte block of DXT5 data\n    DXT5,\n}","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267242,"byte_end":267291,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267292,"byte_end":267344,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267345,"byte_end":267392,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267393,"byte_end":267396,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: The name of this enum will be changed to [`DxtVariant`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267397,"byte_end":267469,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267470,"byte_end":267473,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ TODO: rename to [`DxtVariant`]","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267474,"byte_end":267508,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267509,"byte_end":267512,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`DxtVariant`]: type.DxtVariant.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":267513,"byte_end":267553,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268220,"byte_end":268230,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"DxtVariant","qualname":"::codecs::dxt::DxtVariant","value":"DXTVariant","parent":null,"children":[],"decl_id":null,"docs":" DXT compression version.","sig":null,"attributes":[{"value":"/ DXT compression version.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268028,"byte_end":268056,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268057,"byte_end":268060,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ An alias of [`DXTVariant`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268061,"byte_end":268092,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268093,"byte_end":268096,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ TODO: remove when [`DXTVariant`] is renamed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268097,"byte_end":268145,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268146,"byte_end":268149,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`DXTVariant`]: enum.DXTVariant.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268150,"byte_end":268190,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268191,"byte_end":268210,"line_start":46,"line_end":46,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268862,"byte_end":268872,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DXTVariant>::color_type","value":"pub fn color_type(Self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the color type that is stored in this DXT variant","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268789,"byte_end":268850,"line_start":67,"line_end":67,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269079,"byte_end":269089,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::codecs::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269052,"byte_end":269067,"line_start":76,"line_end":76,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269669,"byte_end":269672,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"pub fn new(R, u32, u32, DXTVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269238,"byte_end":269304,"line_start":86,"line_end":86,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269309,"byte_end":269372,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269377,"byte_end":269434,"line_start":88,"line_end":88,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269439,"byte_end":269503,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269508,"byte_end":269541,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269546,"byte_end":269613,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269618,"byte_end":269657,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273042,"byte_end":273051,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"DxtReader","qualname":"::codecs::dxt::DxtReader","value":"DxtReader {  }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273016,"byte_end":273030,"line_start":193,"line_end":193,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273316,"byte_end":273325,"line_start":208,"line_end":208,"column_start":10,"column_end":19},"name":"DXTReader","qualname":"::codecs::dxt::DXTReader","value":"DxtReader<R>","parent":null,"children":[],"decl_id":null,"docs":" DXT reader","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273123,"byte_end":273137,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273138,"byte_end":273141,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ An alias of [`DxtReader`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273142,"byte_end":273172,"line_start":201,"line_end":201,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273173,"byte_end":273176,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273177,"byte_end":273193,"line_start":203,"line_end":203,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273194,"byte_end":273197,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`DxtReader`]: struct.DxtReader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273198,"byte_end":273238,"line_start":205,"line_end":205,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273239,"byte_end":273258,"line_start":206,"line_end":206,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `DxtReader` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273259,"byte_end":273306,"line_start":207,"line_end":207,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273587,"byte_end":273597,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"DxtEncoder","qualname":"::codecs::dxt::DxtEncoder","value":"DxtEncoder {  }","parent":null,"children":[{"krate":0,"index":1093}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273560,"byte_end":273575,"line_start":217,"line_end":217,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273821,"byte_end":273831,"line_start":231,"line_end":231,"column_start":10,"column_end":20},"name":"DXTEncoder","qualname":"::codecs::dxt::DXTEncoder","value":"DxtEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" DXT encoder","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273623,"byte_end":273638,"line_start":222,"line_end":222,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273639,"byte_end":273642,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ An alias of [`DxtEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273643,"byte_end":273674,"line_start":224,"line_end":224,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273675,"byte_end":273678,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273679,"byte_end":273695,"line_start":226,"line_end":226,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273696,"byte_end":273699,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ [`DxtEncoder`]: struct.DxtEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273700,"byte_end":273742,"line_start":228,"line_end":228,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273743,"byte_end":273762,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `DxtEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273763,"byte_end":273811,"line_start":230,"line_end":230,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273958,"byte_end":273961,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtEncoder<W>>::new","value":"pub fn new(W) -> DxtEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273888,"byte_end":273946,"line_start":234,"line_end":234,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":274225,"byte_end":274231,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"encode","qualname":"<DxtEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":274023,"byte_end":274060,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":274065,"byte_end":274117,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/ in ```DXTVariant``` ```variant```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":274122,"byte_end":274159,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.color_type()","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":274164,"byte_end":274213,"line_start":242,"line_end":242,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::codecs::farbfeld","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1186},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1223},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1240}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7990,"byte_end":8018,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"! Decoding of farbfeld images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296237,"byte_end":296268,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296269,"byte_end":296272,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! farbfeld is a lossless image format which is easy to parse, pipe and compress.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296273,"byte_end":296355,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296356,"byte_end":296359,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! It has the following format:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296360,"byte_end":296392,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296393,"byte_end":296396,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! | Bytes  | Description                                             |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296397,"byte_end":296469,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! |--------|---------------------------------------------------------|","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296470,"byte_end":296542,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! | 8      | \"farbfeld\" magic value                                  |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296543,"byte_end":296615,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"! | 4      | 32-Bit BE unsigned integer (width)                      |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296616,"byte_end":296688,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"! | 4      | 32-Bit BE unsigned integer (height)                     |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296689,"byte_end":296761,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"! | [2222] | 4⋅16-Bit BE unsigned integers [RGBA] / pixel, row-major |","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296762,"byte_end":296836,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296837,"byte_end":296840,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The RGB-data should be sRGB for best interoperability and not alpha-premultiplied.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296841,"byte_end":296927,"line_start":14,"line_end":14,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296928,"byte_end":296931,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296932,"byte_end":296951,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"! * <https://tools.suckless.org/farbfeld/> - the farbfeld specification","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":296952,"byte_end":297025,"line_start":17,"line_end":17,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":297450,"byte_end":297464,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::codecs::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[{"value":"/ farbfeld Reader","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":297419,"byte_end":297438,"line_start":29,"line_end":29,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":302825,"byte_end":302840,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::codecs::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":1211}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[{"value":"/ farbfeld decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":302793,"byte_end":302813,"line_start":181,"line_end":181,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":302999,"byte_end":303002,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":302925,"byte_end":302987,"line_start":187,"line_end":187,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304345,"byte_end":304360,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::codecs::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":1233}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[{"value":"/ farbfeld encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304313,"byte_end":304333,"line_start":234,"line_end":234,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304507,"byte_end":304510,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"pub fn new(W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304437,"byte_end":304495,"line_start":240,"line_end":240,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304718,"byte_end":304724,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data``` (native endian)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304601,"byte_end":304649,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304654,"byte_end":304706,"line_start":246,"line_end":246,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::codecs::gif","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":7064},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":7082},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1289},{"krate":0,"index":1293},{"krate":0,"index":1301},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1316},{"krate":0,"index":1320},{"krate":0,"index":1327},{"krate":0,"index":4756},{"krate":0,"index":4765},{"krate":0,"index":4764},{"krate":0,"index":4762},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1355}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8045,"byte_end":8068,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"!  Decoding of GIF Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309166,"byte_end":309193,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309194,"byte_end":309197,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309198,"byte_end":309291,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309292,"byte_end":309295,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309296,"byte_end":309316,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309317,"byte_end":309396,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309397,"byte_end":309400,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309401,"byte_end":309415,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309416,"byte_end":309434,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"! use image::gif::{GifDecoder, GifEncoder};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309435,"byte_end":309480,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"! use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309481,"byte_end":309529,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"! use std::fs::File;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309530,"byte_end":309552,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"! # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309553,"byte_end":309593,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"! // Decode a gif into frames","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309594,"byte_end":309625,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"! let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309626,"byte_end":309667,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"! let mut decoder = GifDecoder::new(file_in).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309668,"byte_end":309724,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"! let frames = decoder.into_frames();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309725,"byte_end":309764,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"! let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309765,"byte_end":309835,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309836,"byte_end":309839,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! // Encode frames into a gif and save to a file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309840,"byte_end":309890,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"! let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309891,"byte_end":309937,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"! let mut encoder = GifEncoder::new(file_out);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309938,"byte_end":309986,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"! encoder.encode_frames(frames.into_iter());","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":309987,"byte_end":310033,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"! # Ok(())","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310034,"byte_end":310046,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310047,"byte_end":310054,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310055,"byte_end":310062,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310063,"byte_end":310096,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310680,"byte_end":310690,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::codecs::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1280}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310653,"byte_end":310668,"line_start":46,"line_end":46,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310842,"byte_end":310845,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310768,"byte_end":310830,"line_start":52,"line_end":52,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":311170,"byte_end":311179,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::codecs::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":311113,"byte_end":311158,"line_start":63,"line_end":63,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4757},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321044,"byte_end":321050,"line_start":324,"line_end":324,"column_start":5,"column_end":11},"name":"Finite","qualname":"::codecs::gif::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":4756},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321007,"byte_end":321039,"line_start":323,"line_end":323,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4760},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321081,"byte_end":321089,"line_start":326,"line_end":326,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::codecs::gif::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":4756},"children":[],"decl_id":null,"docs":" Looping GIF\n","sig":null,"attributes":[{"value":"/ Looping GIF","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321061,"byte_end":321076,"line_start":325,"line_end":325,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":4756},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":320994,"byte_end":321000,"line_start":322,"line_end":322,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::codecs::gif::Repeat","value":"pub enum Repeat {\n\n    /// Finite number of repetitions\n    Finite(u16),\n\n    /// Looping GIF\n    Infinite,\n}","parent":null,"children":[{"krate":0,"index":4757},{"krate":0,"index":4760}],"decl_id":null,"docs":" Number of repetitions for a GIF animation\n","sig":null,"attributes":[{"value":"/ Number of repetitions for a GIF animation","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":320909,"byte_end":320954,"line_start":320,"line_end":320,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321343,"byte_end":321353,"line_start":339,"line_end":339,"column_start":12,"column_end":22},"name":"GifEncoder","qualname":"::codecs::gif::GifEncoder","value":"GifEncoder {  }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321315,"byte_end":321331,"line_start":338,"line_end":338,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321671,"byte_end":321678,"line_start":355,"line_end":355,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::codecs::gif::Encoder","value":"GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" GIF encoder","sig":null,"attributes":[{"value":"/ GIF encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321473,"byte_end":321488,"line_start":346,"line_end":346,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321489,"byte_end":321492,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ An alias of [`GifEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321493,"byte_end":321524,"line_start":348,"line_end":348,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321525,"byte_end":321528,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321529,"byte_end":321545,"line_start":350,"line_end":350,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321546,"byte_end":321549,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ [`GifEncoder`]: struct.GifEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321550,"byte_end":321592,"line_start":352,"line_end":352,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321593,"byte_end":321612,"line_start":353,"line_end":353,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `GifEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321613,"byte_end":321661,"line_start":354,"line_end":354,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321777,"byte_end":321780,"line_start":359,"line_end":359,"column_start":12,"column_end":15},"name":"new","qualname":"<GifEncoder<W>>::new","value":"pub fn new(W) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321735,"byte_end":321765,"line_start":358,"line_end":358,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":322045,"byte_end":322059,"line_start":366,"line_end":366,"column_start":12,"column_end":26},"name":"new_with_speed","qualname":"<GifEncoder<W>>::new_with_speed","value":"pub fn new_with_speed(W, i32) -> GifEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new GIF encoder, and has the speed parameter `speed`. See\n [`Frame::from_rgba_speed`](/gif/struct.Frame.html#method.from_rgb_speed)\n for more information.\n","sig":null,"attributes":[{"value":"/ Create a new GIF encoder, and has the speed parameter `speed`. See","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321852,"byte_end":321922,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ [`Frame::from_rgba_speed`](/gif/struct.Frame.html#method.from_rgb_speed)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321927,"byte_end":322003,"line_start":364,"line_end":364,"column_start":5,"column_end":81}},{"value":"/ for more information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":322008,"byte_end":322033,"line_start":365,"line_end":365,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":322384,"byte_end":322394,"line_start":377,"line_end":377,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<GifEncoder<W>>::set_repeat","value":"pub fn set_repeat(&mut Self, Repeat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the repeat behaviour of the encoded GIF\n","sig":null,"attributes":[{"value":"/ Set the repeat behaviour of the encoded GIF","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":322325,"byte_end":322372,"line_start":376,"line_end":376,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":322701,"byte_end":322707,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"encode","qualname":"<GifEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[{"value":"/ Encode a single image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":322663,"byte_end":322689,"line_start":385,"line_end":385,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":323422,"byte_end":323434,"line_start":407,"line_end":407,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<GifEncoder<W>>::encode_frame","value":"pub fn encode_frame(&mut Self, animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[{"value":"/ Encode one frame of animation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":323376,"byte_end":323410,"line_start":406,"line_end":406,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":323720,"byte_end":323733,"line_start":414,"line_end":414,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<GifEncoder<W>>::encode_frames","value":"pub fn encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = animation::Frame>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":323590,"byte_end":323609,"line_start":412,"line_end":412,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":323614,"byte_end":323708,"line_start":413,"line_end":413,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":324211,"byte_end":324228,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<GifEncoder<W>>::try_encode_frames","value":"pub fn try_encode_frames<F>(&mut Self, F) -> ImageResult<()> where\nF: IntoIterator<Item = ImageResult<animation::Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":323956,"byte_end":324030,"line_start":424,"line_end":424,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":324035,"byte_end":324104,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":324109,"byte_end":324199,"line_start":426,"line_end":426,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::codecs::hdr","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1533},{"krate":0,"index":1586},{"krate":0,"index":1587}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8090,"byte_end":8113,"line_start":231,"line_end":231,"column_start":5,"column_end":28}},{"value":"!  Decoding of Radiance HDR Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328376,"byte_end":328412,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328413,"byte_end":328416,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder for Radiance HDR images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328417,"byte_end":328455,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328456,"byte_end":328459,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328460,"byte_end":328480,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328481,"byte_end":328484,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"!  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328485,"byte_end":328544,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"!  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328545,"byte_end":328602,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/mod.rs","byte_start":328603,"byte_end":328606,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4840},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333165,"byte_end":333175,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"HdrAdapter","qualname":"::codecs::hdr::decoder::HdrAdapter","value":"HdrAdapter {  }","parent":null,"children":[{"krate":0,"index":4842},{"krate":0,"index":4843}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333086,"byte_end":333136,"line_start":116,"line_end":116,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333478,"byte_end":333488,"line_start":133,"line_end":133,"column_start":10,"column_end":20},"name":"HDRAdapter","qualname":"::codecs::hdr::decoder::HDRAdapter","value":"HdrAdapter<R>","parent":null,"children":[],"decl_id":null,"docs":" HDR Adapter","sig":null,"attributes":[{"value":"/ HDR Adapter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333280,"byte_end":333295,"line_start":124,"line_end":124,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333296,"byte_end":333299,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrAdapter`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333300,"byte_end":333331,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333332,"byte_end":333335,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333336,"byte_end":333352,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333353,"byte_end":333356,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [`HdrAdapter`]: struct.HdrAdapter.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333357,"byte_end":333399,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333400,"byte_end":333419,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrAdapter` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333420,"byte_end":333468,"line_start":132,"line_end":132,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333578,"byte_end":333581,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrAdapter<R>>::new","value":"pub fn new(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333547,"byte_end":333566,"line_start":136,"line_end":136,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333854,"byte_end":333867,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HdrAdapter<R>>::new_nonstrict","value":"pub fn new_nonstrict(R) -> ImageResult<HdrAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333800,"byte_end":333842,"line_start":146,"line_end":146,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":334844,"byte_end":334853,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::codecs::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":334787,"byte_end":334832,"line_start":175,"line_end":175,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336297,"byte_end":336306,"line_start":227,"line_end":227,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::codecs::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336255,"byte_end":336286,"line_start":226,"line_end":226,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336424,"byte_end":336434,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::codecs::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336368,"byte_end":336395,"line_start":230,"line_end":230,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4856},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336659,"byte_end":336669,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"Rgbe8Pixel","qualname":"::codecs::hdr::decoder::Rgbe8Pixel","value":"Rgbe8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":4857},{"krate":0,"index":4859}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336509,"byte_end":336582,"line_start":239,"line_end":239,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336583,"byte_end":336593,"line_start":240,"line_end":240,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336705,"byte_end":336706,"line_start":244,"line_end":244,"column_start":9,"column_end":10},"name":"c","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":4856},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336676,"byte_end":336696,"line_start":243,"line_end":243,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336742,"byte_end":336743,"line_start":246,"line_end":246,"column_start":9,"column_end":10},"name":"e","qualname":"::codecs::hdr::decoder::Rgbe8Pixel::e","value":"u8","parent":{"krate":0,"index":4856},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336721,"byte_end":336733,"line_start":245,"line_end":245,"column_start":5,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337008,"byte_end":337018,"line_start":258,"line_end":258,"column_start":10,"column_end":20},"name":"RGBE8Pixel","qualname":"::codecs::hdr::decoder::RGBE8Pixel","value":"Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336752,"byte_end":336825,"line_start":249,"line_end":249,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336826,"byte_end":336829,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ An alias of [`Rgbe8Pixel`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336830,"byte_end":336861,"line_start":251,"line_end":251,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336862,"byte_end":336865,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336866,"byte_end":336882,"line_start":253,"line_end":253,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336883,"byte_end":336886,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`Rgbe8Pixel`]: struct.Rgbe8Pixel.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336887,"byte_end":336929,"line_start":255,"line_end":255,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336930,"byte_end":336949,"line_start":256,"line_end":256,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `Rgbe8Pixel` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":336950,"byte_end":336998,"line_start":257,"line_end":257,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337086,"byte_end":337091,"line_start":261,"line_end":261,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::codecs::hdr::decoder::rgbe8","value":"pub fn rgbe8(u8, u8, u8, u8) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337034,"byte_end":337078,"line_start":260,"line_end":260,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337280,"byte_end":337286,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<Rgbe8Pixel>::to_hdr","value":"pub fn to_hdr(Self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337196,"byte_end":337254,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337259,"byte_end":337268,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338046,"byte_end":338052,"line_start":290,"line_end":290,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<Rgbe8Pixel>::to_ldr","value":"pub fn to_ldr<T: Primitive + Zero>(Self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337781,"byte_end":337855,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337860,"byte_end":337863,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337868,"byte_end":337917,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337922,"byte_end":337925,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337930,"byte_end":337941,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337946,"byte_end":337949,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337954,"byte_end":338020,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338025,"byte_end":338034,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338438,"byte_end":338456,"line_start":303,"line_end":303,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<Rgbe8Pixel>::to_ldr_scale_gamma","value":"pub fn to_ldr_scale_gamma<T: Primitive + Zero>(Self, f32, f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338145,"byte_end":338211,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338216,"byte_end":338219,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338224,"byte_end":338273,"line_start":296,"line_end":296,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338278,"byte_end":338281,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338286,"byte_end":338297,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338302,"byte_end":338305,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338310,"byte_end":338370,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338375,"byte_end":338412,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":338417,"byte_end":338426,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339664,"byte_end":339667,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339515,"byte_end":339570,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HdrDecoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339575,"byte_end":339621,"line_start":332,"line_end":332,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339626,"byte_end":339652,"line_start":333,"line_end":333,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":340075,"byte_end":340090,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"pub fn with_strictness(R, bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339772,"byte_end":339833,"line_start":338,"line_end":338,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HdrDecoder```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339838,"byte_end":339891,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339896,"byte_end":339899,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339904,"byte_end":339934,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339939,"byte_end":339942,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339947,"byte_end":339997,"line_start":343,"line_end":343,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":340002,"byte_end":340063,"line_start":344,"line_end":344,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":343179,"byte_end":343187,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"pub fn metadata(&Self) -> HdrMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":343101,"byte_end":343167,"line_start":424,"line_end":424,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":343318,"byte_end":343335,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"pub fn read_image_native(Self) -> ImageResult<Vec<Rgbe8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":343249,"byte_end":343306,"line_start":429,"line_end":429,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":343968,"byte_end":343988,"line_start":445,"line_end":445,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"pub fn read_image_transform<T: Send, F: Send + Sync + Fn(Rgbe8Pixel) ->\n                            T>(Self, F, &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":343893,"byte_end":343956,"line_start":444,"line_end":444,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345127,"byte_end":345141,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"pub fn read_image_ldr(Self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345024,"byte_end":345084,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345089,"byte_end":345115,"line_start":480,"line_end":480,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345445,"byte_end":345459,"line_start":489,"line_end":489,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"pub fn read_image_hdr(Self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345364,"byte_end":345425,"line_start":487,"line_end":487,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345430,"byte_end":345433,"line_start":488,"line_end":488,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346270,"byte_end":346293,"line_start":514,"line_end":514,"column_start":12,"column_end":35},"name":"HdrImageDecoderIterator","qualname":"::codecs::hdr::decoder::HdrImageDecoderIterator","value":"HdrImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346213,"byte_end":346258,"line_start":513,"line_end":513,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346894,"byte_end":346917,"line_start":533,"line_end":533,"column_start":10,"column_end":33},"name":"HDRImageDecoderIterator","qualname":"::codecs::hdr::decoder::HDRImageDecoderIterator","value":"HdrImageDecoderIterator<R>","parent":null,"children":[],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346614,"byte_end":346659,"line_start":524,"line_end":524,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346660,"byte_end":346663,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrImageDecoderIterator`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346664,"byte_end":346708,"line_start":526,"line_end":526,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346709,"byte_end":346712,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346713,"byte_end":346729,"line_start":528,"line_end":528,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346730,"byte_end":346733,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ [`HdrImageDecoderIterator`]: struct.HdrImageDecoderIterator.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346734,"byte_end":346802,"line_start":530,"line_end":530,"column_start":1,"column_end":69}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346803,"byte_end":346822,"line_start":531,"line_end":531,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrImageDecoderIterator` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346823,"byte_end":346884,"line_start":532,"line_end":532,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4876},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354196,"byte_end":354207,"line_start":747,"line_end":747,"column_start":12,"column_end":23},"name":"HdrMetadata","qualname":"::codecs::hdr::decoder::HdrMetadata","value":"HdrMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354125,"byte_end":354160,"line_start":745,"line_end":745,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354345,"byte_end":354350,"line_start":750,"line_end":750,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::hdr::decoder::HdrMetadata::width","value":"u32","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354214,"byte_end":354277,"line_start":748,"line_end":748,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354282,"byte_end":354336,"line_start":749,"line_end":749,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354429,"byte_end":354435,"line_start":752,"line_end":752,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::hdr::decoder::HdrMetadata::height","value":"u32","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354361,"byte_end":354420,"line_start":751,"line_end":751,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4879},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354710,"byte_end":354721,"line_start":756,"line_end":756,"column_start":9,"column_end":20},"name":"orientation","qualname":"::codecs::hdr::decoder::HdrMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354446,"byte_end":354546,"line_start":753,"line_end":753,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354551,"byte_end":354628,"line_start":754,"line_end":754,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354633,"byte_end":354701,"line_start":755,"line_end":755,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4880},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354946,"byte_end":354954,"line_start":761,"line_end":761,"column_start":9,"column_end":17},"name":"exposure","qualname":"::codecs::hdr::decoder::HdrMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354749,"byte_end":354819,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354824,"byte_end":354857,"line_start":758,"line_end":758,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354862,"byte_end":354865,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354870,"byte_end":354937,"line_start":760,"line_end":760,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355198,"byte_end":355214,"line_start":766,"line_end":766,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::codecs::hdr::decoder::HdrMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":354973,"byte_end":355068,"line_start":762,"line_end":762,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355073,"byte_end":355109,"line_start":763,"line_end":763,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355114,"byte_end":355117,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355122,"byte_end":355189,"line_start":765,"line_end":765,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355293,"byte_end":355311,"line_start":768,"line_end":768,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::codecs::hdr::decoder::HdrMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355245,"byte_end":355284,"line_start":767,"line_end":767,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4883},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355540,"byte_end":355557,"line_start":772,"line_end":772,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::codecs::hdr::decoder::HdrMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":4876},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355330,"byte_end":355415,"line_start":769,"line_end":769,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355420,"byte_end":355490,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355495,"byte_end":355531,"line_start":771,"line_end":771,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355788,"byte_end":355799,"line_start":784,"line_end":784,"column_start":10,"column_end":21},"name":"HDRMetadata","qualname":"::codecs::hdr::decoder::HDRMetadata","value":"HdrMetadata","parent":null,"children":[],"decl_id":null,"docs":" HDR MetaData","sig":null,"attributes":[{"value":"/ HDR MetaData","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355585,"byte_end":355601,"line_start":775,"line_end":775,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355602,"byte_end":355605,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrMetadata`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355606,"byte_end":355638,"line_start":777,"line_end":777,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355639,"byte_end":355642,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355643,"byte_end":355659,"line_start":779,"line_end":779,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355660,"byte_end":355663,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ [`HdrMetadata`]: struct.HdrMetadata.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355664,"byte_end":355708,"line_start":781,"line_end":781,"column_start":1,"column_end":45}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355709,"byte_end":355728,"line_start":782,"line_end":782,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrMetadata` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355729,"byte_end":355778,"line_start":783,"line_end":783,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":364848,"byte_end":364861,"line_start":1004,"line_end":1004,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::codecs::hdr::decoder::read_raw_file","value":"pub fn read_raw_file<P: AsRef<Path>>(P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":364784,"byte_end":364840,"line_start":1003,"line_end":1003,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366030,"byte_end":366040,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HdrEncoder","qualname":"::codecs::hdr::encoder::HdrEncoder","value":"HdrEncoder {  }","parent":null,"children":[{"krate":0,"index":1546}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":365994,"byte_end":366018,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366264,"byte_end":366274,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"HDREncoder","qualname":"::codecs::hdr::encoder::HDREncoder","value":"HdrEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" HDR Encoder","sig":null,"attributes":[{"value":"/ HDR Encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366066,"byte_end":366081,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366082,"byte_end":366085,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An alias of [`HdrEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366086,"byte_end":366117,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366118,"byte_end":366121,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366122,"byte_end":366138,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366139,"byte_end":366142,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`HdrEncoder`]: struct.HdrEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366143,"byte_end":366185,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366186,"byte_end":366205,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `HdrEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366206,"byte_end":366254,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366362,"byte_end":366365,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrEncoder<W>>::new","value":"pub fn new(W) -> HdrEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366331,"byte_end":366350,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366528,"byte_end":366534,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<HdrEncoder<W>>::encode","value":"pub fn encode(Self, &[Rgb<f32>], usize, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366427,"byte_end":366459,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366464,"byte_end":366516,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":373964,"byte_end":373972,"line_start":239,"line_end":239,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::codecs::hdr::encoder::to_rgbe8","value":"pub fn to_rgbe8(Rgb<f32>) -> Rgbe8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":373907,"byte_end":373956,"line_start":238,"line_end":238,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::codecs::ico","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1683}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8135,"byte_end":8158,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"!  Decoding and Encoding of ICO files","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381349,"byte_end":381388,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381389,"byte_end":381392,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381393,"byte_end":381465,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381466,"byte_end":381469,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381470,"byte_end":381490,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381491,"byte_end":381554,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/mod.rs","byte_start":381555,"byte_end":381615,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385816,"byte_end":385826,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::codecs::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385786,"byte_end":385804,"line_start":104,"line_end":104,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":386966,"byte_end":386969,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":386893,"byte_end":386954,"line_start":141,"line_end":141,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":390483,"byte_end":390492,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::codecs::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":390426,"byte_end":390471,"line_start":258,"line_end":258,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396506,"byte_end":396516,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"IcoEncoder","qualname":"::codecs::ico::encoder::IcoEncoder","value":"IcoEncoder {  }","parent":null,"children":[{"krate":0,"index":1699}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396479,"byte_end":396494,"line_start":17,"line_end":17,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396740,"byte_end":396750,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"name":"ICOEncoder","qualname":"::codecs::ico::encoder::ICOEncoder","value":"IcoEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" ICO encoder","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396542,"byte_end":396557,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396558,"byte_end":396561,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An alias of [`IcoEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396562,"byte_end":396593,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396594,"byte_end":396597,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396598,"byte_end":396614,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396615,"byte_end":396618,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`IcoEncoder`]: struct.IcoEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396619,"byte_end":396661,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396662,"byte_end":396681,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `IcoEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396682,"byte_end":396730,"line_start":30,"line_end":30,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396878,"byte_end":396881,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoEncoder<W>>::new","value":"pub fn new(W) -> IcoEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396807,"byte_end":396866,"line_start":34,"line_end":34,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":397179,"byte_end":397185,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"encode","qualname":"<IcoEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396943,"byte_end":397012,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":397017,"byte_end":397091,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":397096,"byte_end":397167,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1773},{"krate":0,"index":1930},{"krate":0,"index":1941}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8180,"byte_end":8204,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"! Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399625,"byte_end":399665,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399666,"byte_end":399669,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399670,"byte_end":399765,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"! This module implements the Baseline JPEG standard.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399766,"byte_end":399820,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399821,"byte_end":399824,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399825,"byte_end":399844,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399845,"byte_end":399921,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/mod.rs","byte_start":399922,"byte_end":399925,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":400498,"byte_end":400509,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":400470,"byte_end":400486,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":400688,"byte_end":400691,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":400615,"byte_end":400676,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401919,"byte_end":401924,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"pub fn scale(&mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401305,"byte_end":401366,"line_start":39,"line_end":39,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401371,"byte_end":401374,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401379,"byte_end":401442,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401447,"byte_end":401510,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401515,"byte_end":401573,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401578,"byte_end":401632,"line_start":44,"line_end":44,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401637,"byte_end":401640,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401645,"byte_end":401707,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401712,"byte_end":401773,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401778,"byte_end":401803,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401808,"byte_end":401811,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401816,"byte_end":401877,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":401882,"byte_end":401907,"line_start":51,"line_end":51,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":402329,"byte_end":402339,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":402272,"byte_end":402317,"line_start":67,"line_end":67,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5009},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433928,"byte_end":433944,"line_start":275,"line_end":275,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433780,"byte_end":433844,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433849,"byte_end":433923,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5011},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433985,"byte_end":433991,"line_start":278,"line_end":278,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433951,"byte_end":433980,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5013},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434028,"byte_end":434039,"line_start":281,"line_end":281,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433998,"byte_end":434023,"line_start":280,"line_end":280,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":5008},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433757,"byte_end":433773,"line_start":272,"line_end":272,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"pub enum PixelDensityUnit {\n\n    /// Represents the absence of a unit, the values indicate only a\n    /// [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n    PixelAspectRatio,\n\n    /// Pixels per inch (2.54 cm)\n    Inches,\n\n    /// Pixels per centimeter\n    Centimeters,\n}","parent":null,"children":[{"krate":0,"index":5009},{"krate":0,"index":5011},{"krate":0,"index":5013}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":433636,"byte_end":433702,"line_start":270,"line_end":270,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5026},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434376,"byte_end":434388,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434044,"byte_end":434088,"line_start":284,"line_end":284,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434089,"byte_end":434092,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434093,"byte_end":434144,"line_start":286,"line_end":286,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434145,"byte_end":434148,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434149,"byte_end":434160,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use image::jpeg::*;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434161,"byte_end":434184,"line_start":289,"line_end":289,"column_start":1,"column_end":24}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434185,"byte_end":434223,"line_start":290,"line_end":290,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434224,"byte_end":434311,"line_start":291,"line_end":291,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434312,"byte_end":434319,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":5027},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434451,"byte_end":434458,"line_start":296,"line_end":296,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":5026},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434395,"byte_end":434442,"line_start":295,"line_end":295,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5028},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434530,"byte_end":434534,"line_start":298,"line_end":298,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":5026},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434476,"byte_end":434521,"line_start":297,"line_end":297,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434740,"byte_end":434743,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"pub fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434581,"byte_end":434628,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434633,"byte_end":434687,"line_start":303,"line_end":303,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434692,"byte_end":434728,"line_start":304,"line_end":304,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435194,"byte_end":435205,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435142,"byte_end":435182,"line_start":323,"line_end":323,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435718,"byte_end":435729,"line_start":347,"line_end":347,"column_start":10,"column_end":21},"name":"JPEGEncoder","qualname":"::codecs::jpeg::encoder::JPEGEncoder","value":"JpegEncoder","parent":null,"children":[],"decl_id":null,"docs":" JPEG Encoder","sig":null,"attributes":[{"value":"/ JPEG Encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435515,"byte_end":435531,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435532,"byte_end":435535,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ An alias of [`JpegEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435536,"byte_end":435568,"line_start":340,"line_end":340,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435569,"byte_end":435572,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435573,"byte_end":435589,"line_start":342,"line_end":342,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435590,"byte_end":435593,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ [`JpegEncoder`]: struct.JpegEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435594,"byte_end":435638,"line_start":344,"line_end":344,"column_start":1,"column_end":45}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435639,"byte_end":435658,"line_start":345,"line_end":345,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `JpegEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435659,"byte_end":435708,"line_start":346,"line_end":346,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435874,"byte_end":435877,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder>::new","value":"pub fn new(&mut W) -> JpegEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435804,"byte_end":435862,"line_start":350,"line_end":350,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":436170,"byte_end":436186,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder>::new_with_quality","value":"pub fn new_with_quality(&mut W, u8) -> JpegEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435965,"byte_end":436032,"line_start":355,"line_end":355,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":436037,"byte_end":436108,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":436113,"byte_end":436158,"line_start":357,"line_end":357,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438568,"byte_end":438585,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder>::set_pixel_density","value":"pub fn set_pixel_density(&mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438336,"byte_end":438400,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438405,"byte_end":438496,"line_start":428,"line_end":428,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438501,"byte_end":438556,"line_start":429,"line_end":429,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438917,"byte_end":438923,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438683,"byte_end":438746,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438751,"byte_end":438803,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438808,"byte_end":438839,"line_start":436,"line_end":436,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438844,"byte_end":438847,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":438852,"byte_end":438905,"line_start":438,"line_end":438,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":441124,"byte_end":441136,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder>::encode_image","value":"pub fn encode_image<I: GenericImageView>(&mut Self, &I) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":440596,"byte_end":440624,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":440629,"byte_end":440632,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":440637,"byte_end":440730,"line_start":484,"line_end":484,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":440735,"byte_end":440829,"line_start":485,"line_end":485,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":440834,"byte_end":440929,"line_start":486,"line_end":486,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":440934,"byte_end":441025,"line_start":487,"line_end":487,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":441030,"byte_end":441046,"line_start":488,"line_end":488,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":441051,"byte_end":441054,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":441059,"byte_end":441112,"line_start":490,"line_end":490,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":7384},{"krate":0,"index":1974},{"krate":0,"index":7386},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":7390},{"krate":0,"index":1977},{"krate":0,"index":7392},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2015},{"krate":0,"index":2019},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2039},{"krate":0,"index":2047},{"krate":0,"index":2053},{"krate":0,"index":2065},{"krate":0,"index":2070},{"krate":0,"index":5041},{"krate":0,"index":5065},{"krate":0,"index":5064},{"krate":0,"index":5062},{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5067},{"krate":0,"index":5091},{"krate":0,"index":5090},{"krate":0,"index":5088},{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":2072},{"krate":0,"index":2079},{"krate":0,"index":2087},{"krate":0,"index":2090},{"krate":0,"index":2092}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8227,"byte_end":8250,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"! Decoding and Encoding of PNG Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468703,"byte_end":468742,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468743,"byte_end":468746,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468747,"byte_end":468837,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468838,"byte_end":468841,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468842,"byte_end":468861,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"! * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468862,"byte_end":468919,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":468920,"byte_end":468923,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469676,"byte_end":469685,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469486,"byte_end":469500,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469501,"byte_end":469504,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469505,"byte_end":469564,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469565,"byte_end":469626,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469627,"byte_end":469664,"line_start":27,"line_end":27,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469960,"byte_end":469969,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"PNGReader","qualname":"::codecs::png::PNGReader","value":"PngReader<R>","parent":null,"children":[],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[{"value":"/ PNG Reader","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469767,"byte_end":469781,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469782,"byte_end":469785,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PngReader`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469786,"byte_end":469816,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469817,"byte_end":469820,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469821,"byte_end":469837,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469838,"byte_end":469841,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`PngReader`]: struct.PngReader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469842,"byte_end":469882,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469883,"byte_end":469902,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PngReader` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":469903,"byte_end":469950,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":472051,"byte_end":472061,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":472024,"byte_end":472039,"line_start":114,"line_end":114,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":472239,"byte_end":472242,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":472165,"byte_end":472227,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475995,"byte_end":475999,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"pub fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475348,"byte_end":475405,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475410,"byte_end":475413,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475418,"byte_end":475509,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475514,"byte_end":475604,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475609,"byte_end":475699,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475704,"byte_end":475758,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475763,"byte_end":475766,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475771,"byte_end":475864,"line_start":184,"line_end":184,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475869,"byte_end":475962,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":475967,"byte_end":475983,"line_start":186,"line_end":186,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476422,"byte_end":476429,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"pub fn is_apng(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476068,"byte_end":476115,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476120,"byte_end":476123,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476128,"byte_end":476218,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476223,"byte_end":476307,"line_start":194,"line_end":194,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476312,"byte_end":476315,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476320,"byte_end":476410,"line_start":196,"line_end":196,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478398,"byte_end":478409,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478112,"byte_end":478166,"line_start":251,"line_end":251,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478167,"byte_end":478170,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478171,"byte_end":478221,"line_start":253,"line_end":253,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478222,"byte_end":478225,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478226,"byte_end":478282,"line_start":255,"line_end":255,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478283,"byte_end":478325,"line_start":256,"line_end":256,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478326,"byte_end":478386,"line_start":257,"line_end":257,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485605,"byte_end":485615,"line_start":445,"line_end":445,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485578,"byte_end":485593,"line_start":444,"line_end":444,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485897,"byte_end":485907,"line_start":460,"line_end":460,"column_start":10,"column_end":20},"name":"PNGEncoder","qualname":"::codecs::png::PNGEncoder","value":"PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" PNG Encoder","sig":null,"attributes":[{"value":"/ PNG Encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485699,"byte_end":485714,"line_start":451,"line_end":451,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485715,"byte_end":485718,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PngEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485719,"byte_end":485750,"line_start":453,"line_end":453,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485751,"byte_end":485754,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485755,"byte_end":485771,"line_start":455,"line_end":455,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485772,"byte_end":485775,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ [`PngEncoder`]: struct.PngEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485776,"byte_end":485818,"line_start":457,"line_end":457,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485819,"byte_end":485838,"line_start":458,"line_end":458,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PngEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485839,"byte_end":485887,"line_start":459,"line_end":459,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5042},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486110,"byte_end":486117,"line_start":466,"line_end":466,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":5041},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486076,"byte_end":486105,"line_start":465,"line_end":465,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5044},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486157,"byte_end":486161,"line_start":468,"line_end":468,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":5041},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486123,"byte_end":486152,"line_start":467,"line_end":467,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5046},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486198,"byte_end":486202,"line_start":470,"line_end":470,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":5041},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486167,"byte_end":486193,"line_start":469,"line_end":469,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5048},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486243,"byte_end":486250,"line_start":472,"line_end":472,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":5041},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486208,"byte_end":486238,"line_start":471,"line_end":471,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5050},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486296,"byte_end":486299,"line_start":474,"line_end":474,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":5041},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486256,"byte_end":486291,"line_start":473,"line_end":473,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5052},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486325,"byte_end":486340,"line_start":477,"line_end":477,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::codecs::png::CompressionType::__NonExhaustive","value":"CompressionType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5041},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486054,"byte_end":486069,"line_start":464,"line_end":464,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"pub enum CompressionType {\n\n    /// Default compression level\n    Default,\n\n    /// Fast, minimal compression\n    Fast,\n\n    /// High compression level\n    Best,\n\n    /// Huffman coding compression\n    Huffman,\n\n    /// Run-length encoding compression\n    Rle,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5050},{"krate":0,"index":5052}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":485929,"byte_end":485999,"line_start":462,"line_end":462,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5068},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486775,"byte_end":486783,"line_start":488,"line_end":488,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth greyscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth greyscale or data with a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486670,"byte_end":486746,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486751,"byte_end":486770,"line_start":487,"line_end":487,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5070},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486850,"byte_end":486853,"line_start":490,"line_end":490,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486789,"byte_end":486845,"line_start":489,"line_end":489,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5072},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486903,"byte_end":486905,"line_start":492,"line_end":492,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486859,"byte_end":486898,"line_start":491,"line_end":491,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5074},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486982,"byte_end":486985,"line_start":494,"line_end":494,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486911,"byte_end":486977,"line_start":493,"line_end":493,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5076},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487072,"byte_end":487077,"line_start":496,"line_end":496,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486991,"byte_end":487067,"line_start":495,"line_end":495,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487103,"byte_end":487118,"line_start":499,"line_end":499,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::codecs::png::FilterType::__NonExhaustive","value":"FilterType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5067},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486653,"byte_end":486663,"line_start":485,"line_end":485,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"pub enum FilterType {\n\n    /// No processing done, best used for low bit depth greyscale or data with a\n    /// low color count\n    NoFilter,\n\n    /// Filters based on previous pixel in the same scanline\n    Sub,\n\n    /// Filters based on the scanline above\n    Up,\n\n    /// Filters based on the average of left and right neighbor pixels\n    Avg,\n\n    /// Algorithm that takes into account the left, upper left, and above pixels\n    Paeth,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":5068},{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5074},{"krate":0,"index":5076},{"krate":0,"index":5078}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486380,"byte_end":486452,"line_start":480,"line_end":480,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486453,"byte_end":486456,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Sub` though this default may change in the future, most notable if an","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486457,"byte_end":486553,"line_start":482,"line_end":482,"column_start":1,"column_end":97}},{"value":"/ adaptive encoding option is implemented.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":486554,"byte_end":486598,"line_start":483,"line_end":483,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487263,"byte_end":487266,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"pub fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487193,"byte_end":487251,"line_start":503,"line_end":503,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488448,"byte_end":488464,"line_start":526,"line_end":526,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487434,"byte_end":487529,"line_start":512,"line_end":512,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487534,"byte_end":487560,"line_start":513,"line_end":513,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487565,"byte_end":487568,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487573,"byte_end":487668,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487673,"byte_end":487766,"line_start":516,"line_end":516,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487771,"byte_end":487863,"line_start":517,"line_end":517,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487868,"byte_end":487959,"line_start":518,"line_end":518,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487964,"byte_end":488012,"line_start":519,"line_end":519,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488017,"byte_end":488020,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type. It is likely that the library used","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488025,"byte_end":488120,"line_start":521,"line_end":521,"column_start":5,"column_end":100}},{"value":"/ will at some point gain the ability to use adaptive filtering methods per pixel row (or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488125,"byte_end":488216,"line_start":522,"line_end":522,"column_start":5,"column_end":96}},{"value":"/ even interlaced row). We might make it the new default variant in which case choosing a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488221,"byte_end":488312,"line_start":523,"line_end":523,"column_start":5,"column_end":96}},{"value":"/ particular filter method likely produces larger images. Be sure to check the release notes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488317,"byte_end":488411,"line_start":524,"line_end":524,"column_start":5,"column_end":99}},{"value":"/ once in a while.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488416,"byte_end":488436,"line_start":525,"line_end":525,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488744,"byte_end":488750,"line_start":535,"line_end":535,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.\n","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":488642,"byte_end":488732,"line_start":534,"line_end":534,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::codecs::pnm","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2133},{"krate":0,"index":2299},{"krate":0,"index":2437}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8272,"byte_end":8295,"line_start":239,"line_end":239,"column_start":5,"column_end":28}},{"value":"! Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":494729,"byte_end":494790,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":494791,"byte_end":494794,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":494795,"byte_end":494891,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitely recognizes but rejects their `_ALPHA`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":494892,"byte_end":494988,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"! variants for now as alpha color types are unsupported.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/mod.rs","byte_start":494989,"byte_end":495047,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":512280,"byte_end":512290,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::codecs::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":512253,"byte_end":512268,"line_start":219,"line_end":219,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":512480,"byte_end":512483,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":512404,"byte_end":512468,"line_start":227,"line_end":227,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":514333,"byte_end":514343,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> (R, PnmHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":514258,"byte_end":514321,"line_start":270,"line_end":270,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":523825,"byte_end":523834,"line_start":533,"line_end":533,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::codecs::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":523768,"byte_end":523813,"line_start":532,"line_end":532,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":527426,"byte_end":527433,"line_start":630,"line_end":630,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"pub fn subtype(&Self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":527334,"byte_end":527414,"line_start":629,"line_end":629,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550193,"byte_end":550195,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::codecs::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":5224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5229},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550211,"byte_end":550214,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::codecs::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":5224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5224},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550171,"byte_end":550182,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::codecs::pnm::encoder::FlatSamples","value":"pub enum FlatSamples<'a> { U8(&'a [u8]), U16(&'a [u16]), }","parent":null,"children":[{"krate":0,"index":5226},{"krate":0,"index":5229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550295,"byte_end":550305,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PnmEncoder","qualname":"::codecs::pnm::encoder::PnmEncoder","value":"PnmEncoder {  }","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550230,"byte_end":550283,"line_start":31,"line_end":31,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550562,"byte_end":550572,"line_start":46,"line_end":46,"column_start":10,"column_end":20},"name":"PNMEncoder","qualname":"::codecs::pnm::encoder::PNMEncoder","value":"PnmEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" PNM Encoder","sig":null,"attributes":[{"value":"/ PNM Encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550364,"byte_end":550379,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550380,"byte_end":550383,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PnmEncoder`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550384,"byte_end":550415,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550416,"byte_end":550419,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550420,"byte_end":550436,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550437,"byte_end":550440,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`PnmEncoder`]: struct.PnmEncoder.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550441,"byte_end":550483,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550484,"byte_end":550503,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PnmEncoder` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":550504,"byte_end":550552,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551925,"byte_end":551928,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmEncoder<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PNMEncoder from the `writer`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551623,"byte_end":551667,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551672,"byte_end":551675,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551680,"byte_end":551770,"line_start":95,"line_end":95,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551775,"byte_end":551867,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551872,"byte_end":551913,"line_start":97,"line_end":97,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552478,"byte_end":552490,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PnmEncoder<W>>::with_subtype","value":"pub fn with_subtype(Self, PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552057,"byte_end":552097,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552102,"byte_end":552105,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552110,"byte_end":552204,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552209,"byte_end":552303,"line_start":108,"line_end":108,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552308,"byte_end":552358,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552363,"byte_end":552366,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552371,"byte_end":552466,"line_start":111,"line_end":111,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553196,"byte_end":553207,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PnmEncoder<W>>::with_header","value":"pub fn with_header(Self, PnmHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552657,"byte_end":552696,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552701,"byte_end":552704,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552709,"byte_end":552804,"line_start":121,"line_end":121,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552809,"byte_end":552898,"line_start":122,"line_end":122,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552903,"byte_end":552987,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":552992,"byte_end":552995,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553000,"byte_end":553075,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553080,"byte_end":553083,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553088,"byte_end":553184,"line_start":127,"line_end":127,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553778,"byte_end":553797,"line_start":142,"line_end":142,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PnmEncoder<W>>::with_dynamic_header","value":"pub fn with_dynamic_header(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553370,"byte_end":553419,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553424,"byte_end":553427,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553432,"byte_end":553525,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553530,"byte_end":553622,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553627,"byte_end":553665,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553670,"byte_end":553673,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553678,"byte_end":553766,"line_start":141,"line_end":141,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":554173,"byte_end":554179,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"encode","qualname":"<PnmEncoder<W>>::encode","value":"pub fn encode<'s, S>(&mut Self, S, u32, u32, ColorType) -> ImageResult<()>\nwhere S: Into<FlatSamples>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553934,"byte_end":553992,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":553997,"byte_end":554000,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":554005,"byte_end":554091,"line_start":151,"line_end":151,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":554096,"byte_end":554161,"line_start":152,"line_end":152,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5238},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573208,"byte_end":573214,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::codecs::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":5237},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573149,"byte_end":573203,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5240},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573298,"byte_end":573303,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::codecs::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":5237},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573221,"byte_end":573293,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573128,"byte_end":573142,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::codecs::pnm::header::SampleEncoding","value":"pub enum SampleEncoding {\n\n    /// Samples are unsigned binary integers in big endian\n    Binary,\n\n    /// Samples are encoded as decimal ascii strings separated by whitespace\n    Ascii,\n}","parent":null,"children":[{"krate":0,"index":5238},{"krate":0,"index":5240}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573021,"byte_end":573073,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5254},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573618,"byte_end":573624,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::codecs::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":5253},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573586,"byte_end":573613,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5257},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573679,"byte_end":573686,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::codecs::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":5253},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573647,"byte_end":573674,"line_start":25,"line_end":25,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5260},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573741,"byte_end":573747,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::codecs::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":5253},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573709,"byte_end":573736,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5263},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573794,"byte_end":573806,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::codecs::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":5253},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573770,"byte_end":573789,"line_start":31,"line_end":31,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":5253},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573569,"byte_end":573579,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::codecs::pnm::header::PNMSubtype","value":"pub enum PNMSubtype {\n\n    /// Magic numbers P1 and P4\n    Bitmap(SampleEncoding),\n\n    /// Magic numbers P2 and P5\n    Graymap(SampleEncoding),\n\n    /// Magic numbers P3 and P6\n    Pixmap(SampleEncoding),\n\n    /// Magic number P7\n    ArbitraryMap,\n}","parent":null,"children":[{"krate":0,"index":5254},{"krate":0,"index":5257},{"krate":0,"index":5260},{"krate":0,"index":5263}],"decl_id":null,"docs":" Denotes the category of the magic number","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573308,"byte_end":573352,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573353,"byte_end":573356,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: The name of this enum will be changed to [`PnmSubtype`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573357,"byte_end":573429,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573430,"byte_end":573433,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ TODO: rename to [`PnmSubtype`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573434,"byte_end":573469,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573470,"byte_end":573473,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`PnmSubtype`]: type.PnmSubtype.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573474,"byte_end":573514,"line_start":19,"line_end":19,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573990,"byte_end":574000,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"name":"PnmSubtype","qualname":"::codecs::pnm::header::PnmSubtype","value":"PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" PNM Subtype","sig":null,"attributes":[{"value":"/ PNM Subtype","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573811,"byte_end":573826,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573827,"byte_end":573830,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PNMSubtype`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573831,"byte_end":573862,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573863,"byte_end":573866,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ TODO: remove when [`DXTVariant`] is renamed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573867,"byte_end":573915,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573916,"byte_end":573919,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`PNMSubtype`]: enum.PNMSubtype.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573920,"byte_end":573960,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":573961,"byte_end":573980,"line_start":42,"line_end":42,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574403,"byte_end":574412,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"PnmHeader","qualname":"::codecs::pnm::header::PnmHeader","value":"PnmHeader {  }","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574016,"byte_end":574062,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574063,"byte_end":574066,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574067,"byte_end":574165,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574166,"byte_end":574262,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574263,"byte_end":574360,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574361,"byte_end":574391,"line_start":50,"line_end":50,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574690,"byte_end":574699,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"PNMHeader","qualname":"::codecs::pnm::header::PNMHeader","value":"PnmHeader","parent":null,"children":[],"decl_id":null,"docs":" PNM Header","sig":null,"attributes":[{"value":"/ PNM Header","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574497,"byte_end":574511,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574512,"byte_end":574515,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ An alias of [`PnmHeader`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574516,"byte_end":574546,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574547,"byte_end":574550,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ TODO: remove","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574551,"byte_end":574567,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574568,"byte_end":574571,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`PnmHeader`]: struct.PnmHeader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574572,"byte_end":574612,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574613,"byte_end":574632,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"deprecated(note = \"Use `PnmHeader` instead\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574633,"byte_end":574680,"line_start":64,"line_end":64,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5277},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574958,"byte_end":574970,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::codecs::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574860,"byte_end":574916,"line_start":74,"line_end":74,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5278},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575018,"byte_end":575026,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::BitmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":574977,"byte_end":575009,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5279},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575086,"byte_end":575092,"line_start":81,"line_end":81,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575049,"byte_end":575077,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5280},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575140,"byte_end":575145,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575104,"byte_end":575131,"line_start":83,"line_end":83,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5286},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575254,"byte_end":575267,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::codecs::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575155,"byte_end":575212,"line_start":87,"line_end":87,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5287},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575315,"byte_end":575323,"line_start":91,"line_end":91,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::GraymapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":5286},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575274,"byte_end":575306,"line_start":90,"line_end":90,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5288},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575383,"byte_end":575389,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":5286},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575346,"byte_end":575374,"line_start":93,"line_end":93,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5289},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575437,"byte_end":575442,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":5286},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575401,"byte_end":575428,"line_start":96,"line_end":96,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5290},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575504,"byte_end":575512,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::codecs::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":5286},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575454,"byte_end":575495,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5296},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575622,"byte_end":575634,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::codecs::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5300}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575522,"byte_end":575580,"line_start":103,"line_end":103,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5297},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575682,"byte_end":575690,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"encoding","qualname":"::codecs::pnm::header::PixmapHeader::encoding","value":"codecs::pnm::header::SampleEncoding","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575641,"byte_end":575673,"line_start":106,"line_end":106,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575750,"byte_end":575756,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575713,"byte_end":575741,"line_start":109,"line_end":109,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5299},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575804,"byte_end":575809,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575768,"byte_end":575795,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5300},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575871,"byte_end":575877,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":5296},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575821,"byte_end":575862,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5306},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575985,"byte_end":576000,"line_start":121,"line_end":121,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::codecs::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":575887,"byte_end":575949,"line_start":119,"line_end":119,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576044,"byte_end":576050,"line_start":123,"line_end":123,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576007,"byte_end":576035,"line_start":122,"line_end":122,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5308},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576098,"byte_end":576103,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576062,"byte_end":576089,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5309},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576152,"byte_end":576157,"line_start":129,"line_end":129,"column_start":9,"column_end":14},"name":"depth","qualname":"::codecs::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576115,"byte_end":576143,"line_start":128,"line_end":128,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5310},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576219,"byte_end":576225,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"name":"maxval","qualname":"::codecs::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576169,"byte_end":576210,"line_start":131,"line_end":131,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5311},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576286,"byte_end":576294,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::codecs::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<codecs::pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576237,"byte_end":576277,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5317},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576497,"byte_end":576510,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576448,"byte_end":576492,"line_start":141,"line_end":141,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5319},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576593,"byte_end":576611,"line_start":145,"line_end":145,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576517,"byte_end":576588,"line_start":144,"line_end":144,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576663,"byte_end":576672,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::codecs::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576618,"byte_end":576658,"line_start":147,"line_end":147,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5323},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576730,"byte_end":576744,"line_start":151,"line_end":151,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576679,"byte_end":576725,"line_start":150,"line_end":150,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5325},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576792,"byte_end":576795,"line_start":154,"line_end":154,"column_start":5,"column_end":8},"name":"RGB","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576751,"byte_end":576787,"line_start":153,"line_end":153,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5327},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576849,"byte_end":576857,"line_start":157,"line_end":157,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::codecs::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576802,"byte_end":576844,"line_start":156,"line_end":156,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5329},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576914,"byte_end":576920,"line_start":160,"line_end":160,"column_start":5,"column_end":11},"name":"Custom","qualname":"::codecs::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":5316},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576864,"byte_end":576909,"line_start":159,"line_end":159,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576424,"byte_end":576441,"line_start":140,"line_end":140,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::codecs::pnm::header::ArbitraryTuplType","value":"pub enum ArbitraryTuplType {\n\n    /// Pixels are either black (0) or white (1)\n    BlackAndWhite,\n\n    /// Pixels are either black (0) or white (1) and a second alpha channel\n    BlackAndWhiteAlpha,\n\n    /// Pixels represent the amount of white\n    Grayscale,\n\n    /// Grayscale with an additional alpha channel\n    GrayscaleAlpha,\n\n    /// Three channels: Red, Green, Blue\n    RGB,\n\n    /// Four channels: Red, Green, Blue, Alpha\n    RGBAlpha,\n\n    /// An image format which is not standardized\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5325},{"krate":0,"index":5327},{"krate":0,"index":5329}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576326,"byte_end":576390,"line_start":138,"line_end":138,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":577570,"byte_end":577584,"line_start":179,"line_end":179,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"pub fn magic_constant(Self) -> &'static [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":577484,"byte_end":577558,"line_start":178,"line_end":178,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":578163,"byte_end":578178,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"pub fn sample_encoding(Self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":578091,"byte_end":578151,"line_start":191,"line_end":191,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":578541,"byte_end":578548,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmHeader>::subtype","value":"pub fn subtype(&Self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":578463,"byte_end":578529,"line_start":203,"line_end":203,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":579063,"byte_end":579068,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"width","qualname":"<PnmHeader>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":579005,"byte_end":579051,"line_start":213,"line_end":213,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":579486,"byte_end":579492,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"height","qualname":"<PnmHeader>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":579427,"byte_end":579474,"line_start":223,"line_end":223,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":579950,"byte_end":579964,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PnmHeader>::maximal_sample","value":"pub fn maximal_sample(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":579859,"byte_end":579938,"line_start":233,"line_end":233,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":580382,"byte_end":580391,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PnmHeader>::as_bitmap","value":"pub fn as_bitmap(&Self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":580322,"byte_end":580370,"line_start":243,"line_end":243,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":580622,"byte_end":580632,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PnmHeader>::as_graymap","value":"pub fn as_graymap(&Self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":580561,"byte_end":580610,"line_start":251,"line_end":251,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":580866,"byte_end":580875,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PnmHeader>::as_pixmap","value":"pub fn as_pixmap(&Self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":580806,"byte_end":580854,"line_start":259,"line_end":259,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":581108,"byte_end":581120,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PnmHeader>::as_arbitrary","value":"pub fn as_arbitrary(&Self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":581045,"byte_end":581096,"line_start":267,"line_end":267,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":581360,"byte_end":581365,"line_start":276,"line_end":276,"column_start":12,"column_end":17},"name":"write","qualname":"<PnmHeader>::write","value":"pub fn write(&Self, &mut io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":581302,"byte_end":581348,"line_start":275,"line_end":275,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::codecs::tga","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","parent":null,"children":[{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2577},{"krate":0,"index":2608}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8317,"byte_end":8340,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"! Decoding of TGA Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":584531,"byte_end":584557,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":584558,"byte_end":584561,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":584562,"byte_end":584581,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"! <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/mod.rs","byte_start":584582,"byte_end":584634,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":586169,"byte_end":586179,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::codecs::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":586118,"byte_end":586157,"line_start":46,"line_end":46,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":586657,"byte_end":586660,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":586588,"byte_end":586645,"line_start":68,"line_end":68,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":601195,"byte_end":601204,"line_start":468,"line_end":468,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::codecs::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2571},{"krate":0,"index":2572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602543,"byte_end":602553,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"TgaEncoder","qualname":"::codecs::tga::encoder::TgaEncoder","value":"TgaEncoder {  }","parent":null,"children":[{"krate":0,"index":2598}],"decl_id":null,"docs":" TGA encoder.\n","sig":null,"attributes":[{"value":"/ TGA encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602515,"byte_end":602531,"line_start":34,"line_end":34,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602690,"byte_end":602693,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaEncoder<W>>::new","value":"pub fn new(W) -> TgaEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602619,"byte_end":602678,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":603023,"byte_end":603029,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"encode","qualname":"<TgaEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```buf``` that has dimensions ```width```\n and ```height``` and ```ColorType``` ```color_type```.","sig":null,"attributes":[{"value":"/ Encodes the image ```buf``` that has dimensions ```width```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602763,"byte_end":602826,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ and ```height``` and ```ColorType``` ```color_type```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602831,"byte_end":602889,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602894,"byte_end":602897,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The dimensions of the image must be between 0 and 65535 (inclusive) or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602902,"byte_end":602976,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ an error will be returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602981,"byte_end":603011,"line_start":49,"line_end":49,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::codecs::tiff","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":7700},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2707},{"krate":0,"index":2711},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2728}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8362,"byte_end":8386,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"! Decoding and Encoding of TIFF Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614327,"byte_end":614367,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614368,"byte_end":614371,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614372,"byte_end":614449,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! lossless and lossy compression.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614450,"byte_end":614485,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614486,"byte_end":614489,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614490,"byte_end":614509,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":614510,"byte_end":614601,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":615103,"byte_end":615114,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::codecs::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[{"value":"/ Decoder for TIFF images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":615063,"byte_end":615091,"line_start":24,"line_end":24,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":615336,"byte_end":615339,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"pub fn new(R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[{"value":"/ Create a new TiffDecoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":615295,"byte_end":615324,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":619762,"byte_end":619772,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::codecs::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":619705,"byte_end":619750,"line_start":146,"line_end":146,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":622340,"byte_end":622351,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::codecs::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2721}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[{"value":"/ Encoder for tiff images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":622301,"byte_end":622328,"line_start":220,"line_end":220,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":623077,"byte_end":623080,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"pub fn new(W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":623011,"byte_end":623065,"line_start":240,"line_end":240,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":623312,"byte_end":623318,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":623144,"byte_end":623235,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":623240,"byte_end":623243,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ 16-bit types assume the buffer is native endian.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":623248,"byte_end":623300,"line_start":247,"line_end":247,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::codecs::webp","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/mod.rs","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2804},{"krate":0,"index":2810}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8409,"byte_end":8433,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"! Decoding of WebP Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/mod.rs","byte_start":624907,"byte_end":624934,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626823,"byte_end":626834,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::codecs::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[{"value":"/ WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626686,"byte_end":626780,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/ images will be grayscale).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626781,"byte_end":626811,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":627046,"byte_end":627049,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebPDecoder from the Reader ```r```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626928,"byte_end":626981,"line_start":60,"line_end":60,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626986,"byte_end":627034,"line_start":61,"line_end":61,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":629726,"byte_end":629736,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::codecs::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":629669,"byte_end":629714,"line_start":148,"line_end":148,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::codecs::webp::vp8","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":7784},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":5399},{"krate":0,"index":5424},{"krate":0,"index":5423},{"krate":0,"index":5421},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5426},{"krate":0,"index":5448},{"krate":0,"index":5447},{"krate":0,"index":5445},{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5450},{"krate":0,"index":5490},{"krate":0,"index":5489},{"krate":0,"index":5487},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":5492},{"krate":0,"index":5494},{"krate":0,"index":2891},{"krate":0,"index":5496},{"krate":0,"index":5519},{"krate":0,"index":5516},{"krate":0,"index":5515},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2904},{"krate":0,"index":5521},{"krate":0,"index":5534},{"krate":0,"index":5530},{"krate":0,"index":5529},{"krate":0,"index":5536},{"krate":0,"index":5551},{"krate":0,"index":5549},{"krate":0,"index":5547},{"krate":0,"index":5553},{"krate":0,"index":5566},{"krate":0,"index":5565},{"krate":0,"index":5563},{"krate":0,"index":2912},{"krate":0,"index":2935},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2968},{"krate":0,"index":2970},{"krate":0,"index":2972},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"! An implementation of the VP8 Video Codec","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633331,"byte_end":633375,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633376,"byte_end":633379,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a partial implementation of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633380,"byte_end":633436,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"! VP8 video format as defined in RFC-6386.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633437,"byte_end":633481,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633482,"byte_end":633485,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633486,"byte_end":633536,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"! VP8 is the underpinning of the WebP image format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633537,"byte_end":633589,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633590,"byte_end":633593,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633594,"byte_end":633613,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"! * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633614,"byte_end":633707,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"! * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633708,"byte_end":633830,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"! of the VP8 format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633831,"byte_end":633852,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":633853,"byte_end":633856,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":5536},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664056,"byte_end":664061,"line_start":839,"line_end":839,"column_start":12,"column_end":17},"name":"Frame","qualname":"::codecs::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":663959,"byte_end":664011,"line_start":837,"line_end":837,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5537},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664108,"byte_end":664113,"line_start":841,"line_end":841,"column_start":9,"column_end":14},"name":"width","qualname":"::codecs::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664068,"byte_end":664099,"line_start":840,"line_end":840,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5538},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664166,"byte_end":664172,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"height","qualname":"::codecs::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664125,"byte_end":664157,"line_start":843,"line_end":843,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5539},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664224,"byte_end":664228,"line_start":847,"line_end":847,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::codecs::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664184,"byte_end":664215,"line_start":846,"line_end":846,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5540},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664299,"byte_end":664307,"line_start":850,"line_end":850,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::codecs::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664244,"byte_end":664290,"line_start":849,"line_end":849,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5542},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664403,"byte_end":664414,"line_start":855,"line_end":855,"column_start":9,"column_end":20},"name":"for_display","qualname":"::codecs::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664338,"byte_end":664394,"line_start":854,"line_end":854,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5543},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664545,"byte_end":664555,"line_start":860,"line_end":860,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::codecs::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":5536},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664446,"byte_end":664503,"line_start":858,"line_end":858,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664508,"byte_end":664536,"line_start":859,"line_end":859,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2912},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664931,"byte_end":664941,"line_start":888,"line_end":888,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::codecs::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664873,"byte_end":664888,"line_start":885,"line_end":885,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664889,"byte_end":664892,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":664893,"byte_end":664919,"line_start":887,"line_end":887,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":665605,"byte_end":665608,"line_start":923,"line_end":923,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"pub fn new(R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":665501,"byte_end":665526,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":665531,"byte_end":665593,"line_start":922,"line_end":922,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":685703,"byte_end":685715,"line_start":1541,"line_end":1541,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"pub fn decode_frame(&mut Self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":685632,"byte_end":685691,"line_start":1540,"line_end":1540,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":3000},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8701,"byte_end":8704,"line_start":257,"line_end":257,"column_start":9,"column_end":12},"name":"bmp","qualname":"::bmp","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004}],"decl_id":null,"docs":" Decoding and Encoding of BMP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8627,"byte_end":8650,"line_start":255,"line_end":255,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::bmp instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8651,"byte_end":8692,"line_start":256,"line_end":256,"column_start":1,"column_end":42}},{"value":"! Decoding and Encoding of BMP Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8711,"byte_end":8750,"line_start":258,"line_end":258,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8922,"byte_end":8925,"line_start":264,"line_end":264,"column_start":9,"column_end":12},"name":"dds","qualname":"::dds","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3006}],"decl_id":null,"docs":" Decoding of DDS images\n","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8848,"byte_end":8871,"line_start":262,"line_end":262,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::dds instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8872,"byte_end":8913,"line_start":263,"line_end":263,"column_start":1,"column_end":42}},{"value":"! Decoding of DDS images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8932,"byte_end":8958,"line_start":265,"line_end":265,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9076,"byte_end":9079,"line_start":270,"line_end":270,"column_start":9,"column_end":12},"name":"dxt","qualname":"::dxt","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015}],"decl_id":null,"docs":" Decoding of DXT (S3TC) compression\n","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9005,"byte_end":9028,"line_start":268,"line_end":268,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs:: instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9029,"byte_end":9067,"line_start":269,"line_end":269,"column_start":1,"column_end":39}},{"value":"! Decoding of DXT (S3TC) compression","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9086,"byte_end":9124,"line_start":271,"line_end":271,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9367,"byte_end":9375,"line_start":279,"line_end":279,"column_start":9,"column_end":17},"name":"farbfeld","qualname":"::farbfeld","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"decl_id":null,"docs":" Decoding of farbfeld images\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9283,"byte_end":9311,"line_start":277,"line_end":277,"column_start":1,"column_end":29}},{"value":"deprecated = \"Use codecs::farbfeld instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9312,"byte_end":9358,"line_start":278,"line_end":278,"column_start":1,"column_end":47}},{"value":"! Decoding of farbfeld images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9382,"byte_end":9413,"line_start":280,"line_end":280,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9579,"byte_end":9582,"line_start":285,"line_end":285,"column_start":9,"column_end":12},"name":"gif","qualname":"::gif","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027}],"decl_id":null,"docs":" Decoding of GIF Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9505,"byte_end":9528,"line_start":283,"line_end":283,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::gif instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9529,"byte_end":9570,"line_start":284,"line_end":284,"column_start":1,"column_end":42}},{"value":"! Decoding of GIF Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9589,"byte_end":9615,"line_start":286,"line_end":286,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3028},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9803,"byte_end":9806,"line_start":292,"line_end":292,"column_start":9,"column_end":12},"name":"hdr","qualname":"::hdr","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045}],"decl_id":null,"docs":" Decoding of Radiance HDR Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9729,"byte_end":9752,"line_start":290,"line_end":290,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::hdr instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9753,"byte_end":9794,"line_start":291,"line_end":291,"column_start":1,"column_end":42}},{"value":"! Decoding of Radiance HDR Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":9813,"byte_end":9848,"line_start":293,"line_end":293,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10229,"byte_end":10232,"line_start":303,"line_end":303,"column_start":9,"column_end":12},"name":"ico","qualname":"::ico","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050}],"decl_id":null,"docs":" Decoding and Encoding of ICO files\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10155,"byte_end":10178,"line_start":301,"line_end":301,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::ico instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10179,"byte_end":10220,"line_start":302,"line_end":302,"column_start":1,"column_end":42}},{"value":"! Decoding and Encoding of ICO files","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10239,"byte_end":10277,"line_start":304,"line_end":304,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10451,"byte_end":10455,"line_start":310,"line_end":310,"column_start":9,"column_end":13},"name":"jpeg","qualname":"::jpeg","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10375,"byte_end":10399,"line_start":308,"line_end":308,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::jpeg instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10400,"byte_end":10442,"line_start":309,"line_end":309,"column_start":1,"column_end":43}},{"value":"! Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10462,"byte_end":10502,"line_start":311,"line_end":311,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10725,"byte_end":10728,"line_start":319,"line_end":319,"column_start":9,"column_end":12},"name":"png","qualname":"::png","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10651,"byte_end":10674,"line_start":317,"line_end":317,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::png instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10675,"byte_end":10716,"line_start":318,"line_end":318,"column_start":1,"column_end":42}},{"value":"! Decoding and Encoding of PNG Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10735,"byte_end":10774,"line_start":320,"line_end":320,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11033,"byte_end":11036,"line_start":329,"line_end":329,"column_start":9,"column_end":12},"name":"pnm","qualname":"::pnm","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082}],"decl_id":null,"docs":" Decoding and Encoding of netpbm image formats (pbm, pgm, ppm and pam)\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10959,"byte_end":10982,"line_start":327,"line_end":327,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::pnm instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":10983,"byte_end":11024,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"! Decoding and Encoding of netpbm image formats (pbm, pgm, ppm and pam)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11043,"byte_end":11116,"line_start":330,"line_end":330,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11452,"byte_end":11455,"line_start":339,"line_end":339,"column_start":9,"column_end":12},"name":"tga","qualname":"::tga","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086}],"decl_id":null,"docs":" Decoding and Encoding of TGA Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11378,"byte_end":11401,"line_start":337,"line_end":337,"column_start":1,"column_end":24}},{"value":"deprecated = \"Use codecs::tga instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11402,"byte_end":11443,"line_start":338,"line_end":338,"column_start":1,"column_end":42}},{"value":"! Decoding and Encoding of TGA Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11462,"byte_end":11501,"line_start":340,"line_end":340,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11663,"byte_end":11667,"line_start":346,"line_end":346,"column_start":9,"column_end":13},"name":"tiff","qualname":"::tiff","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11587,"byte_end":11611,"line_start":344,"line_end":344,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::tiff instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11612,"byte_end":11654,"line_start":345,"line_end":345,"column_start":1,"column_end":43}},{"value":"! Decoding and Encoding of TIFF Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11674,"byte_end":11714,"line_start":347,"line_end":347,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11891,"byte_end":11895,"line_start":353,"line_end":353,"column_start":9,"column_end":13},"name":"webp","qualname":"::webp","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","parent":null,"children":[{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11815,"byte_end":11839,"line_start":351,"line_end":351,"column_start":1,"column_end":25}},{"value":"deprecated = \"Use codecs::webp instead\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11840,"byte_end":11882,"line_start":352,"line_end":352,"column_start":1,"column_end":43}},{"value":"! Decoding of WebP Images","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":11902,"byte_end":11929,"line_start":354,"line_end":354,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3102},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":710708,"byte_end":710714,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":3104}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":710623,"byte_end":710696,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":710894,"byte_end":710897,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Box<Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":710814,"byte_end":710882,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711289,"byte_end":711303,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"pub fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711008,"byte_end":711102,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711107,"byte_end":711119,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711124,"byte_end":711186,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711191,"byte_end":711194,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711199,"byte_end":711277,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":5568},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711592,"byte_end":711597,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711535,"byte_end":711563,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":5575},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711879,"byte_end":711884,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":5576}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711756,"byte_end":711810,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711986,"byte_end":711989,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711930,"byte_end":711974,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712217,"byte_end":712227,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712180,"byte_end":712205,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712439,"byte_end":712444,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712404,"byte_end":712427,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712533,"byte_end":712539,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712493,"byte_end":712521,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712641,"byte_end":712651,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"buffer_mut","qualname":"<Frame>::buffer_mut","value":"pub fn buffer_mut(&mut Self) -> &mut RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable image buffer\n","sig":null,"attributes":[{"value":"/ Returns a mutable image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712595,"byte_end":712629,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712759,"byte_end":712770,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712719,"byte_end":712747,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712859,"byte_end":712863,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712823,"byte_end":712847,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712945,"byte_end":712948,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712909,"byte_end":712933,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713213,"byte_end":713232,"line_start":116,"line_end":116,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"pub fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713008,"byte_end":713056,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713061,"byte_end":713064,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713069,"byte_end":713083,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713088,"byte_end":713091,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713096,"byte_end":713103,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713108,"byte_end":713129,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713134,"byte_end":713189,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713194,"byte_end":713201,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713875,"byte_end":713899,"line_start":134,"line_end":134,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"pub fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713352,"byte_end":713434,"line_start":120,"line_end":120,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713439,"byte_end":713442,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713447,"byte_end":713541,"line_start":122,"line_end":122,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713546,"byte_end":713624,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713629,"byte_end":713632,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713637,"byte_end":713651,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713656,"byte_end":713659,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713664,"byte_end":713671,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713676,"byte_end":713704,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713709,"byte_end":713730,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713735,"byte_end":713738,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713743,"byte_end":713788,"line_start":131,"line_end":131,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713793,"byte_end":713851,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":713856,"byte_end":713863,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":715075,"byte_end":715089,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"pub fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":714849,"byte_end":714912,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":714917,"byte_end":714920,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":714925,"byte_end":715020,"line_start":161,"line_end":161,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":715025,"byte_end":715063,"line_start":162,"line_end":162,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722369,"byte_end":722375,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3178}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722329,"byte_end":722357,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723536,"byte_end":723545,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":3203}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723488,"byte_end":723524,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3222},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724801,"byte_end":724805,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":3225}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724595,"byte_end":724628,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724629,"byte_end":724632,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724633,"byte_end":724719,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724720,"byte_end":724723,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724724,"byte_end":724789,"line_start":132,"line_end":132,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727355,"byte_end":727362,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":3252}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727129,"byte_end":727170,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727171,"byte_end":727174,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727175,"byte_end":727265,"line_start":220,"line_end":220,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727266,"byte_end":727269,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727270,"byte_end":727343,"line_start":222,"line_end":222,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729678,"byte_end":729693,"line_start":303,"line_end":303,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729629,"byte_end":729666,"line_start":302,"line_end":302,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731000,"byte_end":731013,"line_start":365,"line_end":365,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730953,"byte_end":730988,"line_start":364,"line_end":364,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":732388,"byte_end":732406,"line_start":431,"line_end":431,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":732339,"byte_end":732376,"line_start":430,"line_end":430,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733550,"byte_end":733566,"line_start":484,"line_end":484,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733503,"byte_end":733538,"line_start":483,"line_end":483,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5595},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737116,"byte_end":737127,"line_start":609,"line_end":609,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734738,"byte_end":734762,"line_start":540,"line_end":540,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734763,"byte_end":734766,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734767,"byte_end":734861,"line_start":542,"line_end":542,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734862,"byte_end":734951,"line_start":543,"line_end":543,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734952,"byte_end":735047,"line_start":544,"line_end":544,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735048,"byte_end":735143,"line_start":545,"line_end":545,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735144,"byte_end":735182,"line_start":546,"line_end":546,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735183,"byte_end":735186,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735187,"byte_end":735286,"line_start":548,"line_end":548,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735287,"byte_end":735322,"line_start":549,"line_end":549,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735323,"byte_end":735326,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735327,"byte_end":735372,"line_start":551,"line_end":551,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735373,"byte_end":735426,"line_start":552,"line_end":552,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735427,"byte_end":735463,"line_start":553,"line_end":553,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735464,"byte_end":735502,"line_start":554,"line_end":554,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735503,"byte_end":735506,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735507,"byte_end":735583,"line_start":556,"line_end":556,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735584,"byte_end":735587,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735588,"byte_end":735675,"line_start":558,"line_end":558,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735676,"byte_end":735774,"line_start":559,"line_end":559,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735775,"byte_end":735850,"line_start":560,"line_end":560,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735851,"byte_end":735854,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735855,"byte_end":735899,"line_start":562,"line_end":562,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735900,"byte_end":735948,"line_start":563,"line_end":563,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":735949,"byte_end":736005,"line_start":564,"line_end":564,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736006,"byte_end":736009,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736010,"byte_end":736025,"line_start":566,"line_end":566,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736026,"byte_end":736029,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736030,"byte_end":736081,"line_start":568,"line_end":568,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736082,"byte_end":736085,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736086,"byte_end":736093,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736094,"byte_end":736125,"line_start":571,"line_end":571,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736126,"byte_end":736129,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736130,"byte_end":736170,"line_start":573,"line_end":573,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736171,"byte_end":736174,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736175,"byte_end":736197,"line_start":575,"line_end":575,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736198,"byte_end":736222,"line_start":576,"line_end":576,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736223,"byte_end":736273,"line_start":577,"line_end":577,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736274,"byte_end":736324,"line_start":578,"line_end":578,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736325,"byte_end":736334,"line_start":579,"line_end":579,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736335,"byte_end":736340,"line_start":580,"line_end":580,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736341,"byte_end":736348,"line_start":581,"line_end":581,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736349,"byte_end":736352,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736353,"byte_end":736412,"line_start":583,"line_end":583,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736413,"byte_end":736416,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736417,"byte_end":736430,"line_start":585,"line_end":585,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736431,"byte_end":736498,"line_start":586,"line_end":586,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736499,"byte_end":736502,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736503,"byte_end":736565,"line_start":588,"line_end":588,"column_start":1,"column_end":63}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736566,"byte_end":736623,"line_start":589,"line_end":589,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736624,"byte_end":736653,"line_start":590,"line_end":590,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736654,"byte_end":736687,"line_start":591,"line_end":591,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736688,"byte_end":736704,"line_start":592,"line_end":592,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736705,"byte_end":736744,"line_start":593,"line_end":593,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736745,"byte_end":736754,"line_start":594,"line_end":594,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736755,"byte_end":736762,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736763,"byte_end":736766,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736767,"byte_end":736825,"line_start":597,"line_end":597,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736826,"byte_end":736833,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736834,"byte_end":736837,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736838,"byte_end":736878,"line_start":600,"line_end":600,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736879,"byte_end":736882,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736883,"byte_end":736896,"line_start":602,"line_end":602,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736897,"byte_end":736933,"line_start":603,"line_end":603,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736934,"byte_end":736937,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":736938,"byte_end":736999,"line_start":605,"line_end":605,"column_start":1,"column_end":62}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737000,"byte_end":737058,"line_start":606,"line_end":606,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737059,"byte_end":737066,"line_start":607,"line_end":607,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737885,"byte_end":737893,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737600,"byte_end":737647,"line_start":626,"line_end":626,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737652,"byte_end":737688,"line_start":627,"line_end":627,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737693,"byte_end":737696,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737701,"byte_end":737791,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737796,"byte_end":737873,"line_start":630,"line_end":630,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738299,"byte_end":738307,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738250,"byte_end":738287,"line_start":644,"line_end":644,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738407,"byte_end":738413,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"pub fn as_raw(&Self) -> &Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738358,"byte_end":738395,"line_start":649,"line_end":649,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738518,"byte_end":738528,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738467,"byte_end":738506,"line_start":654,"line_end":654,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738637,"byte_end":738642,"line_start":660,"line_end":660,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738597,"byte_end":738625,"line_start":659,"line_end":659,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738730,"byte_end":738736,"line_start":665,"line_end":665,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738689,"byte_end":738718,"line_start":664,"line_end":664,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739121,"byte_end":739127,"line_start":677,"line_end":677,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":738988,"byte_end":739042,"line_start":675,"line_end":675,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739047,"byte_end":739109,"line_start":676,"line_end":676,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739627,"byte_end":739631,"line_start":688,"line_end":688,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"pub fn rows(&Self) -> Rows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739280,"byte_end":739332,"line_start":683,"line_end":683,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739337,"byte_end":739340,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739345,"byte_end":739436,"line_start":685,"line_end":685,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739441,"byte_end":739534,"line_start":686,"line_end":686,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739539,"byte_end":739615,"line_start":687,"line_end":687,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739982,"byte_end":739998,"line_start":697,"line_end":697,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n Starting from the top left.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739725,"byte_end":739769,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739774,"byte_end":739827,"line_start":693,"line_end":693,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739832,"byte_end":739867,"line_start":694,"line_end":694,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739872,"byte_end":739934,"line_start":695,"line_end":695,"column_start":5,"column_end":67}},{"value":"/ Starting from the top left.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":739939,"byte_end":739970,"line_start":696,"line_end":696,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740330,"byte_end":740344,"line_start":709,"line_end":709,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"pub fn enumerate_rows(&Self) -> EnumerateRows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740179,"byte_end":740221,"line_start":706,"line_end":706,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740226,"byte_end":740278,"line_start":707,"line_end":707,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740283,"byte_end":740318,"line_start":708,"line_end":708,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740665,"byte_end":740674,"line_start":722,"line_end":722,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740499,"byte_end":740553,"line_start":717,"line_end":717,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740558,"byte_end":740561,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740566,"byte_end":740578,"line_start":719,"line_end":719,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740583,"byte_end":740586,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":740591,"byte_end":740653,"line_start":721,"line_end":721,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742400,"byte_end":742413,"line_start":763,"line_end":763,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"pub fn sample_layout(&Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742320,"byte_end":742388,"line_start":762,"line_end":762,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743027,"byte_end":743044,"line_start":774,"line_end":774,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"pub fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742616,"byte_end":742690,"line_start":768,"line_end":768,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742695,"byte_end":742698,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742703,"byte_end":742791,"line_start":770,"line_end":770,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742796,"byte_end":742889,"line_start":771,"line_end":771,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742894,"byte_end":742988,"line_start":772,"line_end":772,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":742993,"byte_end":743015,"line_start":773,"line_end":773,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743527,"byte_end":743542,"line_start":789,"line_end":789,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"pub fn as_flat_samples(&Self) -> FlatSamples<&[P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743385,"byte_end":743428,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743433,"byte_end":743436,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743441,"byte_end":743515,"line_start":788,"line_end":788,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743975,"byte_end":743994,"line_start":803,"line_end":803,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"pub fn as_flat_samples_mut(&mut Self) -> FlatSamples<&mut [P::Subpixel]> where\nContainer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743825,"byte_end":743876,"line_start":800,"line_end":800,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743881,"byte_end":743884,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":743889,"byte_end":743963,"line_start":802,"line_end":802,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744741,"byte_end":744751,"line_start":828,"line_end":828,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744667,"byte_end":744729,"line_start":827,"line_end":827,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745277,"byte_end":745285,"line_start":839,"line_end":839,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> RowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744922,"byte_end":744982,"line_start":834,"line_end":834,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744987,"byte_end":744990,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744995,"byte_end":745086,"line_start":836,"line_end":836,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745091,"byte_end":745184,"line_start":837,"line_end":837,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745189,"byte_end":745265,"line_start":838,"line_end":838,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745555,"byte_end":745575,"line_start":846,"line_end":846,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745393,"byte_end":745437,"line_start":843,"line_end":843,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745442,"byte_end":745495,"line_start":844,"line_end":844,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745500,"byte_end":745543,"line_start":845,"line_end":845,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745949,"byte_end":745967,"line_start":859,"line_end":859,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"pub fn enumerate_rows_mut(&mut Self) -> EnumerateRowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745790,"byte_end":745832,"line_start":856,"line_end":856,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745837,"byte_end":745889,"line_start":857,"line_end":857,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":745894,"byte_end":745937,"line_start":858,"line_end":858,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746330,"byte_end":746343,"line_start":873,"line_end":873,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746156,"byte_end":746218,"line_start":868,"line_end":868,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746223,"byte_end":746226,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746231,"byte_end":746243,"line_start":870,"line_end":870,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746248,"byte_end":746251,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746256,"byte_end":746318,"line_start":872,"line_end":872,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746792,"byte_end":746801,"line_start":885,"line_end":885,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746643,"byte_end":746680,"line_start":880,"line_end":880,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746685,"byte_end":746688,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746693,"byte_end":746705,"line_start":882,"line_end":882,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746710,"byte_end":746713,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746718,"byte_end":746780,"line_start":884,"line_end":884,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747246,"byte_end":747250,"line_start":900,"line_end":900,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747055,"byte_end":747108,"line_start":896,"line_end":896,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747113,"byte_end":747116,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747121,"byte_end":747177,"line_start":898,"line_end":898,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747182,"byte_end":747234,"line_start":899,"line_end":899,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747925,"byte_end":747941,"line_start":926,"line_end":926,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747718,"byte_end":747773,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747778,"byte_end":747803,"line_start":922,"line_end":922,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747808,"byte_end":747811,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747816,"byte_end":747888,"line_start":924,"line_end":924,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747893,"byte_end":747913,"line_start":925,"line_end":925,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754778,"byte_end":754781,"line_start":1154,"line_end":1154,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754588,"byte_end":754649,"line_start":1149,"line_end":1149,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754654,"byte_end":754657,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754662,"byte_end":754674,"line_start":1151,"line_end":1151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754679,"byte_end":754682,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754687,"byte_end":754766,"line_start":1153,"line_end":1153,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755319,"byte_end":755329,"line_start":1170,"line_end":1170,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755139,"byte_end":755190,"line_start":1165,"line_end":1165,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755195,"byte_end":755198,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755203,"byte_end":755215,"line_start":1167,"line_end":1167,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755220,"byte_end":755223,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755228,"byte_end":755307,"line_start":1169,"line_end":1169,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755844,"byte_end":755851,"line_start":1185,"line_end":1185,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755550,"byte_end":755632,"line_start":1178,"line_end":1178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755637,"byte_end":755640,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755645,"byte_end":755715,"line_start":1180,"line_end":1180,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755720,"byte_end":755723,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755728,"byte_end":755740,"line_start":1182,"line_end":1182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755745,"byte_end":755748,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":755753,"byte_end":755832,"line_start":1184,"line_end":1184,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756262,"byte_end":756270,"line_start":1198,"line_end":1198,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756142,"byte_end":756196,"line_start":1196,"line_end":1196,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756201,"byte_end":756250,"line_start":1197,"line_end":1197,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3458},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756557,"byte_end":756565,"line_start":1208,"line_end":1208,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756457,"byte_end":756518,"line_start":1206,"line_end":1206,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756523,"byte_end":756545,"line_start":1207,"line_end":1207,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3459},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756693,"byte_end":756706,"line_start":1214,"line_end":1214,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":3461}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756627,"byte_end":756682,"line_start":1213,"line_end":1213,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756893,"byte_end":756900,"line_start":1219,"line_end":1219,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":3459},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756716,"byte_end":756757,"line_start":1215,"line_end":1215,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756762,"byte_end":756765,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756770,"byte_end":756856,"line_start":1217,"line_end":1217,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756861,"byte_end":756885,"line_start":1218,"line_end":1218,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":757168,"byte_end":757182,"line_start":1227,"line_end":1227,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756978,"byte_end":757038,"line_start":1224,"line_end":1224,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":757043,"byte_end":757111,"line_start":1225,"line_end":1225,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":757116,"byte_end":757156,"line_start":1226,"line_end":1226,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759317,"byte_end":759325,"line_start":1292,"line_end":1292,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759278,"byte_end":759307,"line_start":1291,"line_end":1291,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759414,"byte_end":759423,"line_start":1294,"line_end":1294,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759359,"byte_end":759404,"line_start":1293,"line_end":1293,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759503,"byte_end":759512,"line_start":1296,"line_end":1296,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759458,"byte_end":759493,"line_start":1295,"line_end":1295,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759608,"byte_end":759622,"line_start":1298,"line_end":1298,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":759547,"byte_end":759598,"line_start":1297,"line_end":1297,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5627},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768392,"byte_end":768394,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768359,"byte_end":768387,"line_start":10,"line_end":10,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5629},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768455,"byte_end":768458,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768400,"byte_end":768450,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5631},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768513,"byte_end":768517,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768464,"byte_end":768508,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5633},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768572,"byte_end":768577,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768523,"byte_end":768567,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5635},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768618,"byte_end":768621,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768584,"byte_end":768613,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5637},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768683,"byte_end":768687,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768627,"byte_end":768678,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5639},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768721,"byte_end":768726,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768693,"byte_end":768716,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5641},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768761,"byte_end":768767,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768732,"byte_end":768756,"line_start":25,"line_end":25,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5643},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768823,"byte_end":768827,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768774,"byte_end":768818,"line_start":28,"line_end":28,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5645},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768882,"byte_end":768887,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768833,"byte_end":768877,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5647},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768913,"byte_end":768928,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5626},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768343,"byte_end":768352,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n\n    /// Pixel is 8-bit luminance\n    L8,\n\n    /// Pixel is 8-bit luminance with an alpha channel\n    La8,\n\n    /// Pixel contains 8-bit R, G and B channels\n    Rgb8,\n\n    /// Pixel is 8-bit RGB with an alpha channel\n    Rgba8,\n\n    /// Pixel is 16-bit luminance\n    L16,\n\n    /// Pixel is 16-bit luminance with an alpha channel\n    La16,\n\n    /// Pixel is 16-bit RGB\n    Rgb16,\n\n    /// Pixel is 16-bit RGBA\n    Rgba16,\n\n    /// Pixel contains 8-bit B, G and R channels\n    Bgr8,\n\n    /// Pixel is 8-bit BGR with an alpha channel\n    Bgra8,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":5627},{"krate":0,"index":5629},{"krate":0,"index":5631},{"krate":0,"index":5633},{"krate":0,"index":5635},{"krate":0,"index":5637},{"krate":0,"index":5639},{"krate":0,"index":5641},{"krate":0,"index":5643},{"krate":0,"index":5645},{"krate":0,"index":5647}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768222,"byte_end":768282,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":769076,"byte_end":769091,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"pub fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768989,"byte_end":769064,"line_start":38,"line_end":38,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":769554,"byte_end":769563,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"pub fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":769501,"byte_end":769542,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":769902,"byte_end":769911,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"pub fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":769823,"byte_end":769890,"line_start":61,"line_end":61,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770305,"byte_end":770319,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"pub fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770171,"byte_end":770267,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770272,"byte_end":770293,"line_start":72,"line_end":72,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770482,"byte_end":770495,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770406,"byte_end":770470,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5666},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771153,"byte_end":771155,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"A8","qualname":"::color::ExtendedColorType::A8","value":"ExtendedColorType::A8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 8-bit alpha\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771124,"byte_end":771148,"line_start":94,"line_end":94,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5668},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771194,"byte_end":771196,"line_start":97,"line_end":97,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771161,"byte_end":771189,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5670},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771257,"byte_end":771260,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771202,"byte_end":771252,"line_start":98,"line_end":98,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5672},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771315,"byte_end":771319,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771266,"byte_end":771310,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771374,"byte_end":771379,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771325,"byte_end":771369,"line_start":102,"line_end":102,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5676},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771418,"byte_end":771420,"line_start":105,"line_end":105,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771385,"byte_end":771413,"line_start":104,"line_end":104,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5678},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771481,"byte_end":771484,"line_start":107,"line_end":107,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771426,"byte_end":771476,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771539,"byte_end":771543,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771490,"byte_end":771534,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5682},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771598,"byte_end":771603,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771549,"byte_end":771593,"line_start":110,"line_end":110,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5684},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771642,"byte_end":771644,"line_start":113,"line_end":113,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771609,"byte_end":771637,"line_start":112,"line_end":112,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771705,"byte_end":771708,"line_start":115,"line_end":115,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771650,"byte_end":771700,"line_start":114,"line_end":114,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5688},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771763,"byte_end":771767,"line_start":117,"line_end":117,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771714,"byte_end":771758,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771822,"byte_end":771827,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771773,"byte_end":771817,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771866,"byte_end":771868,"line_start":121,"line_end":121,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771833,"byte_end":771861,"line_start":120,"line_end":120,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5694},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771929,"byte_end":771932,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771874,"byte_end":771924,"line_start":122,"line_end":122,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5696},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771987,"byte_end":771991,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771938,"byte_end":771982,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5698},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772046,"byte_end":772051,"line_start":127,"line_end":127,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771997,"byte_end":772041,"line_start":126,"line_end":126,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5700},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772091,"byte_end":772094,"line_start":129,"line_end":129,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772057,"byte_end":772086,"line_start":128,"line_end":128,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5702},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772156,"byte_end":772160,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772100,"byte_end":772151,"line_start":130,"line_end":130,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5704},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772216,"byte_end":772221,"line_start":133,"line_end":133,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772166,"byte_end":772211,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5706},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772277,"byte_end":772283,"line_start":135,"line_end":135,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772227,"byte_end":772272,"line_start":134,"line_end":134,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5708},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772338,"byte_end":772342,"line_start":137,"line_end":137,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772289,"byte_end":772333,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5710},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772397,"byte_end":772402,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772348,"byte_end":772392,"line_start":138,"line_end":138,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5712},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772631,"byte_end":772638,"line_start":144,"line_end":144,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772409,"byte_end":772503,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772508,"byte_end":772600,"line_start":142,"line_end":142,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772605,"byte_end":772626,"line_start":143,"line_end":143,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5715},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772668,"byte_end":772683,"line_start":147,"line_end":147,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5665},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":771100,"byte_end":771117,"line_start":93,"line_end":93,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"pub enum ExtendedColorType {\n\n    /// Pixel is 8-bit alpha\n    A8,\n\n    /// Pixel is 1-bit luminance\n    L1,\n\n    /// Pixel is 1-bit luminance with an alpha channel\n    La1,\n\n    /// Pixel contains 1-bit R, G and B channels\n    Rgb1,\n\n    /// Pixel is 1-bit RGB with an alpha channel\n    Rgba1,\n\n    /// Pixel is 2-bit luminance\n    L2,\n\n    /// Pixel is 2-bit luminance with an alpha channel\n    La2,\n\n    /// Pixel contains 2-bit R, G and B channels\n    Rgb2,\n\n    /// Pixel is 2-bit RGB with an alpha channel\n    Rgba2,\n\n    /// Pixel is 4-bit luminance\n    L4,\n\n    /// Pixel is 4-bit luminance with an alpha channel\n    La4,\n\n    /// Pixel contains 4-bit R, G and B channels\n    Rgb4,\n\n    /// Pixel is 4-bit RGB with an alpha channel\n    Rgba4,\n\n    /// Pixel is 8-bit luminance\n    L8,\n\n    /// Pixel is 8-bit luminance with an alpha channel\n    La8,\n\n    /// Pixel contains 8-bit R, G and B channels\n    Rgb8,\n\n    /// Pixel is 8-bit RGB with an alpha channel\n    Rgba8,\n\n    /// Pixel is 16-bit luminance\n    L16,\n\n    /// Pixel is 16-bit luminance with an alpha channel\n    La16,\n\n    /// Pixel contains 16-bit R, G and B channels\n    Rgb16,\n\n    /// Pixel is 16-bit RGB with an alpha channel\n    Rgba16,\n\n    /// Pixel contains 8-bit B, G and R channels\n    Bgr8,\n\n    /// Pixel is 8-bit BGR with an alpha channel\n    Bgra8,\n\n    /// Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n    /// which are associated with an external palette. In that case, the pixel value is an index\n    /// into the palette.\n    Unknown(u8),\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":5666},{"krate":0,"index":5668},{"krate":0,"index":5670},{"krate":0,"index":5672},{"krate":0,"index":5674},{"krate":0,"index":5676},{"krate":0,"index":5678},{"krate":0,"index":5680},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":5686},{"krate":0,"index":5688},{"krate":0,"index":5690},{"krate":0,"index":5692},{"krate":0,"index":5694},{"krate":0,"index":5696},{"krate":0,"index":5698},{"krate":0,"index":5700},{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":5706},{"krate":0,"index":5708},{"krate":0,"index":5710},{"krate":0,"index":5712},{"krate":0,"index":5715}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770593,"byte_end":770656,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770657,"byte_end":770660,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770661,"byte_end":770758,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770759,"byte_end":770856,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770857,"byte_end":770886,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770887,"byte_end":770890,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770891,"byte_end":770983,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":770984,"byte_end":771039,"line_start":91,"line_end":91,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772966,"byte_end":772979,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772752,"byte_end":772807,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772812,"byte_end":772815,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772820,"byte_end":772914,"line_start":153,"line_end":153,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772919,"byte_end":772954,"line_start":154,"line_end":154,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6033},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779383,"byte_end":779386,"line_start":376,"line_end":376,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775129,"byte_end":775139,"line_start":218,"line_end":218,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775140,"byte_end":775162,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6062},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779463,"byte_end":779466,"line_start":377,"line_end":377,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775129,"byte_end":775139,"line_start":218,"line_end":218,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775140,"byte_end":775162,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6091},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779542,"byte_end":779546,"line_start":378,"line_end":378,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775129,"byte_end":775139,"line_start":218,"line_end":218,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775140,"byte_end":775162,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6120},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779623,"byte_end":779627,"line_start":379,"line_end":379,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775129,"byte_end":775139,"line_start":218,"line_end":218,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775140,"byte_end":775162,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6149},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779723,"byte_end":779727,"line_start":380,"line_end":380,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775129,"byte_end":775139,"line_start":218,"line_end":218,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775140,"byte_end":775162,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6178},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779822,"byte_end":779827,"line_start":381,"line_end":381,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775129,"byte_end":775139,"line_start":218,"line_end":218,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":775140,"byte_end":775162,"line_start":219,"line_end":219,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779994,"byte_end":780003,"line_start":385,"line_end":385,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":3508}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":779922,"byte_end":779983,"line_start":384,"line_end":384,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":780093,"byte_end":780103,"line_start":387,"line_end":387,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":3506},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":780017,"byte_end":780085,"line_start":386,"line_end":386,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6259},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813845,"byte_end":813855,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813798,"byte_end":813840,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6262},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813931,"byte_end":813942,"line_start":48,"line_end":48,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813873,"byte_end":813926,"line_start":47,"line_end":47,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6265},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814011,"byte_end":814020,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813965,"byte_end":814006,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6268},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814094,"byte_end":814104,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814037,"byte_end":814089,"line_start":53,"line_end":53,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6271},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814168,"byte_end":814177,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814122,"byte_end":814163,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6274},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814251,"byte_end":814261,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr with alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814194,"byte_end":814246,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6277},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814327,"byte_end":814338,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814279,"byte_end":814322,"line_start":62,"line_end":62,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6280},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814417,"byte_end":814429,"line_start":66,"line_end":66,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814358,"byte_end":814412,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6283},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814501,"byte_end":814511,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814454,"byte_end":814496,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6286},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814588,"byte_end":814599,"line_start":72,"line_end":72,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":6258},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":814530,"byte_end":814583,"line_start":71,"line_end":71,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":6258},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813779,"byte_end":813791,"line_start":43,"line_end":43,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n\n    /// Each pixel in this image is 8-bit Luma\n    ImageLuma8(GrayImage),\n\n    /// Each pixel in this image is 8-bit Luma with alpha\n    ImageLumaA8(GrayAlphaImage),\n\n    /// Each pixel in this image is 8-bit Rgb\n    ImageRgb8(RgbImage),\n\n    /// Each pixel in this image is 8-bit Rgb with alpha\n    ImageRgba8(RgbaImage),\n\n    /// Each pixel in this image is 8-bit Bgr\n    ImageBgr8(BgrImage),\n\n    /// Each pixel in this image is 8-bit Bgr with alpha\n    ImageBgra8(BgraImage),\n\n    /// Each pixel in this image is 16-bit Luma\n    ImageLuma16(Gray16Image),\n\n    /// Each pixel in this image is 16-bit Luma with alpha\n    ImageLumaA16(GrayAlpha16Image),\n\n    /// Each pixel in this image is 16-bit Rgb\n    ImageRgb16(Rgb16Image),\n\n    /// Each pixel in this image is 16-bit Rgb with alpha\n    ImageRgba16(Rgba16Image),\n}","parent":null,"children":[{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6268},{"krate":0,"index":6271},{"krate":0,"index":6274},{"krate":0,"index":6277},{"krate":0,"index":6280},{"krate":0,"index":6283},{"krate":0,"index":6286}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":813705,"byte_end":813724,"line_start":41,"line_end":41,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":818814,"byte_end":818823,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":818740,"byte_end":818802,"line_start":138,"line_end":138,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819026,"byte_end":819037,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":818926,"byte_end":818980,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":818985,"byte_end":819014,"line_start":144,"line_end":144,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819214,"byte_end":819222,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819141,"byte_end":819202,"line_start":149,"line_end":149,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819398,"byte_end":819407,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819324,"byte_end":819386,"line_start":154,"line_end":154,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819584,"byte_end":819593,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"pub fn new_bgra8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGRA pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819510,"byte_end":819572,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819769,"byte_end":819777,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"pub fn new_bgr8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGR pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819696,"byte_end":819757,"line_start":164,"line_end":164,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819953,"byte_end":819963,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"pub fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":819879,"byte_end":819941,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820167,"byte_end":820179,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"pub fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820067,"byte_end":820121,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820126,"byte_end":820155,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820357,"byte_end":820366,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"pub fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820284,"byte_end":820345,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820543,"byte_end":820553,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"pub fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820469,"byte_end":820531,"line_start":185,"line_end":185,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820719,"byte_end":820731,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"pub fn from_decoder<'a,\n                    impl ImageDecoder<'a>: ImageDecoder>(impl ImageDecoder<'a>)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820657,"byte_end":820707,"line_start":190,"line_end":190,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820953,"byte_end":820959,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"pub fn to_rgb(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820848,"byte_end":820897,"line_start":197,"line_end":197,"column_start":5,"column_end":54}},{"value":"deprecated = \"replaced by `to_rgb8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":820902,"byte_end":820941,"line_start":198,"line_end":198,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821127,"byte_end":821134,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"to_rgb8","qualname":"<DynamicImage>::to_rgb8","value":"pub fn to_rgb8(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821066,"byte_end":821115,"line_start":205,"line_end":205,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821302,"byte_end":821310,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"to_rgb16","qualname":"<DynamicImage>::to_rgb16","value":"pub fn to_rgb16(&Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821241,"byte_end":821290,"line_start":212,"line_end":212,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821526,"byte_end":821533,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"pub fn to_rgba(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821419,"byte_end":821469,"line_start":219,"line_end":219,"column_start":5,"column_end":55}},{"value":"deprecated = \"replaced by `to_rgba8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821474,"byte_end":821514,"line_start":220,"line_end":220,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821703,"byte_end":821711,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<DynamicImage>::to_rgba8","value":"pub fn to_rgba8(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821641,"byte_end":821691,"line_start":227,"line_end":227,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821881,"byte_end":821890,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"to_rgba16","qualname":"<DynamicImage>::to_rgba16","value":"pub fn to_rgba16(&Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":821819,"byte_end":821869,"line_start":234,"line_end":234,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822105,"byte_end":822111,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"pub fn to_bgr(&Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822000,"byte_end":822049,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"deprecated = \"replaced by `to_bgr8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822054,"byte_end":822093,"line_start":242,"line_end":242,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822279,"byte_end":822286,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"to_bgr8","qualname":"<DynamicImage>::to_bgr8","value":"pub fn to_bgr8(&Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822218,"byte_end":822267,"line_start":249,"line_end":249,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822500,"byte_end":822507,"line_start":258,"line_end":258,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"pub fn to_bgra(&Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822393,"byte_end":822443,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"deprecated = \"replaced by `to_bgra8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822448,"byte_end":822488,"line_start":257,"line_end":257,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822677,"byte_end":822685,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"to_bgra8","qualname":"<DynamicImage>::to_bgra8","value":"pub fn to_bgra8(&Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822615,"byte_end":822665,"line_start":264,"line_end":264,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822899,"byte_end":822906,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"pub fn to_luma(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822793,"byte_end":822842,"line_start":271,"line_end":271,"column_start":5,"column_end":54}},{"value":"deprecated = \"replaced by `to_luma8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":822847,"byte_end":822887,"line_start":272,"line_end":272,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823075,"byte_end":823083,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"to_luma8","qualname":"<DynamicImage>::to_luma8","value":"pub fn to_luma8(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823014,"byte_end":823063,"line_start":279,"line_end":279,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823252,"byte_end":823261,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"to_luma16","qualname":"<DynamicImage>::to_luma16","value":"pub fn to_luma16(&Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823191,"byte_end":823240,"line_start":286,"line_end":286,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823484,"byte_end":823497,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823371,"byte_end":823421,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"deprecated = \"replaced by `to_luma_alpha8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823426,"byte_end":823472,"line_start":294,"line_end":294,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823672,"byte_end":823686,"line_start":302,"line_end":302,"column_start":12,"column_end":26},"name":"to_luma_alpha8","qualname":"<DynamicImage>::to_luma_alpha8","value":"pub fn to_luma_alpha8(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823610,"byte_end":823660,"line_start":301,"line_end":301,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823861,"byte_end":823876,"line_start":309,"line_end":309,"column_start":12,"column_end":27},"name":"to_luma_alpha16","qualname":"<DynamicImage>::to_luma_alpha16","value":"pub fn to_luma_alpha16(&Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823799,"byte_end":823849,"line_start":308,"line_end":308,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824216,"byte_end":824224,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"pub fn into_rgb(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":823991,"byte_end":824037,"line_start":315,"line_end":315,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824042,"byte_end":824045,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824050,"byte_end":824120,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824125,"byte_end":824158,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_rgb8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824163,"byte_end":824204,"line_start":319,"line_end":319,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824541,"byte_end":824550,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"into_rgb8","qualname":"<DynamicImage>::into_rgb8","value":"pub fn into_rgb8(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824362,"byte_end":824408,"line_start":327,"line_end":327,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824413,"byte_end":824416,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824421,"byte_end":824491,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824496,"byte_end":824529,"line_start":330,"line_end":330,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824867,"byte_end":824877,"line_start":342,"line_end":342,"column_start":12,"column_end":22},"name":"into_rgb16","qualname":"<DynamicImage>::into_rgb16","value":"pub fn into_rgb16(Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824688,"byte_end":824734,"line_start":338,"line_end":338,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824739,"byte_end":824742,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824747,"byte_end":824817,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":824822,"byte_end":824855,"line_start":341,"line_end":341,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825246,"byte_end":825255,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"pub fn into_rgba(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825019,"byte_end":825066,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825071,"byte_end":825074,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825079,"byte_end":825149,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825154,"byte_end":825187,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_rgba8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825192,"byte_end":825234,"line_start":353,"line_end":353,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825576,"byte_end":825586,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"into_rgba8","qualname":"<DynamicImage>::into_rgba8","value":"pub fn into_rgba8(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825396,"byte_end":825443,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825448,"byte_end":825451,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825456,"byte_end":825526,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825531,"byte_end":825564,"line_start":364,"line_end":364,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825907,"byte_end":825918,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"into_rgba16","qualname":"<DynamicImage>::into_rgba16","value":"pub fn into_rgba16(Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825727,"byte_end":825774,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825779,"byte_end":825782,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825787,"byte_end":825857,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":825862,"byte_end":825895,"line_start":375,"line_end":375,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826289,"byte_end":826297,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"pub fn into_bgr(Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826063,"byte_end":826109,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826114,"byte_end":826117,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826122,"byte_end":826192,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826197,"byte_end":826230,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_bgra8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826235,"byte_end":826277,"line_start":387,"line_end":387,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826614,"byte_end":826623,"line_start":399,"line_end":399,"column_start":12,"column_end":21},"name":"into_bgr8","qualname":"<DynamicImage>::into_bgr8","value":"pub fn into_bgr8(Self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826435,"byte_end":826481,"line_start":395,"line_end":395,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826486,"byte_end":826489,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826494,"byte_end":826564,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826569,"byte_end":826602,"line_start":398,"line_end":398,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827089,"byte_end":827098,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"pub fn into_bgra(Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826862,"byte_end":826909,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826914,"byte_end":826917,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826922,"byte_end":826992,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":826997,"byte_end":827030,"line_start":411,"line_end":411,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_bgra8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827035,"byte_end":827077,"line_start":412,"line_end":412,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827419,"byte_end":827429,"line_start":424,"line_end":424,"column_start":12,"column_end":22},"name":"into_bgra8","qualname":"<DynamicImage>::into_bgra8","value":"pub fn into_bgra8(Self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827239,"byte_end":827286,"line_start":420,"line_end":420,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827291,"byte_end":827294,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827299,"byte_end":827369,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827374,"byte_end":827407,"line_start":423,"line_end":423,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827900,"byte_end":827909,"line_start":438,"line_end":438,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"pub fn into_luma(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827673,"byte_end":827720,"line_start":433,"line_end":433,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827725,"byte_end":827728,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827733,"byte_end":827803,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827808,"byte_end":827841,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_luma8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":827846,"byte_end":827888,"line_start":437,"line_end":437,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828230,"byte_end":828240,"line_start":449,"line_end":449,"column_start":12,"column_end":22},"name":"into_luma8","qualname":"<DynamicImage>::into_luma8","value":"pub fn into_luma8(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828050,"byte_end":828097,"line_start":445,"line_end":445,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828102,"byte_end":828105,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828110,"byte_end":828180,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828185,"byte_end":828218,"line_start":448,"line_end":448,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828561,"byte_end":828572,"line_start":460,"line_end":460,"column_start":12,"column_end":23},"name":"into_luma16","qualname":"<DynamicImage>::into_luma16","value":"pub fn into_luma16(Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828381,"byte_end":828428,"line_start":456,"line_end":456,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828433,"byte_end":828436,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828441,"byte_end":828511,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828516,"byte_end":828549,"line_start":459,"line_end":459,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828951,"byte_end":828966,"line_start":472,"line_end":472,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"pub fn into_luma_alpha(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828717,"byte_end":828765,"line_start":467,"line_end":467,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828770,"byte_end":828773,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828778,"byte_end":828848,"line_start":469,"line_end":469,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828853,"byte_end":828886,"line_start":470,"line_end":470,"column_start":5,"column_end":38}},{"value":"deprecated = \"replaced by `into_luma_alpha8`\"","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":828891,"byte_end":828939,"line_start":471,"line_end":471,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829300,"byte_end":829316,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"into_luma_alpha8","qualname":"<DynamicImage>::into_luma_alpha8","value":"pub fn into_luma_alpha8(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829119,"byte_end":829167,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829172,"byte_end":829175,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829180,"byte_end":829250,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829255,"byte_end":829288,"line_start":482,"line_end":482,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829650,"byte_end":829667,"line_start":494,"line_end":494,"column_start":12,"column_end":29},"name":"into_luma_alpha16","qualname":"<DynamicImage>::into_luma_alpha16","value":"pub fn into_luma_alpha16(Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829469,"byte_end":829517,"line_start":490,"line_end":490,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829522,"byte_end":829525,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829530,"byte_end":829600,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829605,"byte_end":829638,"line_start":493,"line_end":493,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830054,"byte_end":830058,"line_start":505,"line_end":505,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829824,"byte_end":829895,"line_start":501,"line_end":501,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829900,"byte_end":829903,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829908,"byte_end":829959,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":829964,"byte_end":830042,"line_start":504,"line_end":504,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830315,"byte_end":830323,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"pub fn crop_imm(&Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830232,"byte_end":830303,"line_start":509,"line_end":509,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830548,"byte_end":830555,"line_start":515,"line_end":515,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830493,"byte_end":830536,"line_start":514,"line_end":514,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830770,"byte_end":830781,"line_start":523,"line_end":523,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830707,"byte_end":830758,"line_start":522,"line_end":522,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831000,"byte_end":831007,"line_start":531,"line_end":531,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"pub fn as_bgr8(&Self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGR image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":830945,"byte_end":830988,"line_start":530,"line_end":530,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3822},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831222,"byte_end":831233,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"pub fn as_mut_bgr8(&mut Self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit BGR image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831159,"byte_end":831210,"line_start":538,"line_end":538,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831453,"byte_end":831461,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831397,"byte_end":831441,"line_start":546,"line_end":546,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831679,"byte_end":831691,"line_start":555,"line_end":555,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831615,"byte_end":831667,"line_start":554,"line_end":554,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831913,"byte_end":831921,"line_start":563,"line_end":563,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"pub fn as_bgra8(&Self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGRA image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":831857,"byte_end":831901,"line_start":562,"line_end":562,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832139,"byte_end":832151,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"pub fn as_mut_bgra8(&mut Self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832075,"byte_end":832127,"line_start":570,"line_end":570,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832378,"byte_end":832386,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832317,"byte_end":832366,"line_start":578,"line_end":578,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832609,"byte_end":832621,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832540,"byte_end":832597,"line_start":586,"line_end":586,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832870,"byte_end":832884,"line_start":595,"line_end":595,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":832787,"byte_end":832858,"line_start":594,"line_end":594,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3830},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833135,"byte_end":833153,"line_start":603,"line_end":603,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833044,"byte_end":833123,"line_start":602,"line_end":602,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833381,"byte_end":833389,"line_start":611,"line_end":611,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"pub fn as_rgb16(&Self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833325,"byte_end":833369,"line_start":610,"line_end":610,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833608,"byte_end":833620,"line_start":619,"line_end":619,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"pub fn as_mut_rgb16(&mut Self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833544,"byte_end":833596,"line_start":618,"line_end":618,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833844,"byte_end":833853,"line_start":627,"line_end":627,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"pub fn as_rgba16(&Self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":833787,"byte_end":833832,"line_start":626,"line_end":626,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834075,"byte_end":834088,"line_start":635,"line_end":635,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"pub fn as_mut_rgba16(&mut Self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834010,"byte_end":834063,"line_start":634,"line_end":634,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834319,"byte_end":834328,"line_start":643,"line_end":643,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"pub fn as_luma16(&Self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834257,"byte_end":834307,"line_start":642,"line_end":642,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834555,"byte_end":834568,"line_start":651,"line_end":651,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"pub fn as_mut_luma16(&mut Self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834485,"byte_end":834543,"line_start":650,"line_end":650,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834821,"byte_end":834836,"line_start":659,"line_end":659,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"pub fn as_luma_alpha16(&Self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834737,"byte_end":834809,"line_start":658,"line_end":658,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":835091,"byte_end":835110,"line_start":667,"line_end":667,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"pub fn as_mut_luma_alpha16(&mut Self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":834999,"byte_end":835079,"line_start":666,"line_end":666,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":835369,"byte_end":835387,"line_start":675,"line_end":675,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"pub fn as_flat_samples_u8(&Self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":835285,"byte_end":835357,"line_start":674,"line_end":674,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836021,"byte_end":836040,"line_start":688,"line_end":688,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"pub fn as_flat_samples_u16(&Self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":835936,"byte_end":836009,"line_start":687,"line_end":687,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836520,"byte_end":836528,"line_start":699,"line_end":699,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DynamicImage>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a native endian byte slice.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a native endian byte slice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836447,"byte_end":836508,"line_start":698,"line_end":698,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836763,"byte_end":836773,"line_start":706,"line_end":706,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<DynamicImage>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector. If the `ImageBuffer`\n container is `Vec<u8>`, this operation is free. Otherwise, a copy\n is returned.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector. If the `ImageBuffer`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836587,"byte_end":836656,"line_start":703,"line_end":703,"column_start":5,"column_end":74}},{"value":"/ container is `Vec<u8>`, this operation is free. Otherwise, a copy","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836661,"byte_end":836730,"line_start":704,"line_end":704,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836735,"byte_end":836751,"line_start":705,"line_end":705,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836905,"byte_end":836913,"line_start":711,"line_end":711,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return a copy of this image's pixels as a byte vector.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836835,"byte_end":836893,"line_start":710,"line_end":710,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":837021,"byte_end":837026,"line_start":716,"line_end":716,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":836974,"byte_end":837009,"line_start":715,"line_end":715,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":837830,"byte_end":837839,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":837773,"byte_end":837818,"line_start":731,"line_end":731,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":838945,"byte_end":838951,"line_start":749,"line_end":749,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":838859,"byte_end":838895,"line_start":747,"line_end":747,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":838900,"byte_end":838933,"line_start":748,"line_end":748,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839315,"byte_end":839321,"line_start":757,"line_end":757,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839038,"byte_end":839097,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839102,"byte_end":839165,"line_start":754,"line_end":754,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839170,"byte_end":839232,"line_start":755,"line_end":755,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839237,"byte_end":839303,"line_start":756,"line_end":756,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839785,"byte_end":839797,"line_start":767,"line_end":767,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839583,"byte_end":839642,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839647,"byte_end":839703,"line_start":765,"line_end":765,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":839708,"byte_end":839773,"line_start":766,"line_end":766,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840488,"byte_end":840497,"line_start":784,"line_end":784,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840013,"byte_end":840069,"line_start":776,"line_end":776,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840074,"byte_end":840137,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840142,"byte_end":840204,"line_start":778,"line_end":778,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840209,"byte_end":840275,"line_start":779,"line_end":779,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840280,"byte_end":840283,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840288,"byte_end":840351,"line_start":781,"line_end":781,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840356,"byte_end":840406,"line_start":782,"line_end":782,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840411,"byte_end":840476,"line_start":783,"line_end":783,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841105,"byte_end":841120,"line_start":796,"line_end":796,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840723,"byte_end":840768,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840773,"byte_end":840829,"line_start":791,"line_end":791,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840834,"byte_end":840900,"line_start":792,"line_end":792,"column_start":5,"column_end":71}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840905,"byte_end":840968,"line_start":793,"line_end":793,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":840973,"byte_end":841023,"line_start":794,"line_end":794,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841028,"byte_end":841093,"line_start":795,"line_end":795,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841640,"byte_end":841654,"line_start":806,"line_end":806,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841262,"byte_end":841321,"line_start":800,"line_end":800,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841326,"byte_end":841389,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841394,"byte_end":841456,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841461,"byte_end":841523,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ specified by ```nwidth``` and ```nheight```, then cropped to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841528,"byte_end":841592,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/ fit within the other bound.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":841597,"byte_end":841628,"line_start":805,"line_end":805,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842474,"byte_end":842478,"line_start":829,"line_end":829,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842362,"byte_end":842405,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842410,"byte_end":842462,"line_start":828,"line_end":828,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842856,"byte_end":842865,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842590,"byte_end":842635,"line_start":833,"line_end":833,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842640,"byte_end":842691,"line_start":834,"line_end":834,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842696,"byte_end":842752,"line_start":835,"line_end":835,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842757,"byte_end":842760,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":842765,"byte_end":842844,"line_start":837,"line_end":837,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843074,"byte_end":843083,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843009,"byte_end":843062,"line_start":842,"line_end":842,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843493,"byte_end":843508,"line_start":854,"line_end":854,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843290,"byte_end":843328,"line_start":851,"line_end":851,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843333,"byte_end":843392,"line_start":852,"line_end":852,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843397,"byte_end":843481,"line_start":853,"line_end":853,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843808,"byte_end":843816,"line_start":861,"line_end":861,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843616,"byte_end":843654,"line_start":858,"line_end":858,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843659,"byte_end":843715,"line_start":859,"line_end":859,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843720,"byte_end":843796,"line_start":860,"line_end":860,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844164,"byte_end":844173,"line_start":869,"line_end":869,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843932,"byte_end":843966,"line_start":865,"line_end":865,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":843971,"byte_end":844022,"line_start":866,"line_end":866,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844027,"byte_end":844096,"line_start":867,"line_end":867,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844101,"byte_end":844152,"line_start":868,"line_end":868,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844332,"byte_end":844337,"line_start":874,"line_end":874,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844290,"byte_end":844320,"line_start":873,"line_end":873,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844483,"byte_end":844488,"line_start":879,"line_end":879,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844439,"byte_end":844471,"line_start":878,"line_end":878,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844647,"byte_end":844655,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844592,"byte_end":844635,"line_start":883,"line_end":883,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844808,"byte_end":844817,"line_start":889,"line_end":889,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844752,"byte_end":844796,"line_start":888,"line_end":888,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844971,"byte_end":844980,"line_start":894,"line_end":894,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":844915,"byte_end":844959,"line_start":893,"line_end":893,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":845135,"byte_end":845143,"line_start":899,"line_end":899,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":845078,"byte_end":845123,"line_start":898,"line_end":898,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849423,"byte_end":849427,"line_start":1015,"line_end":1015,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849289,"byte_end":849342,"line_start":1012,"line_end":1012,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849347,"byte_end":849350,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849355,"byte_end":849411,"line_start":1014,"line_end":1014,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849799,"byte_end":849815,"line_start":1029,"line_end":1029,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849592,"byte_end":849647,"line_start":1024,"line_end":1024,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849652,"byte_end":849677,"line_start":1025,"line_end":1025,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849682,"byte_end":849685,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849690,"byte_end":849762,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":849767,"byte_end":849787,"line_start":1028,"line_end":1028,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857822,"byte_end":857826,"line_start":1228,"line_end":1228,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857520,"byte_end":857569,"line_start":1221,"line_end":1221,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857570,"byte_end":857638,"line_start":1222,"line_end":1222,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857639,"byte_end":857642,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857643,"byte_end":857739,"line_start":1224,"line_end":1224,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857740,"byte_end":857768,"line_start":1225,"line_end":1225,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857769,"byte_end":857772,"line_start":1226,"line_end":1226,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":857773,"byte_end":857814,"line_start":1227,"line_end":1227,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3893},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858381,"byte_end":858397,"line_start":1243,"line_end":1243,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"pub fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858016,"byte_end":858083,"line_start":1236,"line_end":1236,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858084,"byte_end":858164,"line_start":1237,"line_end":1237,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858165,"byte_end":858168,"line_start":1238,"line_end":1238,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858169,"byte_end":858265,"line_start":1239,"line_end":1239,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858266,"byte_end":858327,"line_start":1240,"line_end":1240,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858328,"byte_end":858331,"line_start":1241,"line_end":1241,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858332,"byte_end":858373,"line_start":1242,"line_end":1242,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858972,"byte_end":858983,"line_start":1258,"line_end":1258,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858597,"byte_end":858659,"line_start":1251,"line_end":1251,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858660,"byte_end":858663,"line_start":1252,"line_end":1252,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858664,"byte_end":858750,"line_start":1253,"line_end":1253,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858751,"byte_end":858812,"line_start":1254,"line_end":1254,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858814,"byte_end":858905,"line_start":1256,"line_end":1256,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp and tiff files are supported.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":858906,"byte_end":858964,"line_start":1257,"line_end":1257,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859637,"byte_end":859660,"line_start":1280,"line_end":1280,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"pub fn save_buffer_with_format<P>(P, &[u8], u32, u32, color::ColorType,\n                                  ImageFormat) -> ImageResult<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859289,"byte_end":859350,"line_start":1272,"line_end":1272,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859351,"byte_end":859379,"line_start":1273,"line_end":1273,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859380,"byte_end":859383,"line_start":1274,"line_end":1274,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859384,"byte_end":859446,"line_start":1275,"line_end":1275,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859447,"byte_end":859479,"line_start":1276,"line_end":1276,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859480,"byte_end":859540,"line_start":1277,"line_end":1277,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859541,"byte_end":859599,"line_start":1278,"line_end":1278,"column_start":1,"column_end":59}},{"value":"/ tiff files are supported.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859600,"byte_end":859629,"line_start":1279,"line_end":1279,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860223,"byte_end":860239,"line_start":1303,"line_end":1303,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":859979,"byte_end":860019,"line_start":1295,"line_end":1295,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860020,"byte_end":860023,"line_start":1296,"line_end":1296,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860024,"byte_end":860075,"line_start":1297,"line_end":1297,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860076,"byte_end":860118,"line_start":1298,"line_end":1298,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860119,"byte_end":860122,"line_start":1299,"line_end":1299,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860123,"byte_end":860169,"line_start":1300,"line_end":1300,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860170,"byte_end":860173,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860174,"byte_end":860215,"line_start":1302,"line_end":1302,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860721,"byte_end":860749,"line_start":1318,"line_end":1318,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860394,"byte_end":860434,"line_start":1308,"line_end":1308,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860435,"byte_end":860438,"line_start":1309,"line_end":1309,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860439,"byte_end":860536,"line_start":1310,"line_end":1310,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860537,"byte_end":860571,"line_start":1311,"line_end":1311,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860572,"byte_end":860575,"line_start":1312,"line_end":1312,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860576,"byte_end":860622,"line_start":1313,"line_end":1313,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860623,"byte_end":860626,"line_start":1314,"line_end":1314,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860627,"byte_end":860653,"line_start":1315,"line_end":1315,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860654,"byte_end":860695,"line_start":1316,"line_end":1316,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":860696,"byte_end":860713,"line_start":1317,"line_end":1317,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6304},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862578,"byte_end":862581,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862547,"byte_end":862573,"line_start":25,"line_end":25,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6306},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862620,"byte_end":862624,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862588,"byte_end":862615,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6308},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862662,"byte_end":862665,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862631,"byte_end":862657,"line_start":31,"line_end":31,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6310},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862704,"byte_end":862708,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862672,"byte_end":862699,"line_start":34,"line_end":34,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6312},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862754,"byte_end":862757,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862715,"byte_end":862749,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6314},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862796,"byte_end":862800,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862764,"byte_end":862791,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6316},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862838,"byte_end":862841,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862807,"byte_end":862833,"line_start":43,"line_end":43,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6318},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862879,"byte_end":862882,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862848,"byte_end":862874,"line_start":46,"line_end":46,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6320},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862920,"byte_end":862923,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862889,"byte_end":862915,"line_start":49,"line_end":49,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6322},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862961,"byte_end":862964,"line_start":53,"line_end":53,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862930,"byte_end":862956,"line_start":52,"line_end":52,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6324},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863011,"byte_end":863014,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862971,"byte_end":863006,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6326},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863057,"byte_end":863065,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863021,"byte_end":863052,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6328},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863105,"byte_end":863109,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863072,"byte_end":863100,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6330},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863135,"byte_end":863150,"line_start":65,"line_end":65,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":6303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6303},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862529,"byte_end":862540,"line_start":24,"line_end":24,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n\n    /// An Image in PNG Format\n    Png,\n\n    /// An Image in JPEG Format\n    Jpeg,\n\n    /// An Image in GIF Format\n    Gif,\n\n    /// An Image in WEBP Format\n    WebP,\n\n    /// An Image in general PNM Format\n    Pnm,\n\n    /// An Image in TIFF Format\n    Tiff,\n\n    /// An Image in TGA Format\n    Tga,\n\n    /// An Image in DDS Format\n    Dds,\n\n    /// An Image in BMP Format\n    Bmp,\n\n    /// An Image in ICO Format\n    Ico,\n\n    /// An Image in Radiance HDR Format\n    Hdr,\n\n    /// An Image in farbfeld Format\n    Farbfeld,\n\n    /// An Image in AVIF format.\n    Avif,\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6306},{"krate":0,"index":6308},{"krate":0,"index":6310},{"krate":0,"index":6312},{"krate":0,"index":6314},{"krate":0,"index":6316},{"krate":0,"index":6318},{"krate":0,"index":6320},{"krate":0,"index":6322},{"krate":0,"index":6324},{"krate":0,"index":6326},{"krate":0,"index":6328},{"krate":0,"index":6330}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862366,"byte_end":862412,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":862413,"byte_end":862468,"line_start":22,"line_end":22,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863512,"byte_end":863526,"line_start":80,"line_end":80,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ImageFormat>::from_extension","value":"pub fn from_extension<S>(S) -> Option<Self> where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by a path's file extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863213,"byte_end":863278,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863283,"byte_end":863286,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863291,"byte_end":863304,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863309,"byte_end":863312,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863317,"byte_end":863324,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863329,"byte_end":863356,"line_start":74,"line_end":74,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863361,"byte_end":863364,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_extension(\"jpg\");","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863369,"byte_end":863421,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(format, Some(ImageFormat::Jpeg));","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863426,"byte_end":863474,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863479,"byte_end":863486,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863491,"byte_end":863500,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864865,"byte_end":864874,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"pub fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864504,"byte_end":864571,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864576,"byte_end":864579,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864584,"byte_end":864597,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864602,"byte_end":864605,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864610,"byte_end":864617,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864622,"byte_end":864649,"line_start":111,"line_end":111,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864654,"byte_end":864657,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_path(\"images/ferris.png\")?;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864662,"byte_end":864724,"line_start":113,"line_end":113,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864729,"byte_end":864770,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864775,"byte_end":864778,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), image::error::ImageError>(())","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864783,"byte_end":864827,"line_start":116,"line_end":116,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864832,"byte_end":864839,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":864844,"byte_end":864853,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":865631,"byte_end":865639,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"can_read","qualname":"<ImageFormat>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be decoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be decoded by the lib.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":865549,"byte_end":865605,"line_start":137,"line_end":137,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":865610,"byte_end":865619,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":866459,"byte_end":866468,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"can_write","qualname":"<ImageFormat>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be encoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be encoded by the lib.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":866377,"byte_end":866433,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":866438,"byte_end":866447,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867822,"byte_end":867836,"line_start":190,"line_end":190,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"pub fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867232,"byte_end":867291,"line_start":181,"line_end":181,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867296,"byte_end":867299,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867304,"byte_end":867391,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867396,"byte_end":867490,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867495,"byte_end":867590,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867595,"byte_end":867606,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867611,"byte_end":867614,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867619,"byte_end":867713,"line_start":188,"line_end":188,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":867718,"byte_end":867810,"line_start":189,"line_end":189,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6349},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868862,"byte_end":868865,"line_start":216,"line_end":216,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868803,"byte_end":868826,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868831,"byte_end":868857,"line_start":215,"line_end":215,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6351},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868956,"byte_end":868960,"line_start":220,"line_end":220,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868872,"byte_end":868896,"line_start":218,"line_end":218,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868901,"byte_end":868951,"line_start":219,"line_end":219,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6354},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869042,"byte_end":869045,"line_start":224,"line_end":224,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PNMSubtype)","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868971,"byte_end":868994,"line_start":222,"line_end":222,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868999,"byte_end":869037,"line_start":223,"line_end":223,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6357},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869123,"byte_end":869126,"line_start":228,"line_end":228,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869064,"byte_end":869087,"line_start":226,"line_end":226,"column_start":5,"column_end":28}},{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869092,"byte_end":869118,"line_start":227,"line_end":227,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6359},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869192,"byte_end":869195,"line_start":232,"line_end":232,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869133,"byte_end":869156,"line_start":230,"line_end":230,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869161,"byte_end":869187,"line_start":231,"line_end":231,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6361},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869261,"byte_end":869264,"line_start":236,"line_end":236,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869202,"byte_end":869225,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869230,"byte_end":869256,"line_start":235,"line_end":235,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6363},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869340,"byte_end":869348,"line_start":240,"line_end":240,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869271,"byte_end":869299,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/ An Image in farbfeld Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869304,"byte_end":869335,"line_start":239,"line_end":239,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6365},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869414,"byte_end":869417,"line_start":244,"line_end":244,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageOutputFormat::Tga","value":"ImageOutputFormat::Tga","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869355,"byte_end":869378,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869383,"byte_end":869409,"line_start":243,"line_end":243,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6367},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869741,"byte_end":869752,"line_start":253,"line_end":253,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869496,"byte_end":869568,"line_start":250,"line_end":250,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6370},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869786,"byte_end":869801,"line_start":256,"line_end":256,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":6348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6348},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868779,"byte_end":868796,"line_start":213,"line_end":213,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat {\n\n    #[cfg(feature = \"png\")]\n    /// An Image in PNG Format\n    Png,\n\n    #[cfg(feature = \"jpeg\")]\n    /// An Image in JPEG Format with specified quality\n    Jpeg(u8),\n\n    #[cfg(feature = \"pnm\")]\n    /// An Image in one of the PNM Formats\n    Pnm(PNMSubtype),\n\n    #[cfg(feature = \"gif\")]\n    /// An Image in GIF Format\n    Gif,\n\n    #[cfg(feature = \"ico\")]\n    /// An Image in ICO Format\n    Ico,\n\n    #[cfg(feature = \"bmp\")]\n    /// An Image in BMP Format\n    Bmp,\n\n    #[cfg(feature = \"farbfeld\")]\n    /// An Image in farbfeld Format\n    Farbfeld,\n\n    #[cfg(feature = \"tga\")]\n    /// An Image in TGA Format\n    Tga,\n\n    /// A value for signalling an error: An unsupported format was requested\n    Unsupported(String),\n\n    #[doc(hidden)]\n    __NonExhaustive(crate::utils::NonExhaustiveMarker),\n}","parent":null,"children":[{"krate":0,"index":6349},{"krate":0,"index":6351},{"krate":0,"index":6354},{"krate":0,"index":6357},{"krate":0,"index":6359},{"krate":0,"index":6361},{"krate":0,"index":6363},{"krate":0,"index":6365},{"krate":0,"index":6367},{"krate":0,"index":6370}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":868671,"byte_end":868730,"line_start":211,"line_end":211,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6384},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880101,"byte_end":880109,"line_start":501,"line_end":501,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":6385},{"krate":0,"index":6386}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":879697,"byte_end":879747,"line_start":495,"line_end":495,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":879748,"byte_end":879751,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":879752,"byte_end":879849,"line_start":497,"line_end":497,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":879850,"byte_end":879944,"line_start":498,"line_end":498,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":879945,"byte_end":880044,"line_start":499,"line_end":499,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880217,"byte_end":880224,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"pub fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880169,"byte_end":880205,"line_start":507,"line_end":507,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880397,"byte_end":880402,"line_start":515,"line_end":515,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"pub fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880272,"byte_end":880317,"line_start":512,"line_end":512,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880322,"byte_end":880325,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880330,"byte_end":880385,"line_start":514,"line_end":514,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880512,"byte_end":880521,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"pub fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880448,"byte_end":880500,"line_start":519,"line_end":519,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3966},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880650,"byte_end":880662,"line_start":526,"line_end":526,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3977}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880598,"byte_end":880639,"line_start":525,"line_end":525,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880739,"byte_end":880745,"line_start":528,"line_end":528,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880680,"byte_end":880729,"line_start":527,"line_end":527,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880835,"byte_end":880845,"line_start":531,"line_end":531,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880763,"byte_end":880827,"line_start":530,"line_end":530,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880950,"byte_end":880960,"line_start":534,"line_end":534,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"pub fn color_type(&Self) -> ColorType","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880873,"byte_end":880942,"line_start":533,"line_end":533,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881054,"byte_end":881073,"line_start":537,"line_end":537,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"pub fn original_color_type(&Self) -> ExtendedColorType","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880987,"byte_end":881046,"line_start":536,"line_end":536,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881414,"byte_end":881425,"line_start":544,"line_end":544,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"pub fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881148,"byte_end":881232,"line_start":541,"line_end":541,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881237,"byte_end":881333,"line_start":542,"line_end":542,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881338,"byte_end":881406,"line_start":543,"line_end":543,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881812,"byte_end":881823,"line_start":552,"line_end":552,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"pub fn total_bytes(&Self) -> u64","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881467,"byte_end":881526,"line_start":546,"line_end":546,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881531,"byte_end":881534,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881539,"byte_end":881612,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881617,"byte_end":881693,"line_start":549,"line_end":549,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881698,"byte_end":881790,"line_start":550,"line_end":550,"column_start":5,"column_end":97}},{"value":"/ into.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":881795,"byte_end":881804,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882160,"byte_end":882174,"line_start":559,"line_end":559,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"pub fn scanline_bytes(&Self) -> u64","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882002,"byte_end":882098,"line_start":557,"line_end":557,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882103,"byte_end":882152,"line_start":558,"line_end":558,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":883063,"byte_end":883073,"line_start":583,"line_end":583,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(Self, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882229,"byte_end":882268,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882273,"byte_end":882276,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882281,"byte_end":882369,"line_start":565,"line_end":565,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882374,"byte_end":882467,"line_start":566,"line_end":566,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882472,"byte_end":882570,"line_start":567,"line_end":567,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882575,"byte_end":882645,"line_start":568,"line_end":568,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882650,"byte_end":882653,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882658,"byte_end":882670,"line_start":570,"line_end":570,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882675,"byte_end":882678,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882683,"byte_end":882743,"line_start":572,"line_end":572,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882748,"byte_end":882751,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882756,"byte_end":882770,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882775,"byte_end":882778,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882783,"byte_end":882798,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882803,"byte_end":882842,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882847,"byte_end":882911,"line_start":578,"line_end":578,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882916,"byte_end":882981,"line_start":579,"line_end":579,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":882986,"byte_end":883029,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":883034,"byte_end":883045,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":883050,"byte_end":883055,"line_start":582,"line_end":582,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":883301,"byte_end":883325,"line_start":589,"line_end":589,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"pub fn read_image_with_progress<F: Fn(Progress) -> ()>(Self, &mut [u8], F)\n-> ImageResult<()>","parent":{"krate":0,"index":3966},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":883179,"byte_end":883275,"line_start":587,"line_end":587,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":883280,"byte_end":883293,"line_start":588,"line_end":588,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":3979},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884348,"byte_end":884363,"line_start":623,"line_end":623,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3983}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884275,"byte_end":884337,"line_start":622,"line_end":622,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884518,"byte_end":884527,"line_start":625,"line_end":625,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"pub fn read_rect(&mut Self, u32, u32, u32, u32, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884400,"byte_end":884510,"line_start":624,"line_end":624,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885469,"byte_end":885492,"line_start":648,"line_end":648,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"pub fn read_rect_with_progress<F: Fn(Progress) ->\n                               ()>(&mut Self, u32, u32, u32, u32, &mut [u8],\n                                   F) -> ImageResult<()>","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884753,"byte_end":884832,"line_start":636,"line_end":636,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884837,"byte_end":884840,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884845,"byte_end":884906,"line_start":638,"line_end":638,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884911,"byte_end":884985,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884990,"byte_end":885049,"line_start":640,"line_end":640,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885054,"byte_end":885057,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885062,"byte_end":885154,"line_start":642,"line_end":642,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885159,"byte_end":885218,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885223,"byte_end":885283,"line_start":644,"line_end":644,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885288,"byte_end":885291,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885296,"byte_end":885360,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885365,"byte_end":885461,"line_start":647,"line_end":647,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":3985},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885723,"byte_end":885739,"line_start":660,"line_end":660,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3987}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885686,"byte_end":885712,"line_start":659,"line_end":659,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885811,"byte_end":885822,"line_start":662,"line_end":662,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"pub fn into_frames(Self) -> Frames","parent":{"krate":0,"index":3985},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885750,"byte_end":885803,"line_start":661,"line_end":661,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":3988},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885894,"byte_end":885906,"line_start":666,"line_end":666,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":3989}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885847,"byte_end":885883,"line_start":665,"line_end":665,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886455,"byte_end":886466,"line_start":677,"line_end":677,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"pub fn write_image(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":3988},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885913,"byte_end":885965,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885970,"byte_end":885973,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":885978,"byte_end":886049,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886054,"byte_end":886130,"line_start":670,"line_end":670,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886135,"byte_end":886210,"line_start":671,"line_end":671,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886215,"byte_end":886289,"line_start":672,"line_end":672,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886294,"byte_end":886342,"line_start":673,"line_end":673,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886347,"byte_end":886350,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886355,"byte_end":886424,"line_start":675,"line_end":675,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886429,"byte_end":886447,"line_start":676,"line_end":676,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6399},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886660,"byte_end":886666,"line_start":688,"line_end":688,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886603,"byte_end":886631,"line_start":686,"line_end":686,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3998},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887407,"byte_end":887423,"line_start":725,"line_end":725,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887366,"byte_end":887396,"line_start":724,"line_end":724,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":3999},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887462,"byte_end":887467,"line_start":727,"line_end":727,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887430,"byte_end":887452,"line_start":726,"line_end":726,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":4000},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887701,"byte_end":887715,"line_start":732,"line_end":732,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887481,"byte_end":887552,"line_start":729,"line_end":729,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887557,"byte_end":887628,"line_start":730,"line_end":730,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887633,"byte_end":887691,"line_start":731,"line_end":731,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887808,"byte_end":887818,"line_start":735,"line_end":735,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887761,"byte_end":887800,"line_start":734,"line_end":734,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887882,"byte_end":887887,"line_start":738,"line_end":738,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887846,"byte_end":887874,"line_start":737,"line_end":737,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888002,"byte_end":888008,"line_start":744,"line_end":744,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887965,"byte_end":887994,"line_start":743,"line_end":743,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4004},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888135,"byte_end":888141,"line_start":750,"line_end":750,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888086,"byte_end":888127,"line_start":749,"line_end":749,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888258,"byte_end":888267,"line_start":753,"line_end":753,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888179,"byte_end":888250,"line_start":752,"line_end":752,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888614,"byte_end":888623,"line_start":765,"line_end":765,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888415,"byte_end":888478,"line_start":758,"line_end":758,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888483,"byte_end":888486,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888491,"byte_end":888503,"line_start":760,"line_end":760,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888508,"byte_end":888511,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888516,"byte_end":888556,"line_start":762,"line_end":762,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888561,"byte_end":888564,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888569,"byte_end":888606,"line_start":764,"line_end":764,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888968,"byte_end":888984,"line_start":775,"line_end":775,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888668,"byte_end":888731,"line_start":767,"line_end":767,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888736,"byte_end":888739,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888744,"byte_end":888819,"line_start":769,"line_end":769,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888824,"byte_end":888836,"line_start":770,"line_end":770,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888841,"byte_end":888844,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888849,"byte_end":888904,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888909,"byte_end":888912,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":888917,"byte_end":888953,"line_start":774,"line_end":774,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889216,"byte_end":889222,"line_start":782,"line_end":782,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self>","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889065,"byte_end":889119,"line_start":779,"line_end":779,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889124,"byte_end":889177,"line_start":780,"line_end":780,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889182,"byte_end":889208,"line_start":781,"line_end":781,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889492,"byte_end":889497,"line_start":795,"line_end":795,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"pub fn inner(&Self) -> &Self::InnerImageView","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889436,"byte_end":889484,"line_start":794,"line_end":794,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889771,"byte_end":889775,"line_start":800,"line_end":800,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3998},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n The coordinates set the position of the top left corner of the view.\n","sig":null,"attributes":[{"value":"/ Returns an subimage that is an immutable view into this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889536,"byte_end":889602,"line_start":797,"line_end":797,"column_start":5,"column_end":71}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889607,"byte_end":889686,"line_start":798,"line_end":798,"column_start":5,"column_end":84}},{"value":"/ The coordinates set the position of the top left corner of the view.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889691,"byte_end":889763,"line_start":799,"line_end":799,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":4011},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889974,"byte_end":889986,"line_start":806,"line_end":806,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4022}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889927,"byte_end":889963,"line_start":805,"line_end":805,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890231,"byte_end":890241,"line_start":810,"line_end":810,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890011,"byte_end":890082,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890087,"byte_end":890158,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890163,"byte_end":890221,"line_start":809,"line_end":809,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890455,"byte_end":890468,"line_start":817,"line_end":817,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890283,"byte_end":890369,"line_start":812,"line_end":812,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890374,"byte_end":890377,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890382,"byte_end":890394,"line_start":814,"line_end":814,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890399,"byte_end":890402,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890407,"byte_end":890447,"line_start":816,"line_end":816,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890666,"byte_end":890675,"line_start":824,"line_end":824,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y). Indexed from top left.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890522,"byte_end":890580,"line_start":819,"line_end":819,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890585,"byte_end":890588,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890593,"byte_end":890605,"line_start":821,"line_end":821,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890610,"byte_end":890613,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890618,"byte_end":890658,"line_start":823,"line_end":823,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891053,"byte_end":891069,"line_start":834,"line_end":834,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y). Indexed from top left.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890729,"byte_end":890788,"line_start":826,"line_end":826,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890793,"byte_end":890796,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890801,"byte_end":890876,"line_start":828,"line_end":828,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890881,"byte_end":890893,"line_start":829,"line_end":829,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890898,"byte_end":890901,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890906,"byte_end":890961,"line_start":831,"line_end":831,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890966,"byte_end":890969,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":890974,"byte_end":891038,"line_start":833,"line_end":833,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891336,"byte_end":891347,"line_start":841,"line_end":841,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891167,"byte_end":891237,"line_start":838,"line_end":838,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891242,"byte_end":891245,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891250,"byte_end":891328,"line_start":840,"line_end":840,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4017},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":892109,"byte_end":892118,"line_start":858,"line_end":858,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> ImageResult<()> where\nO: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891401,"byte_end":891465,"line_start":843,"line_end":843,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891470,"byte_end":891473,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891478,"byte_end":891539,"line_start":845,"line_end":845,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891544,"byte_end":891577,"line_start":846,"line_end":846,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891582,"byte_end":891585,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891590,"byte_end":891675,"line_start":848,"line_end":848,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891680,"byte_end":891683,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891688,"byte_end":891780,"line_start":850,"line_end":850,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891785,"byte_end":891851,"line_start":851,"line_end":851,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891856,"byte_end":891859,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891864,"byte_end":891877,"line_start":853,"line_end":853,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891882,"byte_end":891963,"line_start":854,"line_end":854,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891968,"byte_end":891971,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":891976,"byte_end":892047,"line_start":856,"line_end":856,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":892052,"byte_end":892101,"line_start":857,"line_end":857,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":893165,"byte_end":893176,"line_start":886,"line_end":886,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"pub fn copy_within(&mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":892817,"byte_end":892904,"line_start":879,"line_end":879,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":892909,"byte_end":892912,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":892917,"byte_end":893014,"line_start":881,"line_end":881,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":893019,"byte_end":893022,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":893027,"byte_end":893040,"line_start":883,"line_end":883,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":893045,"byte_end":893114,"line_start":884,"line_end":884,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":893119,"byte_end":893157,"line_start":885,"line_end":885,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":894834,"byte_end":894843,"line_start":922,"line_end":922,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut Self::InnerImage","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":894770,"byte_end":894826,"line_start":921,"line_end":921,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895119,"byte_end":895128,"line_start":927,"line_end":927,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32)\n-> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":894886,"byte_end":894948,"line_start":924,"line_end":924,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":894953,"byte_end":895030,"line_start":925,"line_end":925,"column_start":5,"column_end":82}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895035,"byte_end":895111,"line_start":926,"line_end":926,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":4023},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895619,"byte_end":895627,"line_start":944,"line_end":944,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895335,"byte_end":895364,"line_start":938,"line_end":938,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895365,"byte_end":895368,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895369,"byte_end":895419,"line_start":940,"line_end":940,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895420,"byte_end":895481,"line_start":941,"line_end":941,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895482,"byte_end":895545,"line_start":942,"line_end":942,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895546,"byte_end":895607,"line_start":943,"line_end":943,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":896096,"byte_end":896099,"line_start":961,"line_end":961,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"pub fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895975,"byte_end":896003,"line_start":959,"line_end":959,"column_start":5,"column_end":33}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":896008,"byte_end":896084,"line_start":960,"line_end":960,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":896388,"byte_end":896401,"line_start":972,"line_end":972,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":896332,"byte_end":896376,"line_start":971,"line_end":971,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4038},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":896635,"byte_end":896643,"line_start":980,"line_end":980,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"pub fn to_image(&Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImage + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":896580,"byte_end":896623,"line_start":979,"line_end":979,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":4071},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911498,"byte_end":911513,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":4072}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911385,"byte_end":911463,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911464,"byte_end":911487,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911584,"byte_end":911592,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":4071},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911544,"byte_end":911576,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":4077},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911880,"byte_end":911889,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911834,"byte_end":911869,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":4090},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912411,"byte_end":912422,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912268,"byte_end":912329,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912330,"byte_end":912400,"line_start":46,"line_end":46,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":4091},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912461,"byte_end":912467,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4092},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912510,"byte_end":912520,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4099},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912992,"byte_end":912996,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":4100},{"krate":0,"index":4101}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912921,"byte_end":912981,"line_start":70,"line_end":70,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913027,"byte_end":913032,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":4099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4101},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913053,"byte_end":913057,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"pub fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":4099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913783,"byte_end":913788,"line_start":105,"line_end":105,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4130},{"krate":0,"index":4132},{"krate":0,"index":4135},{"krate":0,"index":4138},{"krate":0,"index":4141},{"krate":0,"index":4144},{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4149}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913658,"byte_end":913682,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913683,"byte_end":913686,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913687,"byte_end":913772,"line_start":104,"line_end":104,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":4109},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913852,"byte_end":913860,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913809,"byte_end":913842,"line_start":106,"line_end":106,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913935,"byte_end":913948,"line_start":110,"line_end":110,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913878,"byte_end":913924,"line_start":109,"line_end":109,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914091,"byte_end":914104,"line_start":113,"line_end":113,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::traits::Pixel::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913958,"byte_end":914012,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914017,"byte_end":914083,"line_start":112,"line_end":112,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914200,"byte_end":914208,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914154,"byte_end":914192,"line_start":117,"line_end":117,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914296,"byte_end":914308,"line_start":121,"line_end":121,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914243,"byte_end":914288,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914474,"byte_end":914485,"line_start":125,"line_end":125,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914351,"byte_end":914415,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914420,"byte_end":914463,"line_start":124,"line_end":124,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914702,"byte_end":914713,"line_start":129,"line_end":129,"column_start":8,"column_end":19},"name":"color_model","qualname":"::traits::Pixel::color_model","value":"pub fn color_model() -> &'static str","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interpret the meaning each channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914505,"byte_end":914577,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914582,"byte_end":914625,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914630,"byte_end":914694,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":4116},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914817,"byte_end":914827,"line_start":134,"line_end":134,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ ColorType for this pixel format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914771,"byte_end":914806,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914967,"byte_end":914977,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"color_type","qualname":"::traits::Pixel::color_type","value":"pub fn color_type() -> ColorType","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914844,"byte_end":914891,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":914896,"byte_end":914959,"line_start":136,"line_end":136,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915215,"byte_end":915224,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915031,"byte_end":915096,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915101,"byte_end":915176,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915181,"byte_end":915184,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915189,"byte_end":915207,"line_start":144,"line_end":144,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915527,"byte_end":915540,"line_start":158,"line_end":158,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\n                     Self::Subpixel) -> Self","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915360,"byte_end":915416,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915421,"byte_end":915488,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915493,"byte_end":915496,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915501,"byte_end":915519,"line_start":157,"line_end":157,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4120},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915894,"byte_end":915904,"line_start":169,"line_end":169,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915670,"byte_end":915702,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915707,"byte_end":915710,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915715,"byte_end":915799,"line_start":167,"line_end":167,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915804,"byte_end":915886,"line_start":168,"line_end":168,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916184,"byte_end":916198,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915946,"byte_end":915992,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":915997,"byte_end":916000,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916005,"byte_end":916089,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916094,"byte_end":916176,"line_start":174,"line_end":174,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916285,"byte_end":916291,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916248,"byte_end":916277,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916387,"byte_end":916394,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916328,"byte_end":916379,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916470,"byte_end":916477,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916432,"byte_end":916462,"line_start":183,"line_end":183,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916575,"byte_end":916588,"line_start":187,"line_end":187,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916515,"byte_end":916567,"line_start":186,"line_end":186,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916664,"byte_end":916670,"line_start":190,"line_end":190,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::traits::Pixel::to_bgr","value":"pub fn to_bgr(&Self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916627,"byte_end":916656,"line_start":189,"line_end":189,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916766,"byte_end":916773,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::traits::Pixel::to_bgra","value":"pub fn to_bgra(&Self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR with an alpha channel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916707,"byte_end":916758,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916880,"byte_end":916883,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916811,"byte_end":916872,"line_start":195,"line_end":195,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917044,"byte_end":917049,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":916975,"byte_end":917036,"line_start":200,"line_end":200,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917274,"byte_end":917288,"line_start":207,"line_end":207,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917137,"byte_end":917209,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917214,"byte_end":917266,"line_start":206,"line_end":206,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917594,"byte_end":917610,"line_start":214,"line_end":214,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917441,"byte_end":917513,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917518,"byte_end":917586,"line_start":213,"line_end":213,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917839,"byte_end":917856,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"pub fn map_without_alpha<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":917759,"byte_end":917831,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918148,"byte_end":918167,"line_start":231,"line_end":231,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"pub fn apply_without_alpha<F>(&mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918044,"byte_end":918116,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918121,"byte_end":918140,"line_start":230,"line_end":230,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918410,"byte_end":918414,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918308,"byte_end":918372,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918377,"byte_end":918402,"line_start":239,"line_end":239,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4146},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918654,"byte_end":918660,"line_start":246,"line_end":246,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918536,"byte_end":918600,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918605,"byte_end":918646,"line_start":245,"line_end":245,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918807,"byte_end":918813,"line_start":251,"line_end":251,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918778,"byte_end":918799,"line_start":250,"line_end":250,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918924,"byte_end":918929,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":918831,"byte_end":918916,"line_start":253,"line_end":253,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":4151},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":919038,"byte_end":919053,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6411},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":923367,"byte_end":923386,"line_start":115,"line_end":115,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":6412}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[{"value":"/ A marker struct for __NonExhaustive enums.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922644,"byte_end":922690,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922691,"byte_end":922694,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This is an empty type that can not be constructed. When an enum contains a tuple variant that","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922695,"byte_end":922792,"line_start":106,"line_end":106,"column_start":1,"column_end":98}},{"value":"/ includes this type the optimizer can statically determined tha the branch is never taken while","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922793,"byte_end":922891,"line_start":107,"line_end":107,"column_start":1,"column_end":99}},{"value":"/ at the same time the matching of the branch is required.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922892,"byte_end":922952,"line_start":108,"line_end":108,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922953,"byte_end":922956,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The effect is thus very similar to the actual `#[non_exhaustive]` attribute with no runtime","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":922957,"byte_end":923052,"line_start":110,"line_end":110,"column_start":1,"column_end":96}},{"value":"/ costs. Also note that we use a dirty trick to not only hide this type from the doc but make it","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":923053,"byte_end":923151,"line_start":111,"line_end":111,"column_start":1,"column_end":99}},{"value":"/ inaccessible. The visibility in this module is pub but the module itself is not and the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":923152,"byte_end":923243,"line_start":112,"line_end":112,"column_start":1,"column_end":92}},{"value":"/ top-level crate never exports the type.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/utils/mod.rs","byte_start":923244,"byte_end":923287,"line_start":113,"line_end":113,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20090,"byte_end":20106,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20804,"byte_end":20817,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21593,"byte_end":21606,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22383,"byte_end":22397,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22776,"byte_end":22786,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23143,"byte_end":23153,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23269,"byte_end":23284,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23413,"byte_end":23428,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23678,"byte_end":23694,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23997,"byte_end":24007,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":24468,"byte_end":24478,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":24931,"byte_end":24947,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":26569,"byte_end":26585,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":26613,"byte_end":26627,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":27662,"byte_end":27676,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":27881,"byte_end":27894,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":28355,"byte_end":28368,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":28573,"byte_end":28586,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29033,"byte_end":29046,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29251,"byte_end":29261,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29644,"byte_end":29654,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29682,"byte_end":29697,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34538,"byte_end":34546,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":35116,"byte_end":35124,"line_start":105,"line_end":105,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":35273,"byte_end":35281,"line_start":112,"line_end":112,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":75030,"byte_end":75037,"line_start":362,"line_end":362,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":75816,"byte_end":75824,"line_start":398,"line_end":398,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":76363,"byte_end":76371,"line_start":422,"line_end":422,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83862,"byte_end":83874,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92155,"byte_end":92167,"line_start":379,"line_end":379,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112150,"byte_end":112156,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113538,"byte_end":113544,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114330,"byte_end":114336,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132616,"byte_end":132628,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145223,"byte_end":145226,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145484,"byte_end":145495,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162650,"byte_end":162661,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168513,"byte_end":168517,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174102,"byte_end":174109,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":178485,"byte_end":178496,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":179105,"byte_end":179116,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":179720,"byte_end":179724,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":180971,"byte_end":180978,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":182245,"byte_end":182252,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":183147,"byte_end":183157,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":183309,"byte_end":183332,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":183540,"byte_end":183563,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":184137,"byte_end":184142,"line_start":1454,"line_end":1454,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":185077,"byte_end":185082,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":185107,"byte_end":185117,"line_start":1480,"line_end":1480,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":194011,"byte_end":194022,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":195945,"byte_end":195957,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":198028,"byte_end":198038,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":198194,"byte_end":198206,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":198553,"byte_end":198570,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":207227,"byte_end":207235,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":208621,"byte_end":208630,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":209895,"byte_end":209910,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":211766,"byte_end":211776,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":243680,"byte_end":243689,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":244109,"byte_end":244119,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":244794,"byte_end":244804,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246849,"byte_end":246859,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":253974,"byte_end":253984,"line_start":225,"line_end":225,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":259168,"byte_end":259180,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":259820,"byte_end":259830,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":259986,"byte_end":259998,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":260467,"byte_end":260478,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":261202,"byte_end":261208,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":262884,"byte_end":262894,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":265018,"byte_end":265028,"line_start":215,"line_end":215,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268251,"byte_end":268261,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269218,"byte_end":269228,"line_start":85,"line_end":85,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":271254,"byte_end":271264,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":272161,"byte_end":272171,"line_start":168,"line_end":168,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273369,"byte_end":273378,"line_start":210,"line_end":210,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273868,"byte_end":273878,"line_start":233,"line_end":233,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":297653,"byte_end":297667,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":299487,"byte_end":299501,"line_start":95,"line_end":95,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":300280,"byte_end":300294,"line_start":121,"line_end":121,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":302900,"byte_end":302915,"line_start":186,"line_end":186,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":303163,"byte_end":303178,"line_start":193,"line_end":193,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":303589,"byte_end":303604,"line_start":213,"line_end":213,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304412,"byte_end":304427,"line_start":239,"line_end":239,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":305415,"byte_end":305430,"line_start":271,"line_end":271,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310748,"byte_end":310758,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":311234,"byte_end":311243,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":311656,"byte_end":311666,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":314993,"byte_end":315009,"line_start":165,"line_end":165,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":315620,"byte_end":315636,"line_start":186,"line_end":186,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":320125,"byte_end":320135,"line_start":291,"line_end":291,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":320427,"byte_end":320436,"line_start":306,"line_end":306,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321099,"byte_end":321105,"line_start":329,"line_end":329,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321715,"byte_end":321725,"line_start":357,"line_end":357,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":326821,"byte_end":326831,"line_start":491,"line_end":491,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":330353,"byte_end":330365,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":332015,"byte_end":332025,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":332181,"byte_end":332193,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":332695,"byte_end":332703,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333527,"byte_end":333537,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":334908,"byte_end":334917,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":335333,"byte_end":335343,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":335851,"byte_end":335861,"line_start":211,"line_end":211,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337179,"byte_end":337189,"line_start":265,"line_end":265,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339495,"byte_end":339505,"line_start":330,"line_end":330,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1463},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345721,"byte_end":345731,"line_start":496,"line_end":496,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346969,"byte_end":346992,"line_start":535,"line_end":535,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":347285,"byte_end":347308,"line_start":548,"line_end":548,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":349116,"byte_end":349139,"line_start":599,"line_end":599,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355821,"byte_end":355832,"line_start":786,"line_end":786,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366311,"byte_end":366321,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":368883,"byte_end":368894,"line_start":100,"line_end":100,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":369020,"byte_end":369031,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":369732,"byte_end":369752,"line_start":135,"line_end":135,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":370011,"byte_end":370031,"line_start":145,"line_end":145,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":383752,"byte_end":383764,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":384895,"byte_end":384905,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385061,"byte_end":385073,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385314,"byte_end":385333,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385573,"byte_end":385592,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":386873,"byte_end":386883,"line_start":140,"line_end":140,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":389226,"byte_end":389234,"line_start":212,"line_end":212,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":390547,"byte_end":390556,"line_start":260,"line_end":260,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":390976,"byte_end":390986,"line_start":274,"line_end":274,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396787,"byte_end":396797,"line_start":33,"line_end":33,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":397791,"byte_end":397801,"line_start":66,"line_end":66,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":400594,"byte_end":400605,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":402394,"byte_end":402404,"line_start":69,"line_end":69,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":402817,"byte_end":402828,"line_start":83,"line_end":83,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":404574,"byte_end":404583,"line_start":143,"line_end":143,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":404841,"byte_end":404851,"line_start":154,"line_end":154,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":431074,"byte_end":431083,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434562,"byte_end":434574,"line_start":301,"line_end":301,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434912,"byte_end":434924,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435779,"byte_end":435790,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1889},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":447126,"byte_end":447137,"line_start":677,"line_end":677,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":470004,"byte_end":470013,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":470771,"byte_end":470780,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":472145,"byte_end":472155,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476769,"byte_end":476779,"line_start":209,"line_end":209,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478840,"byte_end":478851,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":484402,"byte_end":484413,"line_start":412,"line_end":412,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":484551,"byte_end":484564,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487173,"byte_end":487183,"line_start":502,"line_end":502,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":491018,"byte_end":491028,"line_start":577,"line_end":577,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":492263,"byte_end":492273,"line_start":609,"line_end":609,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":493290,"byte_end":493305,"line_start":637,"line_end":637,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":493391,"byte_end":493401,"line_start":643,"line_end":643,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/autobreak.rs","byte_start":501353,"byte_end":501362,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/autobreak.rs","byte_start":502623,"byte_end":502632,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/autobreak.rs","byte_start":503258,"byte_end":503267,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":507117,"byte_end":507129,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":509958,"byte_end":509968,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":510124,"byte_end":510136,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":510612,"byte_end":510625,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":511217,"byte_end":511232,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":512384,"byte_end":512394,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":523751,"byte_end":523760,"line_start":530,"line_end":530,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":523889,"byte_end":523898,"line_start":534,"line_end":534,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":524311,"byte_end":524321,"line_start":548,"line_end":548,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":526028,"byte_end":526038,"line_start":595,"line_end":595,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":528465,"byte_end":528467,"line_start":661,"line_end":661,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":529132,"byte_end":529135,"line_start":688,"line_end":688,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":530407,"byte_end":530413,"line_start":727,"line_end":727,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":532035,"byte_end":532040,"line_start":781,"line_end":781,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":532890,"byte_end":532902,"line_start":811,"line_end":811,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":533027,"byte_end":533040,"line_start":817,"line_end":817,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":533356,"byte_end":533368,"line_start":827,"line_end":827,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":533678,"byte_end":533693,"line_start":837,"line_end":837,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551603,"byte_end":551613,"line_start":92,"line_end":92,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":559390,"byte_end":559400,"line_start":295,"line_end":295,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":559633,"byte_end":559651,"line_start":307,"line_end":307,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":560521,"byte_end":560536,"line_start":335,"line_end":335,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":561097,"byte_end":561114,"line_start":356,"line_end":356,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":565134,"byte_end":565152,"line_start":450,"line_end":450,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":567717,"byte_end":567730,"line_start":517,"line_end":517,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":568041,"byte_end":568053,"line_start":530,"line_end":530,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2418}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":569470,"byte_end":569481,"line_start":575,"line_end":575,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":571192,"byte_end":571203,"line_start":629,"line_end":629,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":571322,"byte_end":571333,"line_start":635,"line_end":635,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":571434,"byte_end":571447,"line_start":641,"line_end":641,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576938,"byte_end":576955,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":577467,"byte_end":577477,"line_start":177,"line_end":177,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":578447,"byte_end":578456,"line_start":202,"line_end":202,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":583130,"byte_end":583144,"line_start":324,"line_end":324,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":583743,"byte_end":583752,"line_start":343,"line_end":343,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":583945,"byte_end":583954,"line_start":352,"line_end":352,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":584148,"byte_end":584157,"line_start":361,"line_end":361,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":584352,"byte_end":584361,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":585380,"byte_end":585388,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":586568,"byte_end":586578,"line_start":67,"line_end":67,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":598714,"byte_end":598724,"line_start":398,"line_end":398,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":601299,"byte_end":601308,"line_start":472,"line_end":472,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":601953,"byte_end":601965,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602332,"byte_end":602342,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602498,"byte_end":602510,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602599,"byte_end":602609,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2601},{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":604058,"byte_end":604068,"line_start":85,"line_end":85,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/header.rs","byte_start":609440,"byte_end":609449,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/header.rs","byte_start":611495,"byte_end":611501,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":615249,"byte_end":615260,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":618062,"byte_end":618072,"line_start":108,"line_end":108,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":619827,"byte_end":619837,"line_start":148,"line_end":148,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2709},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":620257,"byte_end":620268,"line_start":162,"line_end":162,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":622990,"byte_end":623001,"line_start":239,"line_end":239,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":624676,"byte_end":624687,"line_start":273,"line_end":273,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":625751,"byte_end":625763,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":625900,"byte_end":625915,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626502,"byte_end":626512,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626669,"byte_end":626681,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626907,"byte_end":626918,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":629791,"byte_end":629801,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":630214,"byte_end":630225,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":659807,"byte_end":659819,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":660838,"byte_end":660848,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":661005,"byte_end":661017,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":661138,"byte_end":661148,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":665481,"byte_end":665491,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":686767,"byte_end":686775,"line_start":1576,"line_end":1576,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687392,"byte_end":687400,"line_start":1599,"line_end":1599,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687465,"byte_end":687475,"line_start":1605,"line_end":1605,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687764,"byte_end":687774,"line_start":1617,"line_end":1617,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687841,"byte_end":687850,"line_start":1623,"line_end":1623,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":688387,"byte_end":688396,"line_start":1641,"line_end":1641,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":710797,"byte_end":710803,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3107},{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711393,"byte_end":711399,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711918,"byte_end":711923,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712996,"byte_end":713001,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":719037,"byte_end":719045,"line_start":263,"line_end":263,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722506,"byte_end":722512,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722756,"byte_end":722762,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722911,"byte_end":722917,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723126,"byte_end":723132,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723258,"byte_end":723264,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723679,"byte_end":723688,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723944,"byte_end":723953,"line_start":95,"line_end":95,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724102,"byte_end":724111,"line_start":104,"line_end":104,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724359,"byte_end":724368,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724934,"byte_end":724938,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":725837,"byte_end":725841,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726251,"byte_end":726255,"line_start":177,"line_end":177,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726404,"byte_end":726408,"line_start":186,"line_end":186,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726775,"byte_end":726779,"line_start":200,"line_end":200,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726903,"byte_end":726907,"line_start":206,"line_end":206,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727494,"byte_end":727501,"line_start":230,"line_end":230,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":728422,"byte_end":728429,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":728852,"byte_end":728859,"line_start":267,"line_end":267,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729008,"byte_end":729015,"line_start":276,"line_end":276,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729397,"byte_end":729404,"line_start":290,"line_end":290,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729860,"byte_end":729875,"line_start":313,"line_end":313,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3283},{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730278,"byte_end":730293,"line_start":331,"line_end":331,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730419,"byte_end":730434,"line_start":340,"line_end":340,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730610,"byte_end":730625,"line_start":349,"line_end":349,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731164,"byte_end":731177,"line_start":374,"line_end":374,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3305},{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731715,"byte_end":731728,"line_start":398,"line_end":398,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731852,"byte_end":731865,"line_start":407,"line_end":407,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":732035,"byte_end":732048,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":732576,"byte_end":732594,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733005,"byte_end":733023,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733154,"byte_end":733172,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733720,"byte_end":733736,"line_start":493,"line_end":493,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734283,"byte_end":734299,"line_start":517,"line_end":517,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734428,"byte_end":734444,"line_start":526,"line_end":526,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737466,"byte_end":737477,"line_start":620,"line_end":620,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744302,"byte_end":744313,"line_start":815,"line_end":815,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746911,"byte_end":746922,"line_start":890,"line_end":890,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747574,"byte_end":747585,"line_start":915,"line_end":915,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":748330,"byte_end":748341,"line_start":942,"line_end":942,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":748610,"byte_end":748621,"line_start":957,"line_end":957,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":748885,"byte_end":748896,"line_start":970,"line_end":970,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":749162,"byte_end":749173,"line_start":981,"line_end":981,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":749444,"byte_end":749455,"line_start":994,"line_end":994,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3424}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":749716,"byte_end":749727,"line_start":1005,"line_end":1005,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":750086,"byte_end":750097,"line_start":1020,"line_end":1020,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":750921,"byte_end":750932,"line_start":1053,"line_end":1053,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754517,"byte_end":754528,"line_start":1145,"line_end":1145,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3457},{"krate":0,"index":3458}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756962,"byte_end":756971,"line_start":1223,"line_end":1223,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":758369,"byte_end":758380,"line_start":1261,"line_end":1261,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768973,"byte_end":768982,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772728,"byte_end":772745,"line_start":150,"line_end":150,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":774069,"byte_end":774086,"line_start":185,"line_end":185,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":780186,"byte_end":780187,"line_start":391,"line_end":391,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":780625,"byte_end":780626,"line_start":405,"line_end":405,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":781882,"byte_end":781886,"line_start":449,"line_end":449,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782115,"byte_end":782119,"line_start":457,"line_end":457,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782347,"byte_end":782351,"line_start":465,"line_end":465,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782576,"byte_end":782580,"line_start":473,"line_end":473,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3538}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782807,"byte_end":782811,"line_start":481,"line_end":481,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782959,"byte_end":782963,"line_start":488,"line_end":488,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783207,"byte_end":783211,"line_start":497,"line_end":497,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783455,"byte_end":783459,"line_start":506,"line_end":506,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783645,"byte_end":783649,"line_start":513,"line_end":513,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3549}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783835,"byte_end":783839,"line_start":520,"line_end":520,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3551}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784027,"byte_end":784031,"line_start":527,"line_end":527,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784244,"byte_end":784248,"line_start":535,"line_end":535,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784470,"byte_end":784474,"line_start":543,"line_end":543,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784698,"byte_end":784702,"line_start":551,"line_end":551,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784924,"byte_end":784928,"line_start":559,"line_end":559,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":785203,"byte_end":785208,"line_start":570,"line_end":570,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":785470,"byte_end":785475,"line_start":579,"line_end":579,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3567}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":785736,"byte_end":785741,"line_start":588,"line_end":588,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786006,"byte_end":786011,"line_start":597,"line_end":597,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786277,"byte_end":786282,"line_start":606,"line_end":606,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3576}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786495,"byte_end":786500,"line_start":614,"line_end":614,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3578}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786800,"byte_end":786805,"line_start":624,"line_end":624,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787100,"byte_end":787105,"line_start":634,"line_end":634,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787357,"byte_end":787362,"line_start":643,"line_end":643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787626,"byte_end":787631,"line_start":652,"line_end":652,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787904,"byte_end":787909,"line_start":661,"line_end":661,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":788173,"byte_end":788178,"line_start":670,"line_end":670,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":788500,"byte_end":788504,"line_start":682,"line_end":682,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":788805,"byte_end":788809,"line_start":693,"line_end":693,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":789111,"byte_end":789115,"line_start":704,"line_end":704,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":789416,"byte_end":789420,"line_start":715,"line_end":715,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3602}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":789721,"byte_end":789725,"line_start":726,"line_end":726,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3605}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":790002,"byte_end":790006,"line_start":737,"line_end":737,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":790368,"byte_end":790372,"line_start":748,"line_end":748,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":790722,"byte_end":790726,"line_start":759,"line_end":759,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":791081,"byte_end":791085,"line_start":772,"line_end":772,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3613}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":791417,"byte_end":791421,"line_start":783,"line_end":783,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3615}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":791740,"byte_end":791744,"line_start":795,"line_end":795,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3617}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":792076,"byte_end":792080,"line_start":806,"line_end":806,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":792471,"byte_end":792475,"line_start":819,"line_end":819,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":792776,"byte_end":792780,"line_start":830,"line_end":830,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":793082,"byte_end":793086,"line_start":841,"line_end":841,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":793387,"byte_end":793391,"line_start":852,"line_end":852,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3631}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":793692,"byte_end":793696,"line_start":863,"line_end":863,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794020,"byte_end":794023,"line_start":877,"line_end":877,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794292,"byte_end":794295,"line_start":887,"line_end":887,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794563,"byte_end":794566,"line_start":897,"line_end":897,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3643}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794831,"byte_end":794834,"line_start":907,"line_end":907,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795098,"byte_end":795101,"line_start":917,"line_end":917,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795339,"byte_end":795342,"line_start":927,"line_end":927,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795567,"byte_end":795570,"line_start":935,"line_end":935,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795795,"byte_end":795798,"line_start":943,"line_end":943,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796081,"byte_end":796084,"line_start":954,"line_end":954,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796381,"byte_end":796384,"line_start":964,"line_end":964,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796663,"byte_end":796666,"line_start":975,"line_end":975,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796958,"byte_end":796961,"line_start":985,"line_end":985,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3663}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":797307,"byte_end":797310,"line_start":998,"line_end":998,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":797578,"byte_end":797581,"line_start":1008,"line_end":1008,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3669}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":797846,"byte_end":797849,"line_start":1019,"line_end":1019,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":798119,"byte_end":798122,"line_start":1029,"line_end":1029,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":798386,"byte_end":798389,"line_start":1039,"line_end":1039,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3678}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":800055,"byte_end":800060,"line_start":1093,"line_end":1093,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3684}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":801065,"byte_end":801069,"line_start":1126,"line_end":1126,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":801179,"byte_end":801183,"line_start":1132,"line_end":1132,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":803391,"byte_end":803395,"line_start":1190,"line_end":1190,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":805601,"byte_end":805604,"line_start":1246,"line_end":1246,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":805713,"byte_end":805716,"line_start":1252,"line_end":1252,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":805935,"byte_end":805940,"line_start":1265,"line_end":1265,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806113,"byte_end":806117,"line_start":1274,"line_end":1274,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806305,"byte_end":806309,"line_start":1285,"line_end":1285,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806522,"byte_end":806526,"line_start":1296,"line_end":1296,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806739,"byte_end":806742,"line_start":1307,"line_end":1307,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":807004,"byte_end":807007,"line_start":1321,"line_end":1321,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3719}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":818721,"byte_end":818733,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3868}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":850066,"byte_end":850078,"line_start":1040,"line_end":1040,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":850611,"byte_end":850623,"line_start":1062,"line_end":1062,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863195,"byte_end":863206,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3931},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869868,"byte_end":869885,"line_start":259,"line_end":259,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":871280,"byte_end":871295,"line_start":298,"line_end":298,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3947},{"krate":0,"index":3948}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880154,"byte_end":880162,"line_start":506,"line_end":506,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886810,"byte_end":886816,"line_start":696,"line_end":696,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887284,"byte_end":887290,"line_start":718,"line_end":718,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3997}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895957,"byte_end":895965,"line_start":958,"line_end":958,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":897183,"byte_end":897191,"line_start":1000,"line_end":1000,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":898012,"byte_end":898020,"line_start":1032,"line_end":1032,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5146,"byte_end":5151,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5544,"byte_end":5548,"line_start":167,"line_end":167,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/mod.rs","byte_start":30631,"byte_end":30633,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/mod.rs","byte_start":30643,"byte_end":30648,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":143}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5589,"byte_end":5597,"line_start":170,"line_end":170,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/mod.rs","byte_start":40339,"byte_end":40347,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":240}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5623,"byte_end":5625,"line_start":173,"line_end":173,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":446}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":5671,"byte_end":5675,"line_start":176,"line_end":176,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":540}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7891,"byte_end":7894,"line_start":222,"line_end":222,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":720}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7936,"byte_end":7939,"line_start":224,"line_end":224,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":975}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":7981,"byte_end":7984,"line_start":226,"line_end":226,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1028}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8031,"byte_end":8039,"line_start":228,"line_end":228,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":1150}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8081,"byte_end":8084,"line_start":230,"line_end":230,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1243}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8126,"byte_end":8129,"line_start":232,"line_end":232,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1360}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8171,"byte_end":8174,"line_start":234,"line_end":234,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1588}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8217,"byte_end":8221,"line_start":236,"line_end":236,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1715}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8263,"byte_end":8266,"line_start":238,"line_end":238,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1959}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8308,"byte_end":8311,"line_start":240,"line_end":240,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2094}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8353,"byte_end":8356,"line_start":242,"line_end":242,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2490}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8399,"byte_end":8403,"line_start":244,"line_end":244,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2659}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/lib.rs","byte_start":8446,"byte_end":8450,"line_start":246,"line_end":246,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2731}},{"kind":"Mod","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/mod.rs","byte_start":625010,"byte_end":625013,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2810}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20090,"byte_end":20106,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":20804,"byte_end":20817,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":21593,"byte_end":21606,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22383,"byte_end":22397,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":22776,"byte_end":22786,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23143,"byte_end":23153,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23269,"byte_end":23284,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4286},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23413,"byte_end":23428,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4286},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23678,"byte_end":23694,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":23997,"byte_end":24007,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":24468,"byte_end":24478,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4171},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":24931,"byte_end":24947,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4192},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":26569,"byte_end":26585,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4192},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":26613,"byte_end":26627,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4226},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":27662,"byte_end":27676,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4226},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":27881,"byte_end":27894,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":28355,"byte_end":28368,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4221},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":28573,"byte_end":28586,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4255},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29033,"byte_end":29046,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4255},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29251,"byte_end":29261,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29644,"byte_end":29654,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4260},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/error.rs","byte_start":29682,"byte_end":29697,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4286},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":34538,"byte_end":34546,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":35116,"byte_end":35124,"line_start":105,"line_end":105,"column_start":38,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/math/nq.rs","byte_start":35273,"byte_end":35281,"line_start":112,"line_end":112,"column_start":38,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":36,"index":20},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":75030,"byte_end":75037,"line_start":362,"line_end":362,"column_start":19,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4332},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":75816,"byte_end":75824,"line_start":398,"line_end":398,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":130},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/colorops.rs","byte_start":76363,"byte_end":76371,"line_start":422,"line_end":422,"column_start":32,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":36,"index":20},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":83862,"byte_end":83874,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":345},"to":{"krate":33,"index":124}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/imageops/sample.rs","byte_start":92155,"byte_end":92167,"line_start":379,"line_end":379,"column_start":34,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":112150,"byte_end":112156,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":113538,"byte_end":113544,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/io/reader.rs","byte_start":114330,"byte_end":114336,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":132616,"byte_end":132628,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145223,"byte_end":145226,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":145484,"byte_end":145495,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":162650,"byte_end":162661,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":168513,"byte_end":168517,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":174102,"byte_end":174109,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":178485,"byte_end":178496,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4356},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":179105,"byte_end":179116,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4356},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":179720,"byte_end":179724,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4417},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":180971,"byte_end":180978,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4430},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":182245,"byte_end":182252,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4430},"to":{"krate":0,"index":4011}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":183147,"byte_end":183157,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":183309,"byte_end":183332,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4492},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":183540,"byte_end":183563,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4492},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":184137,"byte_end":184142,"line_start":1454,"line_end":1454,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4443},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":185077,"byte_end":185082,"line_start":1478,"line_end":1478,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4443},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/flat.rs","byte_start":185107,"byte_end":185117,"line_start":1480,"line_end":1480,"column_start":21,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4467},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":194011,"byte_end":194022,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":195945,"byte_end":195957,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4550},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":198028,"byte_end":198038,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":198194,"byte_end":198206,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4550},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":198553,"byte_end":198570,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4627},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":207227,"byte_end":207235,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":208621,"byte_end":208630,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":209895,"byte_end":209910,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":211766,"byte_end":211776,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":243680,"byte_end":243689,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":909},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":244109,"byte_end":244119,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":831},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/decoder.rs","byte_start":244794,"byte_end":244804,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":831},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":246849,"byte_end":246859,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/bmp/encoder.rs","byte_start":253974,"byte_end":253984,"line_start":225,"line_end":225,"column_start":37,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":950},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":259168,"byte_end":259180,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4680},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":259820,"byte_end":259830,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":259986,"byte_end":259998,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4680},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":260467,"byte_end":260478,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":261202,"byte_end":261208,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":262884,"byte_end":262894,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dds.rs","byte_start":265018,"byte_end":265028,"line_start":215,"line_end":215,"column_start":45,"column_end":55},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":268251,"byte_end":268261,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":269218,"byte_end":269228,"line_start":85,"line_end":85,"column_start":15,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":271254,"byte_end":271264,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1053},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":272161,"byte_end":272171,"line_start":168,"line_end":168,"column_start":55,"column_end":65},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1053},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273369,"byte_end":273378,"line_start":210,"line_end":210,"column_start":24,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1081},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/dxt.rs","byte_start":273868,"byte_end":273878,"line_start":233,"line_end":233,"column_start":16,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":297653,"byte_end":297667,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":299487,"byte_end":299501,"line_start":95,"line_end":95,"column_start":24,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1179},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":300280,"byte_end":300294,"line_start":121,"line_end":121,"column_start":31,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1179},"to":{"krate":1,"index":3038}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":302900,"byte_end":302915,"line_start":186,"line_end":186,"column_start":15,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":303163,"byte_end":303178,"line_start":193,"line_end":193,"column_start":45,"column_end":60},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1209},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":303589,"byte_end":303604,"line_start":213,"line_end":213,"column_start":55,"column_end":70},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1209},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":304412,"byte_end":304427,"line_start":239,"line_end":239,"column_start":16,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/farbfeld.rs","byte_start":305415,"byte_end":305430,"line_start":271,"line_end":271,"column_start":33,"column_end":48},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1231},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":310748,"byte_end":310758,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":311234,"byte_end":311243,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1284},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":311656,"byte_end":311666,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1278},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":314993,"byte_end":315009,"line_start":165,"line_end":165,"column_start":15,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":315620,"byte_end":315636,"line_start":186,"line_end":186,"column_start":28,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":320125,"byte_end":320135,"line_start":291,"line_end":291,"column_start":49,"column_end":59},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1278},"to":{"krate":0,"index":3985}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":320427,"byte_end":320436,"line_start":306,"line_end":306,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321099,"byte_end":321105,"line_start":329,"line_end":329,"column_start":6,"column_end":12},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":321715,"byte_end":321725,"line_start":357,"line_end":357,"column_start":16,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/gif.rs","byte_start":326821,"byte_end":326831,"line_start":491,"line_end":491,"column_start":6,"column_end":16},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":330353,"byte_end":330365,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4767},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":332015,"byte_end":332025,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":332181,"byte_end":332193,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4767},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":332695,"byte_end":332703,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4811},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":333527,"byte_end":333537,"line_start":135,"line_end":135,"column_start":18,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":334908,"byte_end":334917,"line_start":177,"line_end":177,"column_start":18,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1415},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":335333,"byte_end":335343,"line_start":191,"line_end":191,"column_start":48,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4840},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":335851,"byte_end":335861,"line_start":211,"line_end":211,"column_start":58,"column_end":68},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4840},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":337179,"byte_end":337189,"line_start":265,"line_end":265,"column_start":6,"column_end":16},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":339495,"byte_end":339505,"line_start":330,"line_end":330,"column_start":18,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":345721,"byte_end":345731,"line_start":496,"line_end":496,"column_start":35,"column_end":45},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4847},"to":{"krate":2,"index":4899}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":346969,"byte_end":346992,"line_start":535,"line_end":535,"column_start":18,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":347285,"byte_end":347308,"line_start":548,"line_end":548,"column_start":31,"column_end":54},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":349116,"byte_end":349139,"line_start":599,"line_end":599,"column_start":40,"column_end":63},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/decoder.rs","byte_start":355821,"byte_end":355832,"line_start":786,"line_end":786,"column_start":6,"column_end":17},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":366311,"byte_end":366321,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":368883,"byte_end":368894,"line_start":100,"line_end":100,"column_start":10,"column_end":21},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":369020,"byte_end":369031,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1558},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":369732,"byte_end":369752,"line_start":135,"line_end":135,"column_start":10,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/hdr/encoder.rs","byte_start":370011,"byte_end":370031,"line_start":145,"line_end":145,"column_start":23,"column_end":43},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1570},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":383752,"byte_end":383764,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4906},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":384895,"byte_end":384905,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385061,"byte_end":385073,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4906},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385314,"byte_end":385333,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4954},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":385573,"byte_end":385592,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4954},"to":{"krate":2,"index":1842}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":386873,"byte_end":386883,"line_start":140,"line_end":140,"column_start":22,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":389226,"byte_end":389234,"line_start":212,"line_end":212,"column_start":6,"column_end":14},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":390547,"byte_end":390556,"line_start":260,"line_end":260,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1666},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/decoder.rs","byte_start":390976,"byte_end":390986,"line_start":274,"line_end":274,"column_start":52,"column_end":62},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1634},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":396787,"byte_end":396797,"line_start":33,"line_end":33,"column_start":16,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/ico/encoder.rs","byte_start":397791,"byte_end":397801,"line_start":66,"line_end":66,"column_start":33,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1697},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":400594,"byte_end":400605,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":402394,"byte_end":402404,"line_start":69,"line_end":69,"column_start":18,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1749},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":402817,"byte_end":402828,"line_start":83,"line_end":83,"column_start":45,"column_end":56},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1740},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":404574,"byte_end":404583,"line_start":143,"line_end":143,"column_start":6,"column_end":15},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/decoder.rs","byte_start":404841,"byte_end":404851,"line_start":154,"line_end":154,"column_start":6,"column_end":16},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":431074,"byte_end":431083,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434562,"byte_end":434574,"line_start":301,"line_end":301,"column_start":6,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":434912,"byte_end":434924,"line_start":313,"line_end":313,"column_start":18,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5026},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":435779,"byte_end":435790,"line_start":349,"line_end":349,"column_start":20,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/jpeg/encoder.rs","byte_start":447126,"byte_end":447137,"line_start":677,"line_end":677,"column_start":37,"column_end":48},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1857},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":470004,"byte_end":470013,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":470771,"byte_end":470780,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2001},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":472145,"byte_end":472155,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":476769,"byte_end":476779,"line_start":209,"line_end":209,"column_start":45,"column_end":55},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2015},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":478840,"byte_end":478851,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":484402,"byte_end":484413,"line_start":412,"line_end":412,"column_start":49,"column_end":60},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2039},"to":{"krate":0,"index":3985}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":484551,"byte_end":484564,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":487173,"byte_end":487183,"line_start":502,"line_end":502,"column_start":16,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":491018,"byte_end":491028,"line_start":577,"line_end":577,"column_start":33,"column_end":43},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2065},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":492263,"byte_end":492273,"line_start":609,"line_end":609,"column_start":6,"column_end":16},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":493290,"byte_end":493305,"line_start":637,"line_end":637,"column_start":18,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5041},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/png.rs","byte_start":493391,"byte_end":493401,"line_start":643,"line_end":643,"column_start":18,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5067},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/autobreak.rs","byte_start":501353,"byte_end":501362,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/autobreak.rs","byte_start":502623,"byte_end":502632,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2115},"to":{"krate":1,"index":3020}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/autobreak.rs","byte_start":503258,"byte_end":503267,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2115},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":507117,"byte_end":507129,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5093},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":509958,"byte_end":509968,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":510124,"byte_end":510136,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5093},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":510612,"byte_end":510625,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":511217,"byte_end":511232,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5177},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":512384,"byte_end":512394,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":516222,"byte_end":516229,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3044},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":523751,"byte_end":523760,"line_start":530,"line_end":530,"column_start":32,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":1,"index":2365},"to":{"krate":0,"index":2217}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":523889,"byte_end":523898,"line_start":534,"line_end":534,"column_start":18,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2239},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":524311,"byte_end":524321,"line_start":548,"line_end":548,"column_start":45,"column_end":55},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2204},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":526028,"byte_end":526038,"line_start":595,"line_end":595,"column_start":15,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":528465,"byte_end":528467,"line_start":661,"line_end":661,"column_start":17,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":529132,"byte_end":529135,"line_start":688,"line_end":688,"column_start":17,"column_end":20},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":530407,"byte_end":530413,"line_start":727,"line_end":727,"column_start":17,"column_end":23},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":532035,"byte_end":532040,"line_start":781,"line_end":781,"column_start":17,"column_end":22},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2200},"to":{"krate":0,"index":2190}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":532890,"byte_end":532902,"line_start":811,"line_end":811,"column_start":31,"column_end":43},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5277},"to":{"krate":0,"index":2202}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":533027,"byte_end":533040,"line_start":817,"line_end":817,"column_start":31,"column_end":44},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5286},"to":{"krate":0,"index":2202}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":533356,"byte_end":533368,"line_start":827,"line_end":827,"column_start":31,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5296},"to":{"krate":0,"index":2202}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/decoder.rs","byte_start":533678,"byte_end":533693,"line_start":837,"line_end":837,"column_start":31,"column_end":46},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5306},"to":{"krate":0,"index":2202}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":551603,"byte_end":551613,"line_start":92,"line_end":92,"column_start":16,"column_end":26},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":559390,"byte_end":559400,"line_start":295,"line_end":295,"column_start":33,"column_end":43},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2340},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":559633,"byte_end":559651,"line_start":307,"line_end":307,"column_start":10,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":560521,"byte_end":560536,"line_start":335,"line_end":335,"column_start":10,"column_end":25},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":561097,"byte_end":561114,"line_start":356,"line_end":356,"column_start":10,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":565134,"byte_end":565152,"line_start":450,"line_end":450,"column_start":10,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":567717,"byte_end":567730,"line_start":517,"line_end":517,"column_start":10,"column_end":23},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":568041,"byte_end":568053,"line_start":530,"line_end":530,"column_start":10,"column_end":22},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":569470,"byte_end":569481,"line_start":575,"line_end":575,"column_start":10,"column_end":21},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":571192,"byte_end":571203,"line_start":629,"line_end":629,"column_start":29,"column_end":40},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5224},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":571322,"byte_end":571333,"line_start":635,"line_end":635,"column_start":30,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5224},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/encoder.rs","byte_start":571434,"byte_end":571447,"line_start":641,"line_end":641,"column_start":10,"column_end":23},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":576938,"byte_end":576955,"line_start":163,"line_end":163,"column_start":6,"column_end":23},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":577467,"byte_end":577477,"line_start":177,"line_end":177,"column_start":6,"column_end":16},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":578447,"byte_end":578456,"line_start":202,"line_end":202,"column_start":6,"column_end":15},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":583130,"byte_end":583144,"line_start":324,"line_end":324,"column_start":43,"column_end":57},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2475},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":583743,"byte_end":583752,"line_start":343,"line_end":343,"column_start":29,"column_end":38},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":583945,"byte_end":583954,"line_start":352,"line_end":352,"column_start":30,"column_end":39},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":584148,"byte_end":584157,"line_start":361,"line_end":361,"column_start":29,"column_end":38},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/pnm/header.rs","byte_start":584352,"byte_end":584361,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":585380,"byte_end":585388,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":586568,"byte_end":586578,"line_start":67,"line_end":67,"column_start":22,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":598714,"byte_end":598724,"line_start":398,"line_end":398,"column_start":52,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2526},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/decoder.rs","byte_start":601299,"byte_end":601308,"line_start":472,"line_end":472,"column_start":31,"column_end":40},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2569},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":601953,"byte_end":601965,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5336},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602332,"byte_end":602342,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602498,"byte_end":602510,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5336},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":602599,"byte_end":602609,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/encoder.rs","byte_start":604058,"byte_end":604068,"line_start":85,"line_end":85,"column_start":33,"column_end":43},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2596},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/header.rs","byte_start":609440,"byte_end":609449,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tga/header.rs","byte_start":611495,"byte_end":611501,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":615249,"byte_end":615260,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":618062,"byte_end":618072,"line_start":108,"line_end":108,"column_start":6,"column_end":16},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":619827,"byte_end":619837,"line_start":148,"line_end":148,"column_start":18,"column_end":28},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2702},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":620257,"byte_end":620268,"line_start":162,"line_end":162,"column_start":52,"column_end":63},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2689},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":622990,"byte_end":623001,"line_start":239,"line_end":239,"column_start":23,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/tiff.rs","byte_start":624676,"byte_end":624687,"line_start":273,"line_end":273,"column_start":40,"column_end":51},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":3988}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":625751,"byte_end":625763,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5383},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":625900,"byte_end":625915,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2762},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626502,"byte_end":626512,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626669,"byte_end":626681,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5383},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":626907,"byte_end":626918,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":629791,"byte_end":629801,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2787},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/decoder.rs","byte_start":630214,"byte_end":630225,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2771},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":659807,"byte_end":659819,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5496},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":660838,"byte_end":660848,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4171},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":661005,"byte_end":661017,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5496},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":661138,"byte_end":661148,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":665481,"byte_end":665491,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":686767,"byte_end":686775,"line_start":1576,"line_end":1576,"column_start":6,"column_end":14},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687392,"byte_end":687400,"line_start":1599,"line_end":1599,"column_start":18,"column_end":26},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5399},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687465,"byte_end":687475,"line_start":1605,"line_end":1605,"column_start":6,"column_end":16},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687764,"byte_end":687774,"line_start":1617,"line_end":1617,"column_start":18,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5426},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":687841,"byte_end":687850,"line_start":1623,"line_end":1623,"column_start":6,"column_end":15},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/codecs/webp/vp8.rs","byte_start":688387,"byte_end":688396,"line_start":1641,"line_end":1641,"column_start":18,"column_end":27},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5450},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":710797,"byte_end":710803,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711393,"byte_end":711399,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3102},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":711918,"byte_end":711923,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":712996,"byte_end":713001,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/animation.rs","byte_start":719037,"byte_end":719045,"line_start":263,"line_end":263,"column_start":22,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":2,"index":32469},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722506,"byte_end":722512,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722756,"byte_end":722762,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":722911,"byte_end":722917,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":4921}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723126,"byte_end":723132,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723258,"byte_end":723264,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723679,"byte_end":723688,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3200},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":723944,"byte_end":723953,"line_start":95,"line_end":95,"column_start":47,"column_end":56},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3200},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724102,"byte_end":724111,"line_start":104,"line_end":104,"column_start":49,"column_end":58},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3200},"to":{"krate":2,"index":4921}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724359,"byte_end":724368,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3200},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":724934,"byte_end":724938,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":725837,"byte_end":725841,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726251,"byte_end":726255,"line_start":177,"line_end":177,"column_start":47,"column_end":51},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726404,"byte_end":726408,"line_start":186,"line_end":186,"column_start":49,"column_end":53},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":4921}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726775,"byte_end":726779,"line_start":200,"line_end":200,"column_start":26,"column_end":30},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":726903,"byte_end":726907,"line_start":206,"line_end":206,"column_start":31,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":727494,"byte_end":727501,"line_start":230,"line_end":230,"column_start":25,"column_end":32},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":728422,"byte_end":728429,"line_start":251,"line_end":251,"column_start":38,"column_end":45},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3249},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":728852,"byte_end":728859,"line_start":267,"line_end":267,"column_start":47,"column_end":54},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3249},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729008,"byte_end":729015,"line_start":276,"line_end":276,"column_start":49,"column_end":56},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3249},"to":{"krate":2,"index":4921}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729397,"byte_end":729404,"line_start":290,"line_end":290,"column_start":31,"column_end":38},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3249},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":729860,"byte_end":729875,"line_start":313,"line_end":313,"column_start":38,"column_end":53},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730278,"byte_end":730293,"line_start":331,"line_end":331,"column_start":47,"column_end":62},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730419,"byte_end":730434,"line_start":340,"line_end":340,"column_start":26,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":730610,"byte_end":730625,"line_start":349,"line_end":349,"column_start":31,"column_end":46},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3273},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731164,"byte_end":731177,"line_start":374,"line_end":374,"column_start":38,"column_end":51},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731715,"byte_end":731728,"line_start":398,"line_end":398,"column_start":47,"column_end":60},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":731852,"byte_end":731865,"line_start":407,"line_end":407,"column_start":26,"column_end":39},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":732035,"byte_end":732048,"line_start":416,"line_end":416,"column_start":31,"column_end":44},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":732576,"byte_end":732594,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3318},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733005,"byte_end":733023,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3318},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733154,"byte_end":733172,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3318},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":733720,"byte_end":733736,"line_start":493,"line_end":493,"column_start":38,"column_end":54},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3338},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734283,"byte_end":734299,"line_start":517,"line_end":517,"column_start":47,"column_end":63},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3338},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":734428,"byte_end":734444,"line_start":526,"line_end":526,"column_start":31,"column_end":47},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3338},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":737466,"byte_end":737477,"line_start":620,"line_end":620,"column_start":20,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":744302,"byte_end":744313,"line_start":815,"line_end":815,"column_start":20,"column_end":31},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":746911,"byte_end":746922,"line_start":890,"line_end":890,"column_start":20,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":747574,"byte_end":747585,"line_start":915,"line_end":915,"column_start":20,"column_end":31},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":748330,"byte_end":748341,"line_start":942,"line_end":942,"column_start":32,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":748610,"byte_end":748621,"line_start":957,"line_end":957,"column_start":30,"column_end":41},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":748885,"byte_end":748896,"line_start":970,"line_end":970,"column_start":33,"column_end":44},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":749162,"byte_end":749173,"line_start":981,"line_end":981,"column_start":42,"column_end":53},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":749444,"byte_end":749455,"line_start":994,"line_end":994,"column_start":45,"column_end":56},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":749716,"byte_end":749727,"line_start":1005,"line_end":1005,"column_start":30,"column_end":41},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5595},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":750086,"byte_end":750097,"line_start":1020,"line_end":1020,"column_start":41,"column_end":52},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5595},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":750921,"byte_end":750932,"line_start":1053,"line_end":1053,"column_start":37,"column_end":48},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5595},"to":{"krate":0,"index":4011}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":754517,"byte_end":754528,"line_start":1145,"line_end":1145,"column_start":26,"column_end":37},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":756962,"byte_end":756971,"line_start":1223,"line_end":1223,"column_start":6,"column_end":15},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/buffer.rs","byte_start":758369,"byte_end":758380,"line_start":1261,"line_end":1261,"column_start":67,"column_end":78},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5595},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":768973,"byte_end":768982,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":772728,"byte_end":772745,"line_start":150,"line_end":150,"column_start":6,"column_end":23},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":774069,"byte_end":774086,"line_start":185,"line_end":185,"column_start":26,"column_end":43},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5665},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":780186,"byte_end":780187,"line_start":391,"line_end":391,"column_start":32,"column_end":33},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3510},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":780625,"byte_end":780626,"line_start":405,"line_end":405,"column_start":29,"column_end":30},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3517},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":781882,"byte_end":781886,"line_start":449,"line_end":449,"column_start":53,"column_end":57},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782115,"byte_end":782119,"line_start":457,"line_end":457,"column_start":53,"column_end":57},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782347,"byte_end":782351,"line_start":465,"line_end":465,"column_start":52,"column_end":56},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782576,"byte_end":782580,"line_start":473,"line_end":473,"column_start":52,"column_end":56},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782807,"byte_end":782811,"line_start":481,"line_end":481,"column_start":54,"column_end":58},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":782959,"byte_end":782963,"line_start":488,"line_end":488,"column_start":31,"column_end":35},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783207,"byte_end":783211,"line_start":497,"line_end":497,"column_start":30,"column_end":34},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783455,"byte_end":783459,"line_start":506,"line_end":506,"column_start":31,"column_end":35},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783645,"byte_end":783649,"line_start":513,"line_end":513,"column_start":30,"column_end":34},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":783835,"byte_end":783839,"line_start":520,"line_end":520,"column_start":32,"column_end":36},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784027,"byte_end":784031,"line_start":527,"line_end":527,"column_start":31,"column_end":35},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784244,"byte_end":784248,"line_start":535,"line_end":535,"column_start":29,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784470,"byte_end":784474,"line_start":543,"line_end":543,"column_start":30,"column_end":34},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784698,"byte_end":784702,"line_start":551,"line_end":551,"column_start":29,"column_end":33},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":784924,"byte_end":784928,"line_start":559,"line_end":559,"column_start":30,"column_end":34},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":785203,"byte_end":785208,"line_start":570,"line_end":570,"column_start":53,"column_end":58},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":785470,"byte_end":785475,"line_start":579,"line_end":579,"column_start":53,"column_end":58},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":785736,"byte_end":785741,"line_start":588,"line_end":588,"column_start":52,"column_end":57},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786006,"byte_end":786011,"line_start":597,"line_end":597,"column_start":52,"column_end":57},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786277,"byte_end":786282,"line_start":606,"line_end":606,"column_start":53,"column_end":58},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786495,"byte_end":786500,"line_start":614,"line_end":614,"column_start":32,"column_end":37},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":786800,"byte_end":786805,"line_start":624,"line_end":624,"column_start":31,"column_end":36},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787100,"byte_end":787105,"line_start":634,"line_end":634,"column_start":30,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787357,"byte_end":787362,"line_start":643,"line_end":643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787626,"byte_end":787631,"line_start":652,"line_end":652,"column_start":30,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":787904,"byte_end":787909,"line_start":661,"line_end":661,"column_start":29,"column_end":34},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":788173,"byte_end":788178,"line_start":670,"line_end":670,"column_start":30,"column_end":35},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":788500,"byte_end":788504,"line_start":682,"line_end":682,"column_start":52,"column_end":56},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":788805,"byte_end":788809,"line_start":693,"line_end":693,"column_start":52,"column_end":56},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":789111,"byte_end":789115,"line_start":704,"line_end":704,"column_start":53,"column_end":57},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":789416,"byte_end":789420,"line_start":715,"line_end":715,"column_start":54,"column_end":58},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":789721,"byte_end":789725,"line_start":726,"line_end":726,"column_start":53,"column_end":57},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":790002,"byte_end":790006,"line_start":737,"line_end":737,"column_start":31,"column_end":35},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":790368,"byte_end":790372,"line_start":748,"line_end":748,"column_start":30,"column_end":34},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":790722,"byte_end":790726,"line_start":759,"line_end":759,"column_start":31,"column_end":35},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":791081,"byte_end":791085,"line_start":772,"line_end":772,"column_start":29,"column_end":33},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":791417,"byte_end":791421,"line_start":783,"line_end":783,"column_start":30,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":791740,"byte_end":791744,"line_start":795,"line_end":795,"column_start":29,"column_end":33},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":792076,"byte_end":792080,"line_start":806,"line_end":806,"column_start":30,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":792471,"byte_end":792475,"line_start":819,"line_end":819,"column_start":52,"column_end":56},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":792776,"byte_end":792780,"line_start":830,"line_end":830,"column_start":52,"column_end":56},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":793082,"byte_end":793086,"line_start":841,"line_end":841,"column_start":53,"column_end":57},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":793387,"byte_end":793391,"line_start":852,"line_end":852,"column_start":54,"column_end":58},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":793692,"byte_end":793696,"line_start":863,"line_end":863,"column_start":53,"column_end":57},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794020,"byte_end":794023,"line_start":877,"line_end":877,"column_start":53,"column_end":56},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794292,"byte_end":794295,"line_start":887,"line_end":887,"column_start":53,"column_end":56},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794563,"byte_end":794566,"line_start":897,"line_end":897,"column_start":52,"column_end":55},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":794831,"byte_end":794834,"line_start":907,"line_end":907,"column_start":54,"column_end":57},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795098,"byte_end":795101,"line_start":917,"line_end":917,"column_start":53,"column_end":56},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795339,"byte_end":795342,"line_start":927,"line_end":927,"column_start":30,"column_end":33},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795567,"byte_end":795570,"line_start":935,"line_end":935,"column_start":29,"column_end":32},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":795795,"byte_end":795798,"line_start":943,"line_end":943,"column_start":31,"column_end":34},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796081,"byte_end":796084,"line_start":954,"line_end":954,"column_start":30,"column_end":33},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796381,"byte_end":796384,"line_start":964,"line_end":964,"column_start":30,"column_end":33},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796663,"byte_end":796666,"line_start":975,"line_end":975,"column_start":29,"column_end":32},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":796958,"byte_end":796961,"line_start":985,"line_end":985,"column_start":30,"column_end":33},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":797307,"byte_end":797310,"line_start":998,"line_end":998,"column_start":53,"column_end":56},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":797578,"byte_end":797581,"line_start":1008,"line_end":1008,"column_start":52,"column_end":55},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":797846,"byte_end":797849,"line_start":1019,"line_end":1019,"column_start":53,"column_end":56},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":798119,"byte_end":798122,"line_start":1029,"line_end":1029,"column_start":54,"column_end":57},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":798386,"byte_end":798389,"line_start":1039,"line_end":1039,"column_start":53,"column_end":56},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":800055,"byte_end":800060,"line_start":1093,"line_end":1093,"column_start":30,"column_end":35},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3680}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":801065,"byte_end":801069,"line_start":1126,"line_end":1126,"column_start":30,"column_end":34},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3680}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":801179,"byte_end":801183,"line_start":1132,"line_end":1132,"column_start":30,"column_end":34},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3680}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":803391,"byte_end":803395,"line_start":1190,"line_end":1190,"column_start":30,"column_end":34},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3680}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":805601,"byte_end":805604,"line_start":1246,"line_end":1246,"column_start":30,"column_end":33},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3680}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":805713,"byte_end":805716,"line_start":1252,"line_end":1252,"column_start":30,"column_end":33},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3680}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":805935,"byte_end":805940,"line_start":1265,"line_end":1265,"column_start":31,"column_end":36},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6178},"to":{"krate":0,"index":3700}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806113,"byte_end":806117,"line_start":1274,"line_end":1274,"column_start":31,"column_end":35},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6091},"to":{"krate":0,"index":3700}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806305,"byte_end":806309,"line_start":1285,"line_end":1285,"column_start":31,"column_end":35},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6120},"to":{"krate":0,"index":3700}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806522,"byte_end":806526,"line_start":1296,"line_end":1296,"column_start":31,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6149},"to":{"krate":0,"index":3700}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":806739,"byte_end":806742,"line_start":1307,"line_end":1307,"column_start":31,"column_end":34},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6033},"to":{"krate":0,"index":3700}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/color.rs","byte_start":807004,"byte_end":807007,"line_start":1321,"line_end":1321,"column_start":31,"column_end":34},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6062},"to":{"krate":0,"index":3700}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":818721,"byte_end":818733,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":850066,"byte_end":850078,"line_start":1040,"line_end":1040,"column_start":27,"column_end":39},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6258},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/dynimage.rs","byte_start":850611,"byte_end":850623,"line_start":1062,"line_end":1062,"column_start":23,"column_end":35},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6258},"to":{"krate":0,"index":4011}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":863195,"byte_end":863206,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":869868,"byte_end":869885,"line_start":259,"line_end":259,"column_start":28,"column_end":45},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6348},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":871280,"byte_end":871295,"line_start":298,"line_end":298,"column_start":6,"column_end":21},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880154,"byte_end":880162,"line_start":506,"line_end":506,"column_start":6,"column_end":14},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":880668,"byte_end":880673,"line_start":526,"line_end":526,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":3966}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884369,"byte_end":884381,"line_start":623,"line_end":623,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3966},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":884388,"byte_end":884393,"line_start":623,"line_end":623,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":3979}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":886810,"byte_end":886816,"line_start":696,"line_end":696,"column_start":44,"column_end":50},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6399},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":887284,"byte_end":887290,"line_start":718,"line_end":718,"column_start":27,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6399},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":889988,"byte_end":890004,"line_start":806,"line_end":806,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3998},"to":{"krate":0,"index":4011}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":895957,"byte_end":895965,"line_start":958,"line_end":958,"column_start":9,"column_end":17},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":897183,"byte_end":897191,"line_start":1000,"line_end":1000,"column_start":30,"column_end":38},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4023},"to":{"krate":0,"index":3998}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/image.rs","byte_start":898012,"byte_end":898020,"line_start":1032,"line_end":1032,"column_start":26,"column_end":34},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4023},"to":{"krate":0,"index":4011}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911522,"byte_end":911537,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":4151},"to":{"krate":0,"index":4071}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911891,"byte_end":911895,"line_start":30,"line_end":30,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":4077}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911898,"byte_end":911905,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":33,"index":175},"to":{"krate":0,"index":4077}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911908,"byte_end":911911,"line_start":30,"line_end":30,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":33,"index":615},"to":{"krate":0,"index":4077}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911914,"byte_end":911924,"line_start":30,"line_end":30,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1690},"to":{"krate":0,"index":4077}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911933,"byte_end":911938,"line_start":30,"line_end":30,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":4077}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":911941,"byte_end":911948,"line_start":30,"line_end":30,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":33,"index":92},"to":{"krate":0,"index":4077}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912424,"byte_end":912429,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":4090}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912432,"byte_end":912439,"line_start":47,"line_end":47,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":33,"index":92},"to":{"krate":0,"index":4090}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912442,"byte_end":912449,"line_start":47,"line_end":47,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":33,"index":175},"to":{"krate":0,"index":4090}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":912998,"byte_end":913005,"line_start":71,"line_end":71,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":33,"index":92},"to":{"krate":0,"index":4099}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913008,"byte_end":913015,"line_start":71,"line_end":71,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":33,"index":175},"to":{"krate":0,"index":4099}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913790,"byte_end":913794,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":4108}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.23.14/./src/traits.rs","byte_start":913797,"byte_end":913802,"line_start":105,"line_end":105,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":4108}}]}