{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2","program":"/Users/louisjohnson/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","gif","--edition=2018","/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"raii_no_panic\"","--cfg","feature=\"std\"","-C","metadata=afad92c2d5335a67","-C","extra-filename=-afad92c2d5335a67","--out-dir","/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps","-L","dependency=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps","--extern","color_quant=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libcolor_quant-cc3b329349af9cb9.rmeta","--extern","weezl=/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libweezl-fb93b9f3283acaa2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/louisjohnson/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/louisjohnson/Desktop/Rust/aseprite-packer/target/rls/debug/deps/libgif-afad92c2d5335a67.rmeta"},"prelude":{"crate_id":{"name":"gif","disambiguator":[2061976320223206446,3845890168723501131]},"crate_root":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src","external_crates":[{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","num":15,"id":{"name":"color_quant","disambiguator":[17211418762331747578,17982352778426425989]}},{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","num":16,"id":{"name":"weezl","disambiguator":[17999653381619401868,3768301564094437981]}}],"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":0,"byte_end":4714,"line_start":1,"line_end":151,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3521,"byte_end":3533,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"alias_span":null,"name":"AnyExtension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3521,"byte_end":3533,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"alias_span":null,"name":"AnyExtension","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3535,"byte_end":3540,"line_start":117,"line_end":117,"column_start":39,"column_end":44},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3542,"byte_end":3551,"line_start":117,"line_end":117,"column_start":46,"column_end":55},"alias_span":null,"name":"Extension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3553,"byte_end":3567,"line_start":117,"line_end":117,"column_start":57,"column_end":71},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3569,"byte_end":3574,"line_start":117,"line_end":117,"column_start":73,"column_end":78},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3602,"byte_end":3618,"line_start":119,"line_end":119,"column_start":25,"column_end":41},"alias_span":null,"name":"StreamingDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3620,"byte_end":3627,"line_start":119,"line_end":119,"column_start":43,"column_end":50},"alias_span":null,"name":"Decoded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3629,"byte_end":3642,"line_start":119,"line_end":119,"column_start":52,"column_end":65},"alias_span":null,"name":"DecodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3644,"byte_end":3663,"line_start":119,"line_end":119,"column_start":67,"column_end":86},"alias_span":null,"name":"DecodingFormatError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3736,"byte_end":3747,"line_start":121,"line_end":121,"column_start":25,"column_end":36},"alias_span":null,"name":"ColorOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3749,"byte_end":3760,"line_start":121,"line_end":121,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3749,"byte_end":3760,"line_start":121,"line_end":121,"column_start":38,"column_end":49},"alias_span":null,"name":"MemoryLimit","value":"","parent":{"krate":0,"index":295}},{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3762,"byte_end":3772,"line_start":121,"line_end":121,"column_start":51,"column_end":61},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":571},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3799,"byte_end":3812,"line_start":122,"line_end":122,"column_start":25,"column_end":38},"alias_span":null,"name":"DecodeOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3814,"byte_end":3821,"line_start":122,"line_end":122,"column_start":40,"column_end":47},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3850,"byte_end":3857,"line_start":124,"line_end":124,"column_start":26,"column_end":33},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3859,"byte_end":3872,"line_start":124,"line_end":124,"column_start":35,"column_end":48},"alias_span":null,"name":"ExtensionData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3874,"byte_end":3880,"line_start":124,"line_end":124,"column_start":50,"column_end":56},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3882,"byte_end":3895,"line_start":124,"line_end":124,"column_start":58,"column_end":71},"alias_span":null,"name":"EncodingError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":0,"byte_end":4714,"line_start":1,"line_end":151,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":20},{"krate":0,"index":45},{"krate":0,"index":197},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":696},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":716},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":611}],"decl_id":null,"docs":" # GIF en- and decoding library [![Build Status](https://github.com/image-rs/image-gif/workflows/Rust%20CI/badge.svg)](https://github.com/image-rs/image-gif/actions)\n \n GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).\n \n # GIF encoding and decoding library\n \n This library provides all functions necessary to de- and encode GIF files.\n \n ## High level interface\n \n The high level interface consists of the two types\n [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).\n \n ### Decoding GIF files\n \n ```rust\n // Open the file\n use std::fs::File;\n let mut decoder = gif::DecodeOptions::new();\n // Configure the decoder such that it will expand the image to RGBA.\n decoder.set_color_output(gif::ColorOutput::RGBA);\n // Read the file header\n let file = File::open(\"tests/samples/sample_1.gif\").unwrap();\n let mut decoder = decoder.read_info(file).unwrap();\n while let Some(frame) = decoder.read_next_frame().unwrap() {\n     // Process every frame\n }\n ```\n \n \n \n ### Encoding GIF files","sig":null,"attributes":[{"value":"! # GIF en- and decoding library [![Build Status](https://github.com/image-rs/image-gif/workflows/Rust%20CI/badge.svg)](https://github.com/image-rs/image-gif/actions)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":0,"byte_end":168,"line_start":1,"line_end":1,"column_start":1,"column_end":169}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":169,"byte_end":173,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"! GIF en- and decoder written in Rust ([API Documentation](https://docs.rs/gif)).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":174,"byte_end":257,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":258,"byte_end":262,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"! # GIF encoding and decoding library","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":263,"byte_end":302,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":303,"byte_end":307,"line_start":6,"line_end":6,"column_start":1,"column_end":5}},{"value":"! This library provides all functions necessary to de- and encode GIF files.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":308,"byte_end":386,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":387,"byte_end":391,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"! ## High level interface","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":392,"byte_end":419,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":420,"byte_end":424,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"! The high level interface consists of the two types","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":425,"byte_end":479,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"! [`Encoder`](struct.Encoder.html) and [`Decoder`](struct.Decoder.html).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":480,"byte_end":554,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":555,"byte_end":559,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"! ### Decoding GIF files","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":560,"byte_end":586,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":587,"byte_end":591,"line_start":15,"line_end":15,"column_start":1,"column_end":5}},{"value":"! ```rust","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":592,"byte_end":603,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"! // Open the file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":604,"byte_end":624,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"! use std::fs::File;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":625,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"! let mut decoder = gif::DecodeOptions::new();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":648,"byte_end":696,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"! // Configure the decoder such that it will expand the image to RGBA.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":697,"byte_end":769,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"! decoder.set_color_output(gif::ColorOutput::RGBA);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":770,"byte_end":823,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"! // Read the file header","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":824,"byte_end":851,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"! let file = File::open(\"tests/samples/sample_1.gif\").unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":852,"byte_end":917,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"! let mut decoder = decoder.read_info(file).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":918,"byte_end":973,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"! while let Some(frame) = decoder.read_next_frame().unwrap() {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":974,"byte_end":1038,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"!     // Process every frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1039,"byte_end":1069,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1070,"byte_end":1075,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1076,"byte_end":1083,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1084,"byte_end":1088,"line_start":29,"line_end":29,"column_start":1,"column_end":5}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1089,"byte_end":1093,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1094,"byte_end":1098,"line_start":31,"line_end":31,"column_start":1,"column_end":5}},{"value":"! ### Encoding GIF files","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1099,"byte_end":1125,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1126,"byte_end":1129,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The encoder can be used so save simple computer generated images:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1130,"byte_end":1199,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1200,"byte_end":1204,"line_start":35,"line_end":35,"column_start":1,"column_end":5}},{"value":"! ```rust","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1205,"byte_end":1216,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"! use gif::{Frame, Encoder, Repeat};","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1217,"byte_end":1255,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"! use std::fs::File;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1256,"byte_end":1278,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"! use std::borrow::Cow;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1279,"byte_end":1304,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1305,"byte_end":1309,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"! let color_map = &[0xFF, 0xFF, 0xFF, 0, 0, 0];","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1310,"byte_end":1359,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"! let (width, height) = (6, 6);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1360,"byte_end":1393,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"! let mut beacon_states = [[","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1394,"byte_end":1424,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1425,"byte_end":1450,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"!     0, 1, 1, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1451,"byte_end":1476,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!     0, 1, 1, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1477,"byte_end":1502,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 1, 1, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1503,"byte_end":1528,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 1, 1, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1529,"byte_end":1554,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1555,"byte_end":1580,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"! ], [","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1581,"byte_end":1589,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1590,"byte_end":1615,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"!     0, 1, 1, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1616,"byte_end":1641,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"!     0, 1, 0, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1642,"byte_end":1667,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 0, 1, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1668,"byte_end":1693,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 1, 1, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1694,"byte_end":1719,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"!     0, 0, 0, 0, 0, 0,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1720,"byte_end":1745,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"! ]];","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1746,"byte_end":1753,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"! let mut image = File::create(\"tests/samples/beacon.gif\").unwrap();;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1754,"byte_end":1825,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"! let mut encoder = Encoder::new(&mut image, width, height, color_map).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1826,"byte_end":1908,"line_start":59,"line_end":59,"column_start":1,"column_end":83}},{"value":"! encoder.set_repeat(Repeat::Infinite).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1909,"byte_end":1959,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"! for state in &beacon_states {","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1960,"byte_end":1993,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"!     let mut frame = Frame::default();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":1994,"byte_end":2035,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"!     frame.width = width;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2036,"byte_end":2064,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"!     frame.height = height;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2065,"byte_end":2095,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"!     frame.buffer = Cow::Borrowed(&*state);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2096,"byte_end":2142,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"!     encoder.write_frame(&frame).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2143,"byte_end":2188,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2189,"byte_end":2194,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2195,"byte_end":2202,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2203,"byte_end":2206,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`Frame::from_*`](struct.Frame.html) can be used to convert a true color image to a paletted","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2207,"byte_end":2303,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"! image with a maximum of 256 colors:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2304,"byte_end":2343,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2344,"byte_end":2347,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2348,"byte_end":2359,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"! use std::fs::File;","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2360,"byte_end":2382,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"! ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2383,"byte_end":2387,"line_start":75,"line_end":75,"column_start":1,"column_end":5}},{"value":"! // Get pixel data from some source","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2388,"byte_end":2426,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"! let mut pixels: Vec<u8> = vec![0; 30_000];","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2427,"byte_end":2473,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"! // Create frame from data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2474,"byte_end":2503,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"! let frame = gif::Frame::from_rgb(100, 100, &mut *pixels);","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2504,"byte_end":2565,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"! // Create encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2566,"byte_end":2587,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"! let mut image = File::create(\"target/indexed_color.gif\").unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2588,"byte_end":2658,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"! let mut encoder = gif::Encoder::new(&mut image, frame.width, frame.height, &[]).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2659,"byte_end":2752,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"! // Write frame to file","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2753,"byte_end":2779,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"! encoder.write_frame(&frame).unwrap();","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2780,"byte_end":2821,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! ```","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":2822,"byte_end":2829,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3398,"byte_end":3420,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/lib.rs","byte_start":3421,"byte_end":3445,"line_start":110,"line_end":110,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6162,"byte_end":6165,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Any","qualname":"::common::DisposalMethod::Any","value":"DisposalMethod::Any","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" StreamingDecoder is not required to take any action.\n","sig":null,"attributes":[{"value":"/ StreamingDecoder is not required to take any action.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6101,"byte_end":6157,"line_start":10,"line_end":10,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":310},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6199,"byte_end":6203,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Keep","qualname":"::common::DisposalMethod::Keep","value":"DisposalMethod::Keep","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Do not dispose.\n","sig":null,"attributes":[{"value":"/ Do not dispose.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6175,"byte_end":6194,"line_start":12,"line_end":12,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":313},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6250,"byte_end":6260,"line_start":15,"line_end":15,"column_start":5,"column_end":15},"name":"Background","qualname":"::common::DisposalMethod::Background","value":"DisposalMethod::Background","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Restore to background color.\n","sig":null,"attributes":[{"value":"/ Restore to background color.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6213,"byte_end":6245,"line_start":14,"line_end":14,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":316},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6299,"byte_end":6307,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Previous","qualname":"::common::DisposalMethod::Previous","value":"DisposalMethod::Previous","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Restore to previous.\n","sig":null,"attributes":[{"value":"/ Restore to previous.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6270,"byte_end":6294,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":306},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6080,"byte_end":6094,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"DisposalMethod","qualname":"::common::DisposalMethod","value":"pub enum DisposalMethod {\n\n    /// StreamingDecoder is not required to take any action.\n    Any = ,\n\n    /// Do not dispose.\n    Keep = ,\n\n    /// Restore to background color.\n    Background = ,\n\n    /// Restore to previous.\n    Previous = ,\n}","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316}],"decl_id":null,"docs":" Disposal method\n","sig":null,"attributes":[{"value":"/ Disposal method","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":5994,"byte_end":6013,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"repr(u8)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6059,"byte_end":6070,"line_start":8,"line_end":8,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6389,"byte_end":6396,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<DisposalMethod>::from_u8","value":"pub fn from_u8(u8) -> Option<DisposalMethod>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6342,"byte_end":6377,"line_start":21,"line_end":21,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7401,"byte_end":7406,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Image","qualname":"::common::Block::Image","value":"Block::Image","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Image block.\n","sig":null,"attributes":[{"value":"/ Image block.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7380,"byte_end":7396,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7444,"byte_end":7453,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Extension","qualname":"::common::Block::Extension","value":"Block::Extension","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Extension block.\n","sig":null,"attributes":[{"value":"/ Extension block.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7419,"byte_end":7439,"line_start":48,"line_end":48,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7489,"byte_end":7496,"line_start":51,"line_end":51,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::common::Block::Trailer","value":"Block::Trailer","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Image trailer.\n","sig":null,"attributes":[{"value":"/ Image trailer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7466,"byte_end":7484,"line_start":50,"line_end":50,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":330},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7368,"byte_end":7373,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Block","qualname":"::common::Block","value":"pub enum Block {\n\n    /// Image block.\n    Image = ,\n\n    /// Extension block.\n    Extension = ,\n\n    /// Image trailer.\n    Trailer = ,\n}","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337}],"decl_id":null,"docs":" Known GIF block labels.","sig":null,"attributes":[{"value":"/ Known GIF block labels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6680,"byte_end":6707,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6708,"byte_end":6711,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Note that the block uniquely specifies the layout of bytes that follow and how they are","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6712,"byte_end":6803,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ framed. For example, the header always has a fixed length but is followed by a variable amount","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6804,"byte_end":6902,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ of additional data. An image descriptor may be followed by a local color table depending on","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6903,"byte_end":6998,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ information read in it. Therefore, it doesn't make sense to continue parsing after encountering","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6999,"byte_end":7098,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ an unknown block as the semantics of following bytes are unclear.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7099,"byte_end":7168,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7169,"byte_end":7172,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The extension block provides a common framing for an arbitrary amount of application specific","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7173,"byte_end":7270,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"/ data which may be ignored.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7271,"byte_end":7301,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"repr(u8)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7347,"byte_end":7358,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7572,"byte_end":7579,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Block>::from_u8","value":"pub fn from_u8(u8) -> Option<Block>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to `Option<Self>`\n","sig":null,"attributes":[{"value":"/ Converts `u8` to `Option<Self>`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7525,"byte_end":7560,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":351},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8351,"byte_end":8363,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"AnyExtension","qualname":"::common::AnyExtension","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype wrapper around an arbitrary extension ID.","sig":null,"attributes":[{"value":"/ A newtype wrapper around an arbitrary extension ID.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7791,"byte_end":7846,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7847,"byte_end":7850,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ An extension is some amount of byte data organized in sub-blocks so that one can skip over it","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7851,"byte_end":7948,"line_start":68,"line_end":68,"column_start":1,"column_end":98}},{"value":"/ without knowing the semantics. Though technically you likely want to use a `Application`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7949,"byte_end":8041,"line_start":69,"line_end":69,"column_start":1,"column_end":93}},{"value":"/ extension, the library tries to stay flexible here.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8042,"byte_end":8097,"line_start":70,"line_end":70,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8098,"byte_end":8101,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This allows us to customize the set of impls compared to a raw `u8`. It also clarifies the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8102,"byte_end":8196,"line_start":72,"line_end":72,"column_start":1,"column_end":95}},{"value":"/ intent and gives some inherent methods for interoperability with known extension types.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8197,"byte_end":8288,"line_start":73,"line_end":73,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":353},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8364,"byte_end":8370,"line_start":75,"line_end":75,"column_start":25,"column_end":31},"name":"0","qualname":"::common::AnyExtension::0","value":"u8","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9060,"byte_end":9064,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Text","qualname":"::common::Extension::Text","value":"Extension::Text","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Plain Text extension.","sig":null,"attributes":[{"value":"/ Plain Text extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8630,"byte_end":8655,"line_start":84,"line_end":84,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8660,"byte_end":8663,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This instructs the decoder to render a text as characters in a grid of cells, in a","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8668,"byte_end":8754,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ mono-spaced font of its choosing. This is seldom actually implemented and ignored by","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8759,"byte_end":8847,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/ ImageMagick. The color is always taken from the global table which further complicates any","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8852,"byte_end":8946,"line_start":88,"line_end":88,"column_start":5,"column_end":99}},{"value":"/ use. No real information on the frame sequencing of this block is available in the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8951,"byte_end":9037,"line_start":89,"line_end":89,"column_start":5,"column_end":91}},{"value":"/ standard.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9042,"byte_end":9055,"line_start":90,"line_end":90,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":373},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9104,"byte_end":9111,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Control","qualname":"::common::Extension::Control","value":"Extension::Control","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Control extension.\n","sig":null,"attributes":[{"value":"/ Control extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9077,"byte_end":9099,"line_start":92,"line_end":92,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":376},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9151,"byte_end":9158,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Comment","qualname":"::common::Extension::Comment","value":"Extension::Comment","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Comment extension.\n","sig":null,"attributes":[{"value":"/ Comment extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9124,"byte_end":9146,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9422,"byte_end":9433,"line_start":101,"line_end":101,"column_start":5,"column_end":16},"name":"Application","qualname":"::common::Extension::Application","value":"Extension::Application","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" Application extension.","sig":null,"attributes":[{"value":"/ Application extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9171,"byte_end":9197,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9202,"byte_end":9205,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See [ImageMagick] for an idea of commonly recognized extensions.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9210,"byte_end":9278,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9283,"byte_end":9286,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [ImageMagick]: https://github.com/ImageMagick/ImageMagick/blob/b0b58c6303195928060f55f9c3ca8233ab7f7733/coders/gif.c#L1128","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9291,"byte_end":9417,"line_start":100,"line_end":100,"column_start":5,"column_end":131}}]},{"kind":"Enum","id":{"krate":0,"index":369},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8614,"byte_end":8623,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Extension","qualname":"::common::Extension","value":"pub enum Extension {\n\n    /// Plain Text extension.\n    ///\n    /// This instructs the decoder to render a text as characters in a grid of cells, in a\n    /// mono-spaced font of its choosing. This is seldom actually implemented and ignored by\n    /// ImageMagick. The color is always taken from the global table which further complicates any\n    /// use. No real information on the frame sequencing of this block is available in the\n    /// standard.\n    Text = ,\n\n    /// Control extension.\n    Control = ,\n\n    /// Comment extension.\n    Comment = ,\n\n    /// Application extension.\n    ///\n    /// See [ImageMagick] for an idea of commonly recognized extensions.\n    ///\n    /// [ImageMagick]: https://github.com/ImageMagick/ImageMagick/blob/b0b58c6303195928060f55f9c3ca8233ab7f7733/coders/gif.c#L1128\n    Application = ,\n}","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379}],"decl_id":null,"docs":" Known GIF extension labels.","sig":null,"attributes":[{"value":"/ Known GIF extension labels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8374,"byte_end":8405,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8406,"byte_end":8409,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ These are extensions which may be interpreted by the library and to which a specification with","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8410,"byte_end":8508,"line_start":79,"line_end":79,"column_start":1,"column_end":99}},{"value":"/ the internal data layout is known.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8509,"byte_end":8547,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"repr(u8)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":8593,"byte_end":8604,"line_start":82,"line_end":82,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9523,"byte_end":9533,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_known","qualname":"<AnyExtension>::into_known","value":"pub fn into_known(Self) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Decode the label as a known extension.\n","sig":null,"attributes":[{"value":"/ Decode the label as a known extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9469,"byte_end":9511,"line_start":105,"line_end":105,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9809,"byte_end":9816,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Extension>::from_u8","value":"pub fn from_u8(u8) -> Option<Extension>","parent":null,"children":[],"decl_id":null,"docs":" Converts `u8` to a `Extension` if it is known.\n","sig":null,"attributes":[{"value":"/ Converts `u8` to a `Extension` if it is known.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9747,"byte_end":9797,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10142,"byte_end":10147,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Frame","qualname":"::common::Frame","value":"Frame { delay, dispose, transparent, needs_user_input, top, left, width, height, interlaced, palette, buffer }","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" A GIF frame\n","sig":null,"attributes":[{"value":"/ A GIF frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10091,"byte_end":10106,"line_start":130,"line_end":130,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":395},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10202,"byte_end":10207,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"delay","qualname":"::common::Frame::delay","value":"u16","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Frame delay in units of 10 ms.\n","sig":null,"attributes":[{"value":"/ Frame delay in units of 10 ms.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10158,"byte_end":10193,"line_start":133,"line_end":133,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":396},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10247,"byte_end":10254,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"dispose","qualname":"::common::Frame::dispose","value":"common::DisposalMethod","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Disposal method.\n","sig":null,"attributes":[{"value":"/ Disposal method.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10218,"byte_end":10238,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":397},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10322,"byte_end":10333,"line_start":138,"line_end":138,"column_start":9,"column_end":20},"name":"transparent","qualname":"::common::Frame::transparent","value":"std::option::Option<u8>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Transparent index (if available).\n","sig":null,"attributes":[{"value":"/ Transparent index (if available).","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10276,"byte_end":10313,"line_start":137,"line_end":137,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":398},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10415,"byte_end":10431,"line_start":140,"line_end":140,"column_start":9,"column_end":25},"name":"needs_user_input","qualname":"::common::Frame::needs_user_input","value":"bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" True if the frame needs user input to be displayed.\n","sig":null,"attributes":[{"value":"/ True if the frame needs user input to be displayed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10351,"byte_end":10406,"line_start":139,"line_end":139,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":399},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10497,"byte_end":10500,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"name":"top","qualname":"::common::Frame::top","value":"u16","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Offset from the top border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the top border of the canvas.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10443,"byte_end":10488,"line_start":141,"line_end":141,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":400},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10566,"byte_end":10570,"line_start":144,"line_end":144,"column_start":9,"column_end":13},"name":"left","qualname":"::common::Frame::left","value":"u16","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Offset from the left border of the canvas.\n","sig":null,"attributes":[{"value":"/ Offset from the left border of the canvas.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10511,"byte_end":10557,"line_start":143,"line_end":143,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10613,"byte_end":10618,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"width","qualname":"::common::Frame::width","value":"u16","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Width of the frame.\n","sig":null,"attributes":[{"value":"/ Width of the frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10581,"byte_end":10604,"line_start":145,"line_end":145,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10662,"byte_end":10668,"line_start":148,"line_end":148,"column_start":9,"column_end":15},"name":"height","qualname":"::common::Frame::height","value":"u16","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Height of the frame.\n","sig":null,"attributes":[{"value":"/ Height of the frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10629,"byte_end":10653,"line_start":147,"line_end":147,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10724,"byte_end":10734,"line_start":150,"line_end":150,"column_start":9,"column_end":19},"name":"interlaced","qualname":"::common::Frame::interlaced","value":"bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" True if the image is interlaced.\n","sig":null,"attributes":[{"value":"/ True if the image is interlaced.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10679,"byte_end":10715,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":404},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10798,"byte_end":10805,"line_start":152,"line_end":152,"column_start":9,"column_end":16},"name":"palette","qualname":"::common::Frame::palette","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Frame local color palette if available.\n","sig":null,"attributes":[{"value":"/ Frame local color palette if available.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10746,"byte_end":10789,"line_start":151,"line_end":151,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10926,"byte_end":10932,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"name":"buffer","qualname":"::common::Frame::buffer","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Buffer containing the image data.\n Only indices unless configured differently.\n","sig":null,"attributes":[{"value":"/ Buffer containing the image data.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10828,"byte_end":10865,"line_start":153,"line_end":153,"column_start":5,"column_end":42}},{"value":"/ Only indices unless configured differently.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10870,"byte_end":10917,"line_start":154,"line_end":154,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12017,"byte_end":12026,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"from_rgba","qualname":"<Frame>::from_rgba","value":"pub fn from_rgba(u16, u16, &mut [u8]) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11393,"byte_end":11440,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11445,"byte_end":11448,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. The `gif` format does not support arbitrary alpha but only a 1-bit","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11453,"byte_end":11547,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ transparency mask per pixel. Any non-zero alpha value will be interpreted as a fully opaque","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11552,"byte_end":11647,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ pixel. Additionally, only 256 colors can appear in a single frame. The palette will be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11652,"byte_end":11742,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ reduced by the NeuQuant algorithm if necessary. Different frames have independent palettes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11747,"byte_end":11842,"line_start":182,"line_end":182,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11847,"byte_end":11850,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11855,"byte_end":11906,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11911,"byte_end":11914,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11919,"byte_end":11932,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 4`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11937,"byte_end":12005,"line_start":187,"line_end":187,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12969,"byte_end":12984,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"from_rgba_speed","qualname":"<Frame>::from_rgba_speed","value":"pub fn from_rgba_speed(u16, u16, &mut [u8], i32) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGBA format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGBA format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12159,"byte_end":12206,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12211,"byte_end":12214,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ `speed` is a value in the range [1, 30].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12219,"byte_end":12263,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/ The higher the value the faster it runs at the cost of image quality.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12268,"byte_end":12341,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/ A `speed` of 10 is a good compromise between speed and quality.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12346,"byte_end":12413,"line_start":196,"line_end":196,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12418,"byte_end":12421,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. The `gif` format does not support arbitrary alpha but only a 1-bit","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12426,"byte_end":12520,"line_start":198,"line_end":198,"column_start":5,"column_end":99}},{"value":"/ transparency mask per pixel. Any non-zero alpha value will be interpreted as a fully opaque","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12525,"byte_end":12620,"line_start":199,"line_end":199,"column_start":5,"column_end":100}},{"value":"/ pixel. Additionally, only 256 colors can appear in a single frame. The palette will be","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12625,"byte_end":12715,"line_start":200,"line_end":200,"column_start":5,"column_end":95}},{"value":"/ reduced by the NeuQuant algorithm if necessary. Different frames have independent palettes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12720,"byte_end":12815,"line_start":201,"line_end":201,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12820,"byte_end":12823,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12828,"byte_end":12841,"line_start":203,"line_end":203,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 4`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12846,"byte_end":12914,"line_start":204,"line_end":204,"column_start":5,"column_end":73}},{"value":"/ *   If `speed < 1` or `speed > 30`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":12919,"byte_end":12957,"line_start":205,"line_end":205,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14256,"byte_end":14275,"line_start":237,"line_end":237,"column_start":12,"column_end":31},"name":"from_palette_pixels","qualname":"<Frame>::from_palette_pixels","value":"pub fn from_palette_pixels(u16, u16, &[u8], &[u8], Option<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from a palette and indexed pixels.","sig":null,"attributes":[{"value":"/ Creates a frame from a palette and indexed pixels.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14045,"byte_end":14099,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14104,"byte_end":14107,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14112,"byte_end":14125,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14130,"byte_end":14194,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/ *   If the length of palette > `256 * 3`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14199,"byte_end":14244,"line_start":236,"line_end":236,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15062,"byte_end":15081,"line_start":257,"line_end":257,"column_start":12,"column_end":31},"name":"from_indexed_pixels","qualname":"<Frame>::from_indexed_pixels","value":"pub fn from_indexed_pixels(u16, u16, &[u8], Option<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from indexed pixels in the global palette.","sig":null,"attributes":[{"value":"/ Creates a frame from indexed pixels in the global palette.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14893,"byte_end":14955,"line_start":253,"line_end":253,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14960,"byte_end":14963,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14968,"byte_end":14981,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":14986,"byte_end":15050,"line_start":256,"line_end":256,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16030,"byte_end":16038,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Frame>::from_rgb","value":"pub fn from_rgb(u16, u16, &[u8]) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15575,"byte_end":15621,"line_start":272,"line_end":272,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15626,"byte_end":15629,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. In the `gif` format only 256 colors can appear in a single frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15634,"byte_end":15727,"line_start":274,"line_end":274,"column_start":5,"column_end":98}},{"value":"/ The palette will be reduced by the NeuQuant algorithm if necessary. Different frames have","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15732,"byte_end":15825,"line_start":275,"line_end":275,"column_start":5,"column_end":98}},{"value":"/ independent palettes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15830,"byte_end":15855,"line_start":276,"line_end":276,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15860,"byte_end":15863,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ *Note: This method is not optimized for speed.*","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15868,"byte_end":15919,"line_start":278,"line_end":278,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15924,"byte_end":15927,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15932,"byte_end":15945,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 3`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":15950,"byte_end":16018,"line_start":281,"line_end":281,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16815,"byte_end":16829,"line_start":300,"line_end":300,"column_start":12,"column_end":26},"name":"from_rgb_speed","qualname":"<Frame>::from_rgb_speed","value":"pub fn from_rgb_speed(u16, u16, &[u8], i32) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Creates a frame from pixels in RGB format.","sig":null,"attributes":[{"value":"/ Creates a frame from pixels in RGB format.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16166,"byte_end":16212,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16217,"byte_end":16220,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ `speed` is a value in the range [1, 30].","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16225,"byte_end":16269,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16274,"byte_end":16277,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is a lossy method. In the `gif` format only 256 colors can appear in a single frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16282,"byte_end":16375,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ The palette will be reduced by the NeuQuant algorithm if necessary. Different frames have","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16380,"byte_end":16473,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/ independent palettes.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16478,"byte_end":16503,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16508,"byte_end":16511,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ The higher the value the faster it runs at the cost of image quality.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16516,"byte_end":16589,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/ A `speed` of 10 is a good compromise between speed and quality.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16594,"byte_end":16661,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16666,"byte_end":16669,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Panics:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16674,"byte_end":16687,"line_start":297,"line_end":297,"column_start":5,"column_end":18}},{"value":"/ *   If the length of pixels does not equal `width * height * 3`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16692,"byte_end":16760,"line_start":298,"line_end":298,"column_start":5,"column_end":73}},{"value":"/ *   If `speed < 1` or `speed > 30`","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":16765,"byte_end":16803,"line_start":299,"line_end":299,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35063,"byte_end":35082,"line_start":18,"line_end":18,"column_start":12,"column_end":31},"name":"DecodingFormatError","qualname":"::reader::decoder::DecodingFormatError","value":"DecodingFormatError {  }","parent":null,"children":[{"krate":0,"index":413}],"decl_id":null,"docs":" An error returned in the case of the image not being formatted properly.\n","sig":null,"attributes":[{"value":"/ An error returned in the case of the image not being formatted properly.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":34958,"byte_end":35034,"line_start":16,"line_end":16,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35795,"byte_end":35801,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"name":"Format","qualname":"::reader::decoder::DecodingError::Format","value":"DecodingError::Format(DecodingFormatError)","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Returned if the image is found to be malformed.\n","sig":null,"attributes":[{"value":"/ Returned if the image is found to be malformed.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35739,"byte_end":35790,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35860,"byte_end":35862,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::decoder::DecodingError::Io","value":"DecodingError::Io(io::Error)","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35828,"byte_end":35855,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":416},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35719,"byte_end":35732,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"DecodingError","qualname":"::reader::decoder::DecodingError","value":"pub enum DecodingError {\n\n    /// Returned if the image is found to be malformed.\n    Format(DecodingFormatError),\n\n    /// Wraps `std::io::Error`.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":420}],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35690,"byte_end":35709,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":426},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36988,"byte_end":36992,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"Save","qualname":"::reader::decoder::Extensions::Save","value":"Extensions::Save","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Saves all extention data\n","sig":null,"attributes":[{"value":"/ Saves all extention data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36955,"byte_end":36983,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37089,"byte_end":37093,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Skip","qualname":"::reader::decoder::Extensions::Skip","value":"Extensions::Skip","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Skips the data of unknown extensions\n and extracts the data from known ones\n","sig":null,"attributes":[{"value":"/ Skips the data of unknown extensions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36998,"byte_end":37038,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/ and extracts the data from known ones","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37043,"byte_end":37084,"line_start":98,"line_end":98,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":425},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36938,"byte_end":36948,"line_start":94,"line_end":94,"column_start":10,"column_end":20},"name":"Extensions","qualname":"::reader::decoder::Extensions","value":"pub enum Extensions {\n\n    /// Saves all extention data\n    Save,\n\n    /// Skips the data of unknown extensions\n    /// and extracts the data from known ones\n    Skip,\n}","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":428}],"decl_id":null,"docs":" Configures how extensions should be handled\n","sig":null,"attributes":[{"value":"/ Configures how extensions should be handled","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36853,"byte_end":36900,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":437},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37222,"byte_end":37229,"line_start":106,"line_end":106,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::reader::decoder::Decoded::Nothing","value":"Decoded::Nothing","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Decoded nothing.\n","sig":null,"attributes":[{"value":"/ Decoded nothing.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37197,"byte_end":37217,"line_start":105,"line_end":105,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":439},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37259,"byte_end":37272,"line_start":108,"line_end":108,"column_start":5,"column_end":18},"name":"GlobalPalette","qualname":"::reader::decoder::Decoded::GlobalPalette","value":"Decoded::GlobalPalette(Vec<u8>)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Global palette.\n","sig":null,"attributes":[{"value":"/ Global palette.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37235,"byte_end":37254,"line_start":107,"line_end":107,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":442},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37348,"byte_end":37363,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"BackgroundColor","qualname":"::reader::decoder::Decoded::BackgroundColor","value":"Decoded::BackgroundColor(u8)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Index of the background color in the global palette.\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37287,"byte_end":37343,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":445},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37408,"byte_end":37415,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Trailer","qualname":"::reader::decoder::Decoded::Trailer","value":"Decoded::Trailer","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Decoded the image trailer.\n","sig":null,"attributes":[{"value":"/ Decoded the image trailer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37373,"byte_end":37403,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37451,"byte_end":37461,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"BlockStart","qualname":"::reader::decoder::Decoded::BlockStart","value":"Decoded::BlockStart(Block)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" The start of a block.\n","sig":null,"attributes":[{"value":"/ The start of a block.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37421,"byte_end":37446,"line_start":113,"line_end":113,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37693,"byte_end":37709,"line_start":119,"line_end":119,"column_start":5,"column_end":21},"name":"SubBlockFinished","qualname":"::reader::decoder::Decoded::SubBlockFinished","value":"Decoded::SubBlockFinished(AnyExtension, &'a [u8])","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Decoded a sub-block. More sub-block are available.","sig":null,"attributes":[{"value":"/ Decoded a sub-block. More sub-block are available.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37474,"byte_end":37528,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37533,"byte_end":37536,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Indicates the label of the extension which might be unknown. A label of `0` is used when","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37541,"byte_end":37633,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/ the sub block does not belong to an extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37638,"byte_end":37688,"line_start":118,"line_end":118,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37956,"byte_end":37969,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"BlockFinished","qualname":"::reader::decoder::Decoded::BlockFinished","value":"Decoded::BlockFinished(AnyExtension, &'a [u8])","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Decoded the last (or only) sub-block of a block.","sig":null,"attributes":[{"value":"/ Decoded the last (or only) sub-block of a block.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37739,"byte_end":37791,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37796,"byte_end":37799,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Indicates the label of the extension which might be unknown. A label of `0` is used when","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37804,"byte_end":37896,"line_start":122,"line_end":122,"column_start":5,"column_end":97}},{"value":"/ the sub block does not belong to an extension.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37901,"byte_end":37951,"line_start":123,"line_end":123,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38128,"byte_end":38133,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Frame","qualname":"::reader::decoder::Decoded::Frame","value":"Decoded::Frame(&'a Frame)","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Decoded all information of the next frame.","sig":null,"attributes":[{"value":"/ Decoded all information of the next frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37999,"byte_end":38045,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38050,"byte_end":38053,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned frame does **not** contain any owned image data.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38058,"byte_end":38123,"line_start":127,"line_end":127,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":461},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38207,"byte_end":38211,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"Data","qualname":"::reader::decoder::Decoded::Data","value":"Decoded::Data(&'a [u8])","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Decoded some data of the current frame.\n","sig":null,"attributes":[{"value":"/ Decoded some data of the current frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38159,"byte_end":38202,"line_start":129,"line_end":129,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":464},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38277,"byte_end":38284,"line_start":132,"line_end":132,"column_start":5,"column_end":12},"name":"DataEnd","qualname":"::reader::decoder::Decoded::DataEnd","value":"Decoded::DataEnd","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" No more data available the current frame.\n","sig":null,"attributes":[{"value":"/ No more data available the current frame.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":38227,"byte_end":38272,"line_start":131,"line_end":131,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":435},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37179,"byte_end":37186,"line_start":104,"line_end":104,"column_start":10,"column_end":17},"name":"Decoded","qualname":"::reader::decoder::Decoded","value":"pub enum Decoded<'a> {\n\n    /// Decoded nothing.\n    Nothing,\n\n    /// Global palette.\n    GlobalPalette(Vec<u8>),\n\n    /// Index of the background color in the global palette.\n    BackgroundColor(u8),\n\n    /// Decoded the image trailer.\n    Trailer,\n\n    /// The start of a block.\n    BlockStart(Block),\n\n    /// Decoded a sub-block. More sub-block are available.\n    ///\n    /// Indicates the label of the extension which might be unknown. A label of `0` is used when\n    /// the sub block does not belong to an extension.\n    SubBlockFinished(AnyExtension, &'a [u8]),\n\n    /// Decoded the last (or only) sub-block of a block.\n    ///\n    /// Indicates the label of the extension which might be unknown. A label of `0` is used when\n    /// the sub block does not belong to an extension.\n    BlockFinished(AnyExtension, &'a [u8]),\n\n    /// Decoded all information of the next frame.\n    ///\n    /// The returned frame does **not** contain any owned image data.\n    Frame(&'a Frame),\n\n    /// Decoded some data of the current frame.\n    Data(&'a [u8]),\n\n    /// No more data available the current frame.\n    DataEnd,\n}","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464}],"decl_id":null,"docs":" Indicates whether a certain object has been decoded\n","sig":null,"attributes":[{"value":"/ Indicates whether a certain object has been decoded","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":37097,"byte_end":37152,"line_start":102,"line_end":102,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":39453,"byte_end":39469,"line_start":189,"line_end":189,"column_start":12,"column_end":28},"name":"StreamingDecoder","qualname":"::reader::decoder::StreamingDecoder","value":"StreamingDecoder {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" GIF decoder which supports streaming\n","sig":null,"attributes":[{"value":"/ GIF decoder which supports streaming","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":39401,"byte_end":39441,"line_start":188,"line_end":188,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":39971,"byte_end":39974,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamingDecoder>::new","value":"pub fn new() -> StreamingDecoder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new streaming decoder\n","sig":null,"attributes":[{"value":"/ Creates a new streaming decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":39924,"byte_end":39959,"line_start":208,"line_end":208,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":40929,"byte_end":40935,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"update","qualname":"<StreamingDecoder>::update","value":"pub fn update<'a>(&'a mut Self, &[u8])\n-> Result<(usize, Decoded), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Updates the internal state of the decoder. ","sig":null,"attributes":[{"value":"/ Updates the internal state of the decoder. ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":40756,"byte_end":40803,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":40808,"byte_end":40811,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes consumed from the input buffer ","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":40816,"byte_end":40879,"line_start":234,"line_end":234,"column_start":5,"column_end":68}},{"value":"/ and the last decoding result.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":40884,"byte_end":40917,"line_start":235,"line_end":235,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":42721,"byte_end":42729,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"last_ext","qualname":"<StreamingDecoder>::last_ext","value":"pub fn last_ext(&Self) -> (AnyExtension, &[u8], bool)","parent":null,"children":[],"decl_id":null,"docs":" Returns the data of the last extension that has been decoded.\n","sig":null,"attributes":[{"value":"/ Returns the data of the last extension that has been decoded.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":42644,"byte_end":42709,"line_start":275,"line_end":275,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":42906,"byte_end":42923,"line_start":282,"line_end":282,"column_start":12,"column_end":29},"name":"current_frame_mut","qualname":"<StreamingDecoder>::current_frame_mut","value":"pub fn current_frame_mut<'a>(&'a mut Self) -> &'a mut Frame","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a mutable ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":42832,"byte_end":42849,"line_start":280,"line_end":280,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a mutable ref.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":42854,"byte_end":42894,"line_start":281,"line_end":281,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43090,"byte_end":43103,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"name":"current_frame","qualname":"<StreamingDecoder>::current_frame","value":"pub fn current_frame<'a>(&'a Self) -> &'a Frame","parent":null,"children":[],"decl_id":null,"docs":" Current frame info as a ref.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43024,"byte_end":43041,"line_start":286,"line_end":286,"column_start":5,"column_end":22}},{"value":"/ Current frame info as a ref.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43046,"byte_end":43078,"line_start":287,"line_end":287,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43226,"byte_end":43231,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"width","qualname":"<StreamingDecoder>::width","value":"pub fn width(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43192,"byte_end":43214,"line_start":292,"line_end":292,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43313,"byte_end":43319,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"height","qualname":"<StreamingDecoder>::height","value":"pub fn height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43278,"byte_end":43301,"line_start":297,"line_end":297,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43433,"byte_end":43447,"line_start":303,"line_end":303,"column_start":12,"column_end":26},"name":"set_extensions","qualname":"<StreamingDecoder>::set_extensions","value":"pub fn set_extensions(&mut Self, Extensions)","parent":null,"children":[],"decl_id":null,"docs":" Configure whether extensions are saved or skipped.\n","sig":null,"attributes":[{"value":"/ Configure whether extensions are saved or skipped.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":43367,"byte_end":43421,"line_start":302,"line_end":302,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":550},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18142,"byte_end":18146,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::reader::ColorOutput::RGBA","value":"ColorOutput::RGBA","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" The decoder expands the image data to 32bit RGBA.\n This affects:","sig":null,"attributes":[{"value":"/ The decoder expands the image data to 32bit RGBA.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17884,"byte_end":17937,"line_start":21,"line_end":21,"column_start":5,"column_end":58}},{"value":"/ This affects:","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17942,"byte_end":17959,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17964,"byte_end":17967,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/  - The buffer buffer of the `Frame` returned by `Decoder::read_next_frame`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17972,"byte_end":18051,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/  - `Decoder::fill_buffer`, `Decoder::buffer_size` and `Decoder::line_length`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18056,"byte_end":18137,"line_start":25,"line_end":25,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18206,"byte_end":18213,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Indexed","qualname":"::reader::ColorOutput::Indexed","value":"ColorOutput::Indexed","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" The decoder returns the raw indexed data.\n","sig":null,"attributes":[{"value":"/ The decoder returns the raw indexed data.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18156,"byte_end":18201,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":549},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17866,"byte_end":17877,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"ColorOutput","qualname":"::reader::ColorOutput","value":"pub enum ColorOutput {\n\n    /// The decoder expands the image data to 32bit RGBA.\n    /// This affects:\n    ///\n    ///  - The buffer buffer of the `Frame` returned by `Decoder::read_next_frame`.\n    ///  - `Decoder::fill_buffer`, `Decoder::buffer_size` and `Decoder::line_length`.\n    RGBA = ,\n\n    /// The decoder returns the raw indexed data.\n    Indexed = ,\n}","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":553}],"decl_id":null,"docs":" Output mode for the image data\n","sig":null,"attributes":[{"value":"/ Output mode for the image data","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17769,"byte_end":17803,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"repr(u8)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":17845,"byte_end":17856,"line_start":19,"line_end":19,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18352,"byte_end":18363,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"MemoryLimit","qualname":"::reader::MemoryLimit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory limit in bytes. `MemoryLimit::Some(0)` means\n that there is no memory limit set.\n","sig":null,"attributes":[{"value":"/ Memory limit in bytes. `MemoryLimit::Some(0)` means","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18246,"byte_end":18301,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/ that there is no memory limit set.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18302,"byte_end":18340,"line_start":33,"line_end":33,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18364,"byte_end":18371,"line_start":34,"line_end":34,"column_start":24,"column_end":31},"name":"0","qualname":"::reader::MemoryLimit::0","value":"u32","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18924,"byte_end":18937,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"DecodeOptions","qualname":"::reader::DecodeOptions","value":"DecodeOptions {  }","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"decl_id":null,"docs":" Options for opening a GIF decoder.\n","sig":null,"attributes":[{"value":"/ Options for opening a GIF decoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18850,"byte_end":18888,"line_start":53,"line_end":53,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19140,"byte_end":19143,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeOptions>::new","value":"pub fn new() -> DecodeOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder builder\n","sig":null,"attributes":[{"value":"/ Creates a new decoder builder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19095,"byte_end":19128,"line_start":63,"line_end":63,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19453,"byte_end":19469,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"set_color_output","qualname":"<DecodeOptions>::set_color_output","value":"pub fn set_color_output(&mut Self, ColorOutput)","parent":null,"children":[],"decl_id":null,"docs":" Configure how color data is decoded.\n","sig":null,"attributes":[{"value":"/ Configure how color data is decoded.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19401,"byte_end":19441,"line_start":73,"line_end":73,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19603,"byte_end":19619,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"set_memory_limit","qualname":"<DecodeOptions>::set_memory_limit","value":"pub fn set_memory_limit(&mut Self, MemoryLimit)","parent":null,"children":[],"decl_id":null,"docs":" Configure a memory limit for decoding.\n","sig":null,"attributes":[{"value":"/ Configure a memory limit for decoding.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19549,"byte_end":19591,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20266,"byte_end":20289,"line_start":93,"line_end":93,"column_start":12,"column_end":35},"name":"check_frame_consistency","qualname":"<DecodeOptions>::check_frame_consistency","value":"pub fn check_frame_consistency(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Configure if frames must be within the screen descriptor.","sig":null,"attributes":[{"value":"/ Configure if frames must be within the screen descriptor.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19699,"byte_end":19760,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19765,"byte_end":19768,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19773,"byte_end":19800,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19805,"byte_end":19808,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ When turned on, all frame descriptors being read must fit within the screen descriptor or","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19813,"byte_end":19906,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/ otherwise an error is returned and the stream left in an unspecified state.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19911,"byte_end":19990,"line_start":88,"line_end":88,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19995,"byte_end":19998,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ When turned off, frames may be arbitrarily larger or offset in relation to the screen. Many","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20003,"byte_end":20098,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ other decoder libraries handle this in highly divergent ways. This moves all checks to the","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20103,"byte_end":20197,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/ caller, for example to emulate a specific style.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20202,"byte_end":20254,"line_start":92,"line_end":92,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20975,"byte_end":20993,"line_start":108,"line_end":108,"column_start":12,"column_end":30},"name":"check_lzw_end_code","qualname":"<DecodeOptions>::check_lzw_end_code","value":"pub fn check_lzw_end_code(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Configure if LZW encoded blocks must end with a marker end code.","sig":null,"attributes":[{"value":"/ Configure if LZW encoded blocks must end with a marker end code.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20373,"byte_end":20441,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20446,"byte_end":20449,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The default is `false`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20454,"byte_end":20481,"line_start":99,"line_end":99,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20486,"byte_end":20489,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When turned on, all image data blocks—which are LZW encoded—must contain a special bit","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20494,"byte_end":20588,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/ sequence signalling the end of the data. LZW processing terminates when this code is","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20593,"byte_end":20681,"line_start":102,"line_end":102,"column_start":5,"column_end":93}},{"value":"/ encountered. The specification states that it must be the last code output by the encoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20686,"byte_end":20779,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ for an image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20784,"byte_end":20801,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20806,"byte_end":20809,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ When turned off then image data blocks can simply end. Note that this might silently ignore","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20814,"byte_end":20909,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ some bits of the last or second to last byte.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":20914,"byte_end":20963,"line_start":107,"line_end":107,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":21248,"byte_end":21257,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"read_info","qualname":"<DecodeOptions>::read_info","value":"pub fn read_info<R: Read>(Self, R) -> Result<Decoder<R>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the logical screen descriptor including the global color palette","sig":null,"attributes":[{"value":"/ Reads the logical screen descriptor including the global color palette","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":21072,"byte_end":21146,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":21151,"byte_end":21154,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns a `Decoder`. All decoder configuration has to be done beforehand.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":21159,"byte_end":21236,"line_start":114,"line_end":114,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22467,"byte_end":22474,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22420,"byte_end":22439,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/ GIF decoder","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22440,"byte_end":22455,"line_start":155,"line_end":155,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22796,"byte_end":22799,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Result<Self, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder with default options.\n","sig":null,"attributes":[{"value":"/ Create a new decoder with default options.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22738,"byte_end":22784,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22970,"byte_end":22975,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"build","qualname":"<Decoder<R>>::build","value":"pub fn build() -> DecodeOptions","parent":null,"children":[],"decl_id":null,"docs":" Return a builder that allows configuring limits etc.\n","sig":null,"attributes":[{"value":"/ Return a builder that allows configuring limits etc.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22902,"byte_end":22958,"line_start":172,"line_end":172,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":24816,"byte_end":24831,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"next_frame_info","qualname":"<Decoder<R>>::next_frame_info","value":"pub fn next_frame_info(&mut Self) -> Result<Option<&Frame>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next frame info\n","sig":null,"attributes":[{"value":"/ Returns the next frame info","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":24773,"byte_end":24804,"line_start":226,"line_end":226,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":25680,"byte_end":25695,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"read_next_frame","qualname":"<Decoder<R>>::read_next_frame","value":"pub fn read_next_frame(&mut Self) -> Result<Option<&Frame>, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next frame from the image.","sig":null,"attributes":[{"value":"/ Reads the next frame from the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":25531,"byte_end":25571,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":25576,"byte_end":25579,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Do not call `Self::next_frame_info` beforehand.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":25584,"byte_end":25635,"line_start":249,"line_end":249,"column_start":5,"column_end":56}},{"value":"/ Deinterlaces the result.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":25640,"byte_end":25668,"line_start":250,"line_end":250,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":26838,"byte_end":26854,"line_start":280,"line_end":280,"column_start":12,"column_end":28},"name":"read_into_buffer","qualname":"<Decoder<R>>::read_into_buffer","value":"pub fn read_into_buffer(&mut Self, &mut [u8]) -> Result<(), DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads the data of the current frame into a pre-allocated buffer.","sig":null,"attributes":[{"value":"/ Reads the data of the current frame into a pre-allocated buffer.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":26588,"byte_end":26656,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":26661,"byte_end":26664,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":26669,"byte_end":26727,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"/ The length of `buf` must be at least `Self::buffer_size`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":26732,"byte_end":26793,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/ Deinterlaces the result.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":26798,"byte_end":26826,"line_start":279,"line_end":279,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":27876,"byte_end":27887,"line_start":303,"line_end":303,"column_start":12,"column_end":23},"name":"fill_buffer","qualname":"<Decoder<R>>::fill_buffer","value":"pub fn fill_buffer(&mut Self, &mut [u8]) -> Result<bool, DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Reads data of the current frame into a pre-allocated buffer until the buffer has been\n filled completely.","sig":null,"attributes":[{"value":"/ Reads data of the current frame into a pre-allocated buffer until the buffer has been","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":27549,"byte_end":27638,"line_start":298,"line_end":298,"column_start":5,"column_end":94}},{"value":"/ filled completely.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":27643,"byte_end":27665,"line_start":299,"line_end":299,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":27670,"byte_end":27673,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ `Self::next_frame_info` needs to be called beforehand. Returns `true` if the supplied","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":27678,"byte_end":27767,"line_start":301,"line_end":301,"column_start":5,"column_end":94}},{"value":"/ buffer could be filled completely. Should not be called after `false` had been returned.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":27772,"byte_end":27864,"line_start":302,"line_end":302,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":30771,"byte_end":30782,"line_start":369,"line_end":369,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Decoder<R>>::buffer_size","value":"pub fn buffer_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Output buffer size\n","sig":null,"attributes":[{"value":"/ Output buffer size","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":30737,"byte_end":30759,"line_start":368,"line_end":368,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":30928,"byte_end":30939,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"line_length","qualname":"<Decoder<R>>::line_length","value":"pub fn line_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Line length of the current frame\n","sig":null,"attributes":[{"value":"/ Line length of the current frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":30880,"byte_end":30916,"line_start":373,"line_end":373,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31255,"byte_end":31262,"line_start":383,"line_end":383,"column_start":12,"column_end":19},"name":"palette","qualname":"<Decoder<R>>::palette","value":"pub fn palette(&Self) -> Result<&[u8], DecodingError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the color palette relevant for the current (next) frame\n","sig":null,"attributes":[{"value":"/ Returns the color palette relevant for the current (next) frame","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31176,"byte_end":31243,"line_start":382,"line_end":382,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31645,"byte_end":31659,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"global_palette","qualname":"<Decoder<R>>::global_palette","value":"pub fn global_palette(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" The global color palette\n","sig":null,"attributes":[{"value":"/ The global color palette","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31605,"byte_end":31633,"line_start":393,"line_end":393,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31782,"byte_end":31787,"line_start":399,"line_end":399,"column_start":12,"column_end":17},"name":"width","qualname":"<Decoder<R>>::width","value":"pub fn width(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Width of the image\n","sig":null,"attributes":[{"value":"/ Width of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31748,"byte_end":31770,"line_start":398,"line_end":398,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31887,"byte_end":31893,"line_start":404,"line_end":404,"column_start":12,"column_end":18},"name":"height","qualname":"<Decoder<R>>::height","value":"pub fn height(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Height of the image\n","sig":null,"attributes":[{"value":"/ Height of the image","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31852,"byte_end":31875,"line_start":403,"line_end":403,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":32026,"byte_end":32034,"line_start":409,"line_end":409,"column_start":12,"column_end":20},"name":"bg_color","qualname":"<Decoder<R>>::bg_color","value":"pub fn bg_color(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Index of the background color in the global palette\n","sig":null,"attributes":[{"value":"/ Index of the background color in the global palette","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":31959,"byte_end":32014,"line_start":408,"line_end":408,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":59621,"byte_end":59640,"line_start":23,"line_end":23,"column_start":12,"column_end":31},"name":"EncodingFormatError","qualname":"::encoder::EncodingFormatError","value":"EncodingFormatError {  }","parent":null,"children":[{"krate":0,"index":588}],"decl_id":null,"docs":" The image has incorrect properties, making it impossible to encode as a gif.\n","sig":null,"attributes":[{"value":"/ The image has incorrect properties, making it impossible to encode as a gif.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":59512,"byte_end":59592,"line_start":21,"line_end":21,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60359,"byte_end":60365,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Format","qualname":"::encoder::EncodingError::Format","value":"EncodingError::Format(EncodingFormatError)","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Returned if the to image is not encodable as a gif.\n","sig":null,"attributes":[{"value":"/ Returned if the to image is not encodable as a gif.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60299,"byte_end":60354,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60424,"byte_end":60426,"line_start":49,"line_end":49,"column_start":5,"column_end":7},"name":"Io","qualname":"::encoder::EncodingError::Io","value":"EncodingError::Io(io::Error)","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Wraps `std::io::Error`.\n","sig":null,"attributes":[{"value":"/ Wraps `std::io::Error`.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60392,"byte_end":60419,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":591},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60279,"byte_end":60292,"line_start":45,"line_end":45,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::encoder::EncodingError","value":"pub enum EncodingError {\n\n    /// Returned if the to image is not encodable as a gif.\n    Format(EncodingFormatError),\n\n    /// Wraps `std::io::Error`.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":595}],"decl_id":null,"docs":" Encoding error.\n","sig":null,"attributes":[{"value":"/ Encoding error.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60250,"byte_end":60269,"line_start":44,"line_end":44,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61455,"byte_end":61461,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"Finite","qualname":"::encoder::Repeat::Finite","value":"Repeat::Finite(u16)","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Finite number of repetitions\n","sig":null,"attributes":[{"value":"/ Finite number of repetitions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61418,"byte_end":61450,"line_start":92,"line_end":92,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":604},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61511,"byte_end":61519,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"name":"Infinite","qualname":"::encoder::Repeat::Infinite","value":"Repeat::Infinite","parent":{"krate":0,"index":600},"children":[],"decl_id":null,"docs":" Infinite number of repetitions\n","sig":null,"attributes":[{"value":"/ Infinite number of repetitions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61472,"byte_end":61506,"line_start":94,"line_end":94,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":600},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61405,"byte_end":61411,"line_start":91,"line_end":91,"column_start":10,"column_end":16},"name":"Repeat","qualname":"::encoder::Repeat","value":"pub enum Repeat {\n\n    /// Finite number of repetitions\n    Finite(u16),\n\n    /// Infinite number of repetitions\n    Infinite,\n}","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":604}],"decl_id":null,"docs":" Number of repetitions\n","sig":null,"attributes":[{"value":"/ Number of repetitions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61340,"byte_end":61365,"line_start":89,"line_end":89,"column_start":1,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":230},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61650,"byte_end":61657,"line_start":101,"line_end":101,"column_start":5,"column_end":12},"name":"Control","qualname":"::encoder::ExtensionData::Control","value":"ExtensionData::Control { flags, delay, trns }","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Control extension. Use `ExtensionData::new_control_ext` to construct.\n","sig":null,"attributes":[{"value":"/ Control extension. Use `ExtensionData::new_control_ext` to construct.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61572,"byte_end":61645,"line_start":100,"line_end":100,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61841,"byte_end":61852,"line_start":110,"line_end":110,"column_start":5,"column_end":16},"name":"Repetitions","qualname":"::encoder::ExtensionData::Repetitions","value":"ExtensionData::Repetitions(Repeat)","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Sets the number of repetitions\n","sig":null,"attributes":[{"value":"/ Sets the number of repetitions","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61802,"byte_end":61836,"line_start":109,"line_end":109,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":229},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61552,"byte_end":61565,"line_start":99,"line_end":99,"column_start":10,"column_end":23},"name":"ExtensionData","qualname":"::encoder::ExtensionData","value":"pub enum ExtensionData {\n\n    /// Control extension. Use `ExtensionData::new_control_ext` to construct.\n    Control {\n        /// Flags.\n        flags: u8,\n        /// Frame delay.\n        delay: u16,\n        /// Transparent index.\n        trns: u8,\n    },\n\n    /// Sets the number of repetitions\n    Repetitions(Repeat),\n}","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":234}],"decl_id":null,"docs":" Extension data.\n","sig":null,"attributes":[{"value":"/ Extension data.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61523,"byte_end":61542,"line_start":98,"line_end":98,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61997,"byte_end":62012,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"new_control_ext","qualname":"<ExtensionData>::new_control_ext","value":"pub fn new_control_ext(u16, DisposalMethod, bool, Option<u8>) -> ExtensionData","parent":null,"children":[],"decl_id":null,"docs":" Constructor for control extension data.","sig":null,"attributes":[{"value":"/ Constructor for control extension data.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61889,"byte_end":61932,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61937,"byte_end":61940,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ `delay` is given in units of 10 ms.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61945,"byte_end":61985,"line_start":116,"line_end":116,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64141,"byte_end":64148,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64113,"byte_end":64129,"line_start":197,"line_end":197,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64473,"byte_end":64476,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W, u16, u16, &[u8]) -> Result<Self, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder.","sig":null,"attributes":[{"value":"/ Creates a new encoder.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64264,"byte_end":64290,"line_start":206,"line_end":206,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64295,"byte_end":64298,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ `global_palette` gives the global color palette in the format `[r, g, b, ...]`,","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64303,"byte_end":64386,"line_start":208,"line_end":208,"column_start":5,"column_end":88}},{"value":"/ if no global palette shall be used an empty slice may be supplied.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64391,"byte_end":64461,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64819,"byte_end":64829,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"set_repeat","qualname":"<Encoder<W>>::set_repeat","value":"pub fn set_repeat(&mut Self, Repeat) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Write an extension block that signals a repeat behaviour.\n","sig":null,"attributes":[{"value":"/ Write an extension block that signals a repeat behaviour.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64746,"byte_end":64807,"line_start":219,"line_end":219,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":65012,"byte_end":65032,"line_start":225,"line_end":225,"column_start":12,"column_end":32},"name":"write_global_palette","qualname":"<Encoder<W>>::write_global_palette","value":"pub fn write_global_palette(Self, &[u8]) -> Result<Self, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes the global color palette.\n","sig":null,"attributes":[{"value":"/ Writes the global color palette.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64964,"byte_end":65000,"line_start":224,"line_end":224,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":65894,"byte_end":65905,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<Encoder<W>>::write_frame","value":"pub fn write_frame(&mut Self, &Frame) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes a frame to the image.","sig":null,"attributes":[{"value":"/ Writes a frame to the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":65768,"byte_end":65800,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":65805,"byte_end":65808,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Note: This function also writes a control extension if necessary.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":65813,"byte_end":65882,"line_start":245,"line_end":245,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":68586,"byte_end":68601,"line_start":317,"line_end":317,"column_start":12,"column_end":27},"name":"write_extension","qualname":"<Encoder<W>>::write_extension","value":"pub fn write_extension(&mut Self, ExtensionData) -> Result<(), EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" Writes an extension to the image.","sig":null,"attributes":[{"value":"/ Writes an extension to the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":68462,"byte_end":68499,"line_start":314,"line_end":314,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":68504,"byte_end":68507,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ It is normally not necessary to call this method manually.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":68512,"byte_end":68574,"line_start":316,"line_end":316,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":70161,"byte_end":70180,"line_start":353,"line_end":353,"column_start":12,"column_end":31},"name":"write_raw_extension","qualname":"<Encoder<W>>::write_raw_extension","value":"pub fn write_raw_extension(&mut Self, AnyExtension, &[&[u8]])\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a raw extension to the image.","sig":null,"attributes":[{"value":"/ Writes a raw extension to the image.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":69802,"byte_end":69842,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":69847,"byte_end":69850,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This method can be used to write an unsupported extension to the file. `func` is the extension","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":69855,"byte_end":69953,"line_start":350,"line_end":350,"column_start":5,"column_end":103}},{"value":"/ identifier (e.g. `Extension::Application as u8`). `data` are the extension payload blocks. If any","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":69958,"byte_end":70059,"line_start":351,"line_end":351,"column_start":5,"column_end":106}},{"value":"/ contained slice has a lenght > 255 it is automatically divided into sub-blocks.","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":70064,"byte_end":70149,"line_start":352,"line_end":352,"column_start":5,"column_end":88}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5151,"byte_end":5152,"line_start":17,"line_end":17,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5321,"byte_end":5322,"line_start":25,"line_end":25,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5512,"byte_end":5513,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5728,"byte_end":5729,"line_start":42,"line_end":42,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6321,"byte_end":6335,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7513,"byte_end":7518,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9450,"byte_end":9462,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9632,"byte_end":9644,"line_start":111,"line_end":111,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9731,"byte_end":9740,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10972,"byte_end":10977,"line_start":158,"line_end":158,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11372,"byte_end":11377,"line_start":176,"line_end":176,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35172,"byte_end":35191,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35340,"byte_end":35359,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35477,"byte_end":35496,"line_start":34,"line_end":34,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35883,"byte_end":35896,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36108,"byte_end":36121,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36360,"byte_end":36373,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36616,"byte_end":36629,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36745,"byte_end":36758,"line_start":86,"line_end":86,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":39901,"byte_end":39917,"line_start":207,"line_end":207,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18380,"byte_end":18391,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19075,"byte_end":19088,"line_start":62,"line_end":62,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":21537,"byte_end":21548,"line_start":126,"line_end":126,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22707,"byte_end":22714,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":32215,"byte_end":32232,"line_start":420,"line_end":420,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":59694,"byte_end":59713,"line_start":27,"line_end":27,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":59739,"byte_end":59758,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60120,"byte_end":60139,"line_start":37,"line_end":37,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60464,"byte_end":60477,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60711,"byte_end":60724,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60958,"byte_end":60971,"line_start":70,"line_end":70,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61087,"byte_end":61100,"line_start":76,"line_end":76,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61226,"byte_end":61239,"line_start":82,"line_end":82,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61869,"byte_end":61882,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":62666,"byte_end":62677,"line_start":144,"line_end":144,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":62878,"byte_end":62889,"line_start":154,"line_end":154,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":63630,"byte_end":63641,"line_start":178,"line_end":178,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64247,"byte_end":64254,"line_start":205,"line_end":205,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":70957,"byte_end":70964,"line_start":376,"line_end":376,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5151,"byte_end":5152,"line_start":17,"line_end":17,"column_start":51,"column_end":52},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5321,"byte_end":5322,"line_start":25,"line_end":25,"column_start":52,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":12},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5512,"byte_end":5513,"line_start":33,"line_end":33,"column_start":52,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/traits.rs","byte_start":5728,"byte_end":5729,"line_start":42,"line_end":42,"column_start":52,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":6321,"byte_end":6335,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":7513,"byte_end":7518,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9450,"byte_end":9462,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9632,"byte_end":9644,"line_start":111,"line_end":111,"column_start":26,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":351},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":9731,"byte_end":9740,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":10972,"byte_end":10977,"line_start":158,"line_end":158,"column_start":22,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/common.rs","byte_start":11372,"byte_end":11377,"line_start":176,"line_end":176,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35172,"byte_end":35191,"line_start":22,"line_end":22,"column_start":23,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35340,"byte_end":35359,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35477,"byte_end":35496,"line_start":34,"line_end":34,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":35883,"byte_end":35896,"line_start":53,"line_end":53,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36108,"byte_end":36121,"line_start":62,"line_end":62,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36360,"byte_end":36373,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":416},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36616,"byte_end":36629,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":36745,"byte_end":36758,"line_start":86,"line_end":86,"column_start":36,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/decoder.rs","byte_start":39901,"byte_end":39917,"line_start":207,"line_end":207,"column_start":6,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":18380,"byte_end":18391,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":19075,"byte_end":19088,"line_start":62,"line_end":62,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":21537,"byte_end":21548,"line_start":126,"line_end":126,"column_start":15,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":22707,"byte_end":22714,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/reader/mod.rs","byte_start":32215,"byte_end":32232,"line_start":420,"line_end":420,"column_start":25,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":59694,"byte_end":59713,"line_start":27,"line_end":27,"column_start":23,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":59739,"byte_end":59758,"line_start":28,"line_end":28,"column_start":23,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60120,"byte_end":60139,"line_start":37,"line_end":37,"column_start":32,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60464,"byte_end":60477,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60711,"byte_end":60724,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":591},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":60958,"byte_end":60971,"line_start":70,"line_end":70,"column_start":26,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61087,"byte_end":61100,"line_start":76,"line_end":76,"column_start":36,"column_end":49},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61226,"byte_end":61239,"line_start":82,"line_end":82,"column_start":32,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":61869,"byte_end":61882,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":62666,"byte_end":62677,"line_start":144,"line_end":144,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":62878,"byte_end":62889,"line_start":154,"line_end":154,"column_start":35,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":239},"to":{"krate":1,"index":3020}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":63630,"byte_end":63641,"line_start":178,"line_end":178,"column_start":34,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":64247,"byte_end":64254,"line_start":205,"line_end":205,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/louisjohnson/.cargo/registry/src/github.com-1ecc6299db9ec823/gif-0.11.2/src/encoder.rs","byte_start":70957,"byte_end":70964,"line_start":376,"line_end":376,"column_start":25,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":2122}}]}